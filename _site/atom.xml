<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Ben Ramey's Blog</title>
 <link href="/atom.xml" rel="self"/>
 <link href="https://www.benramey.com/"/>
 <updated>2020-05-12T20:47:23-05:00</updated>
 <id>https://www.benramey.com</id>
 <author>
   <name>Ben Ramey</name>
   <email>benramey@fastmail.com</email>
 </author>

 
 <entry>
   <title>Psalm 130</title>
   <link href="https://www.benramey.com/2020/05/12/psalm-130/"/>
   <updated>2020-05-12T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2020/05/12/psalm-130</id>
   <content type="html">&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Psalm 130 records the thoughts of a believer who goes through a remarkable transformation: from the depths of despair to proclaiming hope in the Lord to his nation.&lt;/p&gt;

&lt;p&gt;How does this transformation happen?&lt;/p&gt;

&lt;p&gt;This is not a psalm about a unique event or a special tragedy or an especially remarkable man accomplishing a gargantuan feat that no one can again accomplish.  This is not a super-Christian battling forces of darkness with fantastic spiritual super powers.&lt;/p&gt;

&lt;p&gt;No, instead, it is the straightforward revelation of a man’s internal thoughts as they transform from deep darkness to light; of despair to hope for the future; of desperation for his own rescue to confidence that others can be rescued as well.&lt;/p&gt;

&lt;p&gt;What we see in this psalm are the thought patterns of a mature believer; patterns we ought to emulate and repeat in our own lives.&lt;/p&gt;

&lt;p&gt;Now, when I say “mature believer”, I want to make sure you’ve got the same picture that I do.  I don’t mean someone who “has it all figured out”.  I definitely don’t mean someone who has reached some “higher spiritual plane”.  All I mean is someone who has walked with the Lord for a long time and has trained his thoughts in the patterns we’ll see.  He falls.  He fails.  He’s done it before and he’s experienced enough to recognize it and know how to get back up again.&lt;/p&gt;

&lt;p&gt;If we copy these patterns of thought, they will drive us to strengthen our upward confidence in the Lord and then mature us to expand our thoughts outward toward our fellow men.  But, it begins where it must: our inward thoughts, thoughts directed toward ourselves.&lt;/p&gt;

&lt;h2 id=&quot;inward&quot;&gt;Inward&lt;/h2&gt;
&lt;p&gt;Verses 1-2.&lt;/p&gt;

&lt;p&gt;The author of this psalm begins by revealing the state of his mind: his inward thoughts.  He uses only two words to do this: “the depths”.&lt;/p&gt;

&lt;h3 id=&quot;he-is-in-trouble&quot;&gt;He is in trouble&lt;/h3&gt;
&lt;p&gt;By themselves “the depths” might conjure up enough for us to imagine that he is in some kind of trouble.  He’s not feeling good.  But, this word isn’t just a word for how deep a hole might be.  Everywhere else it’s used in Scripture, it’s used to describe deep waters and especially the depths of the sea.  That’s another kind of “depths” altogether.&lt;/p&gt;

&lt;p&gt;If you’ve ever taken a swim you can begin to imagine the analogy he is painting.  You’ve probably felt the slight panic to get back to the surface when you stayed under the water a little too long.  You’ve perhaps felt the water pressure when you dove down to the deep end of the pool.&lt;/p&gt;

&lt;p&gt;But, the swimming pool is nothing like the depths of the sea.  When you get down deep, the light disappears.  The sunlight fades until there is only utter blackness.  If help was on the way to pull you out, you couldn’t see it coming.  You can’t even see your hand in front of your face.  You’re surrounded by darkness.  There are no waypoints.  No landmarks to recognize.  No signs to point the way of escape.&lt;/p&gt;

&lt;p&gt;All comfort of heat vanishes the deeper you sink.  Before much depth, the cold becomes unbearable.&lt;/p&gt;

&lt;p&gt;As the waters above increase, the pressure mounts until it would easily crush you.&lt;/p&gt;

&lt;p&gt;Then, of course, you cannot breath.  In the depths of the sea you are far from the surface, far from breath.  You will suffocate in a matter of minutes–certainly before you make it to the top on your own.&lt;/p&gt;

&lt;p&gt;Darkness, cold, pressure, suffocation–it paints a desperate, hopeless, life-threatening situation.  This man is in great trouble.&lt;/p&gt;

&lt;h3 id=&quot;he-admits-hes-in-trouble&quot;&gt;He admits he’s in trouble&lt;/h3&gt;
&lt;p&gt;But, notice the first thought pattern we can recognize of a mature believer.  It’s the one important thing he does first: he admits he’s in trouble.  There’s no denial here.  There’s no trying to make the situation not seem so bleak.  He’s in trouble he cannot escape.  He knows it and he says so.  This is the first thing we can note as the sign of a mature believer.  The mature believer makes honest confession of his desperate need.  He frankly admits his trouble and makes no attempt to hide it from himself or from the Lord.&lt;/p&gt;

&lt;h3 id=&quot;he-calls-out-to-the-lord&quot;&gt;He calls out to the Lord&lt;/h3&gt;
&lt;p&gt;The second thought pattern of a mature believer is quickly noticed next.  Admitting his situation has freed him ask for help.&lt;/p&gt;

&lt;p&gt;What would you do if you were sinking, with no one in sight to save you?&lt;/p&gt;

&lt;p&gt;I think my first instinct would be to call out as loudly as I could for someone–anyone at all–to come rescue me!&lt;/p&gt;

&lt;p&gt;My second oldest, Gideon, is not quite able to dress himself yet.  When he gets stuck in his shirt or can’t quite work the button on his pants, he has the habit of desperately calling out “Somebody! Anybody!”.  He doesn’t care if me or Grace or even his brother (sometimes) helps him.  He just needs someone to get this shirt off!&lt;/p&gt;

&lt;p&gt;But, this is not exactly what he does here.  He cries out.  But he specifically calls out to only one person: the Lord.  And there’s no doubt who he means.  He uses the name of the Lord, Yahweh.  He pleads with Him to hear his voice, to hear the voice of his supplications; or, “pleas for mercy” as the ESV translates it.&lt;/p&gt;

&lt;p&gt;It seems counterintuitive to call out for a specific person.  If he’s truly desperate wouldn’t any help be welcome, no matter who it came from?  But, this too is a thought pattern of a mature believer.  He knows the One who not only can save him, but is willing to save him. There is only One such person and He is the Lord.&lt;/p&gt;

&lt;p&gt;He is the one who will put it on the heart of your spouse to say the right kind word at the right time. Or burden a preacher with an exhortation from the Word that encourages you. Or embolden your brother to give you the strong admonition you need.&lt;/p&gt;

&lt;p&gt;An interesting thing happens next.  From a dire situation, his thoughts begin to shift.  His calling out to the Lord has shifted his focus from his circumstances to the Lord Himself.  He now begins to drift away from his inward thoughts and toward upward thoughts.&lt;/p&gt;

&lt;h2 id=&quot;upward&quot;&gt;Upward&lt;/h2&gt;
&lt;p&gt;Verses 3-6.&lt;/p&gt;

&lt;p&gt;Notice how his thoughts are still on himself, but no longer inward.  His thoughts have turned to who he is in light of his relationship to a holy God.  They have turned upward.&lt;/p&gt;

&lt;h3 id=&quot;sin-and-forgiveness&quot;&gt;Sin and Forgiveness&lt;/h3&gt;
&lt;p&gt;What would it be like if the Lord marked our iniquities?  What if he kept a record and closely watched them?  It’s obvious–our case would be hopeless!  We’d have no chance of standing at that judgment.&lt;/p&gt;

&lt;p&gt;Think of the things this reveals about his view of God in relation to himself:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;First, he knows he has sinned and does not hide it&lt;/li&gt;
  &lt;li&gt;He knows his sin is serious, and it has fearful consequences&lt;/li&gt;
  &lt;li&gt;He also knows the Lord knows these sins&lt;/li&gt;
  &lt;li&gt;Beyond this, he knows he ought to be rightfully accountable to the Lord for these sins&lt;/li&gt;
  &lt;li&gt;But, he also believes that the Lord does not keep a record of these sins&lt;/li&gt;
  &lt;li&gt;More than that, he knows it’s not a matter of the Lord misplacing the official sin record, but the marks are gone because there is forgiveness with the Lord&lt;/li&gt;
  &lt;li&gt;As a result of this forgiveness, he fears the Lord&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, we can notice the third and fourth thought patterns of a mature believer.&lt;/p&gt;

&lt;p&gt;First, he knows he is a sinner, forgiven by a loving God.  This is how he stands, even though he has sinned.  This is both a humbling admission and a strengthening encouragement and they are in a kind of balance.  Thinking only of ourselves as sinners neglects the truth of God’s work to forgive us.  Thinking only of the forgiveness we have in the Lord neglects the truth of our sinfulness that necessitated His work in the first place.&lt;/p&gt;

&lt;p&gt;Second, rather than a license to sin, this forgiveness leads him to fall fearfully before the Lord in humble worship.  Perhaps, like me, you don’t normally associate God’s forgiveness with fearing Him.  I, for one, am much more likely to associate it with relief or gratefulness or happiness.&lt;/p&gt;

&lt;p&gt;But the connection is perhaps closer than we think. When we acknowledge that God is the one who forgives our sin, at the same time, we’re acknowledging that He has the authority and the power to do so.  The natural reaction to such a thought is to fear, follow and worship such a God who wields such power over us, but choses instead to forgive us.&lt;/p&gt;

&lt;p&gt;The forgiveness of the Lord also frees a man to leave the things behind him (his sins, weaknesses and failures) and press on in the work of the Lord.  In other words, it leads to a greater desire to follow the Lord.  As we follow Him, we know Him better.  As we know Him better, we can only fear Him more.  This certainly seemed to be Paul’s mindset in Philippians 3:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Philippians 3:12–17&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;12 Not that I have already obtained it or have already become perfect, but I press on so that I may lay hold of that for which also I was laid hold of by Christ Jesus.
13 Brethren, I do not regard myself as having laid hold of it yet; but one thing I do: forgetting what lies behind and reaching forward to what lies ahead,
14 I press on toward the goal for the prize of the upward call of God in Christ Jesus.
15 Let us therefore, as many as are perfect, have this attitude; and if in anything you have a different attitude, God will reveal that also to you;
16 however, let us keep living by that same standard to which we have attained.
17 Brethren, join in following my example, and observe those who walk according to the pattern you have in us.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Notice the connection and progression from leaving what lays behind to striving for the upward call to keeping an attitude of holy living.&lt;/p&gt;

&lt;h3 id=&quot;waiting-and-hoping&quot;&gt;Waiting and Hoping&lt;/h3&gt;
&lt;p&gt;Earlier, in verses 1-2, the psalmist honestly admits his circumstances and this leads him to action: to call out to the Lord for rescue.  Here too, having turned his thoughts upward to the Lord’s forgiveness of his sins, he now takes action.  He trains his thoughts on waiting for the Lord and hoping in His word.&lt;/p&gt;

&lt;p&gt;There are at least two things to notice in these two verses.  First, the repetition and second, the comparison to the watchmen.&lt;/p&gt;

&lt;p&gt;It’s interesting how he repeats, to himself, how he will wait for the Lord.  It’s almost as if he needs more than one reminder to wait for Him.  Perhaps he is retraining his thoughts away from fearfulness and despair to an expectant, waiting hopefulness.&lt;/p&gt;

&lt;p&gt;Keep in mind that we have no indication that his circumstances have changed at all.  But his thinking is brightening considerably.  His concentration is no longer on his circumstances, but on the Lord who certainly will rescue him.&lt;/p&gt;

&lt;p&gt;Second, we should ask ourselves what the waiting of a watchman for the morning is like.  Even for a new watchman, on his first day on the job, I can’t imagine he has any question or uncertainty about the morning coming!  There is a confidence that the sun will rise and the watch will end.&lt;/p&gt;

&lt;p&gt;The fifth thought pattern of a mature believer now emerges.  He trains his thoughts to confidently hope in the Lord, waiting on His rescue, no matter the circumstances.&lt;/p&gt;

&lt;p&gt;As before, now another interesting things happens.  As he moves away from inward thinking to upward thinking, he grows in his confidence to trust the Lord as he remembers the lovingkindness of the Lord.  In that confidence his thoughts now turn completely away from himself and outward, towards his fellow countrymen.&lt;/p&gt;

&lt;h2 id=&quot;outward&quot;&gt;Outward&lt;/h2&gt;
&lt;p&gt;Verses 7-8.&lt;/p&gt;

&lt;p&gt;Now, the mood of the psalmist has completely changed from where he started.  Far from crying out in desperation for help, he is now calling out to his countrymen to hope in the Lord!&lt;/p&gt;

&lt;p&gt;I think we can notice two more thought patterns of the psalmist to emulate.&lt;/p&gt;

&lt;h3 id=&quot;seeing-the-needs-of-others&quot;&gt;Seeing the needs of others&lt;/h3&gt;
&lt;p&gt;The first is a sense of responsibility to share his confidence in the Lord with others.
His thinking has been so transformed that, though we still have no indication that he has been rescued, he sees the need of his fellow man for the same trusting hope in the Lord.  His own issues are no longer the only ones he sees.  Others are in similar circumstances, similar “depths”.  So, he calls on them to hope based on two characteristics of the Lord: His lovingkindness and his abundant redemption.&lt;/p&gt;

&lt;h3 id=&quot;confidence-in-the-future&quot;&gt;Confidence in the future&lt;/h3&gt;
&lt;p&gt;The second is a confidence in the future actions of the Lord.&lt;/p&gt;

&lt;p&gt;How does he know that God will redeem Israel from all his iniquities?&lt;/p&gt;

&lt;p&gt;I think the answer is relatively simple.  He has seen the past actions of the Lord in his life.  He has observed the character of the Lord worked out in his own life.  Having drawn closer to the Lord, he knows Him better and can look out into the future, confident that the Lord will do the same then as He has done in the past.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;To summarize this psalm, I think we could say this.  The mature believer is not someone who has reached a higher plane of Christian living, never finding himself in the depths, but always thinking upward and outward.  I’m confident that every believer finds himself in the depths at some time or another and most likely even quite regularly.&lt;/p&gt;

&lt;p&gt;Remember, the one writing this psalm, who I see as a very mature believer, is one who has fallen!  But remember what Proverbs 24:16 says:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Proverbs 24:16&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;16 For a righteous man falls seven times, and rises again, But the wicked stumble in time of calamity.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Rising again is what the mature believer does.  But how?  That is what this Psalm spells out for us.&lt;/p&gt;

&lt;p&gt;The mature believer is the one whose has learned certain patterns of thought to a consistent way of thinking that does one simple thing: it always turns him to the Lord for rescue.  This then enables him to grow his thoughts from necessary introspection (those inward thoughts), upward, to the joy of the reality of his relationship with the Lord.  It also emboldens him to reach outward to share with those around him the bounty of hope and lovingkindness available in the Lord.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>I Like Languages That Expect Me To Be a Great Programmer</title>
   <link href="https://www.benramey.com/2017/01/20/I-Like-Languages-That-Expect-Me-To-Be-a-Great-Programmer/"/>
   <updated>2017-01-20T14:05:00-06:00</updated>
   <id>https://www.benramey.com/2017/01/20/I-Like-Languages-That-Expect-Me-To-Be-a-Great-Programmer</id>
   <content type="html">&lt;p&gt;A co-worker of mine recently turned me on to Uncle Bob’s blog.  Yup, that’s Uncle Bob Martin.&lt;/p&gt;

&lt;p&gt;Here’s one of his latest posts that sparked a thought in me: &lt;a href=&quot;http://blog.cleancoder.com/uncle-bob/2017/01/11/TheDarkPath.html&quot;&gt;The Dark Path&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Make sure to read his follow-up post too: &lt;a href=&quot;http://blog.cleancoder.com/uncle-bob/2017/01/13/TypesAndTests.html&quot;&gt;Types and Tests&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;When I got done reading those posts, this was my simple thought: I like programming languages
that expect me to be a great programmer.&lt;/p&gt;

&lt;p&gt;Think of anyone you know who is &lt;em&gt;great&lt;/em&gt; at something.  Is it an artist? A politician? A teacher?
I just watched &lt;em&gt;American Sniper&lt;/em&gt; so I’m thinking of someone like Chris Kyle. He was a great
sniper.  His skill with a rifle was amazing.&lt;/p&gt;

&lt;p&gt;Now, think of why that person is considered great at what they do.  Is it because what they
do is easy?  Probably not.  It’s probably because what they do is extremely difficult, but
they still do it well.  Or, it may be something that’s easy to do, but very difficult to
do &lt;em&gt;really&lt;/em&gt; well.  Think of shooting a rifle.  It’s very easy to shoot a rifle.  Make sure it’s
loaded.  Aim it somewhere (safe). Pull the trigger. That’s it.  But how about hitting a target
100 yards away?  How about 1000 yards?  Yeah, that gets really hard.  Only a &lt;em&gt;great&lt;/em&gt;
marksman could do that.&lt;/p&gt;

&lt;p&gt;The reason it’s hard to be a great marksman is because of the flexibility of a rifle.  It’s
relatively simple design lets you take it almost anywhere and lets you aim it at almost anything.
The only way to make a rifle that even a novice could use to hit targets 1000 yards away
would be to mount it on some kind of stand, add advanced aiming software somehow and let it
pull the trigger.  But, that makes it hard to use, doesn’t it?  You now at the least have a bulky tripod to
lug around a need for a power source for the computer to aim the thing.&lt;/p&gt;

&lt;p&gt;That’s how overly restrictive programming languages have become for the sake of safety.  They’re
getting unwieldy.  I want a flexible language that may be harder to use when I’m a novice, but
once I’m an expert, it lets me do amazing things.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Castle.Windsor TypedFactoryFacility and Unexpected Property Injection Behavior</title>
   <link href="https://www.benramey.com/2016/08/24/castle-windsor-typedfactoryfacility-and-property-injection/"/>
   <updated>2016-08-24T07:37:00-05:00</updated>
   <id>https://www.benramey.com/2016/08/24/castle-windsor-typedfactoryfacility-and-property-injection</id>
   <content type="html">&lt;p&gt;I finally got to the bottom of an issue today that came down to the way Castle.Windsor
does property injection (injecting dependencies into public properties) when
you are also using their TypedFactoryFacility.  It was a tough one to track down, so
I thought I’d put the solution out there for everyone else’s benefit.&lt;/p&gt;

&lt;h2 id=&quot;the-problem&quot;&gt;The Problem&lt;/h2&gt;
&lt;p&gt;Here’s what the problem looked like.&lt;/p&gt;

&lt;h3 id=&quot;the-error-message&quot;&gt;The Error Message&lt;/h3&gt;
&lt;p&gt;First things first, this is what the symptom looked like:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[ComponentNotFoundException: No component for supporting the service System.Threading.Tasks.Task was found]
   Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy) +120
   Castle.Facilities.TypedFactory.Internal.TypedFactoryInterceptor.Resolve(IInvocation invocation) +147
   Castle.Facilities.TypedFactory.Internal.TypedFactoryInterceptor.Intercept(IInvocation invocation) +123
   Castle.DynamicProxy.AbstractInvocation.Proceed() +448
   Castle.Proxies.Func`2Proxy.Invoke(OAuthMatchEndpointContext arg) +168

   ...&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This is actually a pretty standard error when you’re using Castle.Windsor. It usually
means Windsor tried to resolve some dependency but discovered that it was missing a
registration.  Translation: you forgot to register a component or type in your Windsor
setup.  Usually it’s an easy fix; just register your dependency properly.&lt;/p&gt;

&lt;p&gt;In this case, however, as you can see, the missing registration was of type
System.Threading.Tasks.Task.  I didn’t have any dependencies on the &lt;code class=&quot;highlighter-rouge&quot;&gt;Task&lt;/code&gt; class and so
I didn’t want to “fix” any Windsor setup to register it.  This wasn’t making sense.&lt;/p&gt;

&lt;h3 id=&quot;step-one-typedfactoryinterceptor&quot;&gt;Step One: TypedFactoryInterceptor?&lt;/h3&gt;
&lt;p&gt;The first oddity I noticed was that this error was happening somewhere in the flow
of the TypedFactoryInterceptor.  I could tell where the error was coming from in my
code (from the rest of the stack trace that I didn’t include above).  The problem
was that it had nothing to do with any TypedFactoryFacility.&lt;/p&gt;

&lt;p&gt;So, I inspected my registrations a little closer.  I basically had a setup like this.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ChildClass&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ParentClass&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Task&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;DoSomething&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Options&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ParentClass&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IInterface&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OnDoSomething&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OnDoSomethingElse&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Task&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;DoSomething&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Options&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;OnDoSomething&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Task&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;DoSomethingElse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Options&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OnDoSomethingElse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Invoke&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Notice a couple of things.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;ParentClass has several virtual methods.  I’m only overriding one.&lt;/li&gt;
  &lt;li&gt;ParentClass is setup to allow you to override the virtual methods or to just supply
 it with Funcs.&lt;/li&gt;
  &lt;li&gt;The implementation of the virtual methods is to simply call the corresponding Funcs.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;finding-the-location-of-the-problem&quot;&gt;Finding the Location of the Problem&lt;/h3&gt;
&lt;p&gt;After lots of testing and debugging, I finally figured out that somehow a FuncProxy
(see line 6 in the error stack trace above) was being injected into all of the
public &lt;code class=&quot;highlighter-rouge&quot;&gt;Func&amp;lt;,&amp;gt;&lt;/code&gt; properties on ParentClass.  Then, when methods were called that
I did not override in my ChildClass, the Func would be called in the ParentClass
and that’s where Windsor was hooking in and eventually causing an error when it
eventually tried to resolve a dependency on &lt;code class=&quot;highlighter-rouge&quot;&gt;Task&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;one-more-clue&quot;&gt;One More Clue&lt;/h3&gt;
&lt;p&gt;As I mentioned above, the presence of a TypedFactoryInterceptor in the stack trace
was strange to me.  I wasn’t using Windor’s TypedFactoryFacility to register my ChildClass.
So, why was it sticking its nose into my class somehow?&lt;/p&gt;

&lt;p&gt;I did some simple debugging and turned off the TypedFactoryFacility in my Windsor setup.
Just like magic,
the error I was seeing went away.  So, my conclusion: somehow TypedFactoryFacility was
inserting itself into my ChildClass registration and injecting &lt;code class=&quot;highlighter-rouge&quot;&gt;FuncProxy&lt;/code&gt;s into the
ParentClass public &lt;code class=&quot;highlighter-rouge&quot;&gt;Func&amp;lt;,&amp;gt;&lt;/code&gt; properties.&lt;/p&gt;

&lt;h2 id=&quot;the-solution&quot;&gt;The Solution&lt;/h2&gt;
&lt;p&gt;This looked an aweful lot like property injection to me.  I started searching related to
TypedFactoryFacility and property injection.  I pretty quickly came upon this documentation:
&lt;a href=&quot;https://github.com/castleproject/Windsor/blob/master/docs/how-properties-are-injected.md&quot;&gt;https://github.com/castleproject/Windsor/blob/master/docs/how-properties-are-injected.md&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;That page describes how Windsor does property injection, which I actually thought was
an opt-in feature of Windsor.  In fact, Windsor does it by default, as describe on that page.&lt;/p&gt;

&lt;p&gt;Combining this revelation (to me) with the fact that TypedFactoryFacility also allows you
to take a dependency on a simple &lt;code class=&quot;highlighter-rouge&quot;&gt;Func&lt;/code&gt; and turn it into a factory call into your Windsor
container, I concluded that, by turning on the TypedFactoryFacility in Windsor, I was opening
up public properties that had &lt;code class=&quot;highlighter-rouge&quot;&gt;Func&amp;lt;&amp;gt;&lt;/code&gt; types to property injection by Windsor.&lt;/p&gt;

&lt;p&gt;Now, I hate property injection, so I was fine with just turning it off completely.  Luckily,
the documentation link above also included instructions how to do it. I’ve included that code
here.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;propInjector&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Kernel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ComponentModelBuilder&lt;/span&gt;
                         &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Contributors&lt;/span&gt;
                         &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OfType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PropertiesDependenciesModelInspector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;()&lt;/span&gt;
                         &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Single&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Kernel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ComponentModelBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;RemoveContributor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;propInjector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I added this code into my Windsor container setup and tried again.  Everything worked just
as expected.&lt;/p&gt;

&lt;h2 id=&quot;lessons-learned&quot;&gt;Lessons Learned&lt;/h2&gt;
&lt;p&gt;A couple of quick takeaways:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Windsor does property injection by default.  Check out the documentation link above for
 the criteria it uses to determine when it should or not.&lt;/li&gt;
  &lt;li&gt;Using TypedFactoryFacility is fantastic, but turn off property injection if you have
 public &lt;code class=&quot;highlighter-rouge&quot;&gt;Func&amp;lt;&amp;gt;&lt;/code&gt; properties anywhere.&lt;/li&gt;
&lt;/ol&gt;
</content>
 </entry>
 
 <entry>
   <title>OWIN Integration Testing with OAuth Bearer Tokens</title>
   <link href="https://www.benramey.com/2016/04/11/owin-oauth-integration-testing-with-bearer-token/"/>
   <updated>2016-04-11T08:34:00-05:00</updated>
   <id>https://www.benramey.com/2016/04/11/owin-oauth-integration-testing-with-bearer-token</id>
   <content type="html">&lt;h2 id=&quot;situation&quot;&gt;Situation&lt;/h2&gt;
&lt;p&gt;The situation is pretty simple.  We have a project written with Web API 2.2
that we have running with OWIN.  The API requires user authorization.  To
accomplish that, we use the OWIN OAuth libraries.&lt;/p&gt;

&lt;p&gt;Upon until recently, the OAuth authorization server (the thing that takes in
the user credentials and issues the token) and the API (the resource server) were
hosted in the same site and web project.&lt;/p&gt;

&lt;p&gt;Integration testing was pretty easy at this point.  For the authorized calls,
we simply wrote helper methods that logged a test user in through the authorization
server (hosted along with the API in the OWIN test server), got a bearer token
and then made the integration test calls.&lt;/p&gt;

&lt;h2 id=&quot;problem&quot;&gt;Problem&lt;/h2&gt;
&lt;p&gt;When we recently decided to split the authorization server and resource server
code up into two separate code bases (so that they could be hosted separately)
we ran into issues with the authorization and API calls no longer being possible within a
single integration test.  The code to generate the bearer token was now no
longer accessible in the test server for the API integration tests because the authorization
server was now designed to be hosted separately.  We’d have
to somehow generate the bearer token without making a call with the OWIN test
server.&lt;/p&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;/h2&gt;
&lt;p&gt;The solution is to generate a valid bearer token in your test code and send it
along with your test API call as you would have previous.  How to generate that
valid bearer token though??  It turns out to be easier than I thought.&lt;/p&gt;

&lt;p&gt;How you use OWIN’s test server is beyond the scope of this blog post, but
eventually you’ll have some code resembling this:&lt;/p&gt;

&lt;p&gt;var server = TestServer.Create&lt;Startup&gt;();&lt;/Startup&gt;&lt;/p&gt;

&lt;p&gt;You’ll have to use a overload of the &lt;code class=&quot;highlighter-rouge&quot;&gt;Create()&lt;/code&gt; method to capture a reference
to the server’s &lt;code class=&quot;highlighter-rouge&quot;&gt;IDataProtector&lt;/code&gt;.  This interface defines what OWIN OAuth will
use to encrypt a &lt;code class=&quot;highlighter-rouge&quot;&gt;ClaimsIdentity&lt;/code&gt; into a valid bearer token.&lt;/p&gt;

&lt;p&gt;Update your server creation code like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;  &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataProtector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TestServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Startup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Configuration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;dataProtector&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;CreateDataProtector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OAuthBearerAuthenticationMiddleware&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Namespace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;&quot;Access_Token&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;v1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You have to get the &lt;code class=&quot;highlighter-rouge&quot;&gt;dataProtector&lt;/code&gt; this way because it’s the same way that
the OWIN OAuth libraries get it before trying to decrypt the bearer token.
See the source for the OWIN OAuth code here:
&lt;a href=&quot;http://katanaproject.codeplex.com/SourceControl/latest#src/Microsoft.Owin.Security.OAuth/OAuthBearerAuthenticationMiddleware.cs&quot;&gt;OAuthBearerAuthenticationMiddleware.cs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you’ve “captured” the &lt;code class=&quot;highlighter-rouge&quot;&gt;dataProtector&lt;/code&gt;, in your integration test (or in some
helper code, probably) you can generate your &lt;code class=&quot;highlighter-rouge&quot;&gt;ClaimsIdentity&lt;/code&gt; and then your
bearer token with the &lt;code class=&quot;highlighter-rouge&quot;&gt;dataProtector&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;  &lt;span class=&quot;c1&quot;&gt;// inside an integration test&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// create your valid identity any way you need to here&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ClaimsIdentity&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;identity&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ClaimsIdentity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GenericIdentity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;username&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// these classes are defined in the OWIN OAuth libraries.&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;properties&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;AuthenticationProperties&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ticket&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;AuthenticationTicket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;identity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;properties&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;format&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;TicketDataFormat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dataProtector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bearerToken&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Protect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ticket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// ... call your API through the test server with the bearer token...&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;CreateRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/api/someendpoint&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AddHeader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Authorization&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Bearer &quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bearerToken&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetAsync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</content>
 </entry>
 
 <entry>
   <title>Using NuGetPackager 0.5.5 with GitVersionTask 3.4.1</title>
   <link href="https://www.benramey.com/2016/03/03/using-nugetpackager-0.5.5-with-gitversiontask-3.4.1/"/>
   <updated>2016-03-03T09:04:00-06:00</updated>
   <id>https://www.benramey.com/2016/03/03/using-nugetpackager-0.5.5-with-gitversiontask-3.4.1</id>
   <content type="html">&lt;p&gt;I’m using both &lt;a href=&quot;https://www.nuget.org/packages/NuGetPackager/&quot;&gt;NuGetPackager&lt;/a&gt;
with &lt;a href=&quot;https://www.nuget.org/packages/GitVersionTask/&quot;&gt;GitVersionTask&lt;/a&gt; on
my project that provides EntityFramework persisters for NServiceBus:
&lt;a href=&quot;https://github.com/benjaminramey/GoodlyFere.NServiceBus.EntityFramework&quot;&gt;GoodlyFere.NServiceBus.EntityFramework&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;NuGetPackager seems to work seamlessly with GitVersionTask 2.0.0.  However,
GitVersionTask is up to version 3.4.1 and I just hate sitting at a version that
far behind!&lt;/p&gt;

&lt;p&gt;So, I updated my NuGet package to the latest version of GitVersionTask.  That’s
3.4.1 right now.  Too bad, so sad!  That caused this error:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;The &quot;CreatePackages&quot; task was not given a value for the required parameter &quot;Version&quot;.	1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;the-problem&quot;&gt;The Problem&lt;/h2&gt;
&lt;p&gt;The problem turns out that NuGetPackager 0.5.5 is looking for a MSBuild property
called “GfvNuGetVersion”.  See the code in the .targets file &lt;a href=&quot;https://github.com/Particular/NuGetPackager/blob/0.5.6/src/NuGetPackager/NuGetPackager.targets#L5&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;GitVersionTask 3.4.1 (somewhere in a release since 2.0.0) changed that property
name to “GitVersion_NuGetVersion”.  See the code &lt;a href=&quot;https://github.com/GitTools/GitVersion/blob/master/src/GitVersionTask/NugetAssets/GitVersionTask.targets#L68&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;the-solution&quot;&gt;The Solution&lt;/h2&gt;
&lt;p&gt;So, how to fix this?  NuGetPackager will probably be updated some day, but for
now you can just translate the property in your .csproj file before the
CreatePackage task is called in NuGetPackager.&lt;/p&gt;

&lt;p&gt;Open up your .csproj file directly in some text editor like Notepad++.  Find
these two lines at the bottom of the file:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;Import Project=&quot;..\packages\GitVersionTask.3.4.1\Build\dotnet\GitVersionTask.targets&quot;
        Condition=&quot;Exists('..\packages\GitVersionTask.3.4.1\Build\dotnet\GitVersionTask.targets')&quot; /&amp;gt;
&amp;lt;Import Project=&quot;..\packages\NuGetPackager.0.5.5\build\NuGetPackager.targets&quot;
        Condition=&quot;Exists('..\packages\NuGetPackager.0.5.5\build\NuGetPackager.targets')&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Before those two lines, add a target and a property group.  The target will
create a task that translates the new property to the new property.  The
property group wil define a BuildDependsOn to call that target before the
CreatePackages target is called.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;Target Name=&quot;TranslateNugetVersion&quot;
        Condition=&quot;'$(Configuration)' == 'Release'&quot;&amp;gt;
    &amp;lt;CreateProperty
        Value=&quot;$(GitVersion_NuGetVersion)&quot;&amp;gt;
        &amp;lt;Output
            TaskParameter=&quot;Value&quot;
            PropertyName=&quot;GfvNuGetVersion&quot; /&amp;gt;
    &amp;lt;/CreateProperty&amp;gt;
&amp;lt;/Target&amp;gt;
&amp;lt;PropertyGroup&amp;gt;
    &amp;lt;BuildDependsOn&amp;gt;
        $(BuildDependsOn);
        TranslateNugetVersion
    &amp;lt;/BuildDependsOn&amp;gt;
&amp;lt;/PropertyGroup&amp;gt;
&amp;lt;Import Project=&quot;..\packages\GitVersionTask.3.4.1\Build\dotnet\GitVersionTask.targets&quot;
        Condition=&quot;Exists('..\packages\GitVersionTask.3.4.1\Build\dotnet\GitVersionTask.targets')&quot; /&amp;gt;
&amp;lt;Import Project=&quot;..\packages\NuGetPackager.0.5.5\build\NuGetPackager.targets&quot;
        Condition=&quot;Exists('..\packages\NuGetPackager.0.5.5\build\NuGetPackager.targets')&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, when you build your project, everything should work great!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>You Can't Subscribe to IEvent with NServiceBus</title>
   <link href="https://www.benramey.com/2016/02/25/you-cant-subscribe-to-ievent-with-nservicebus/"/>
   <updated>2016-02-25T09:56:00-06:00</updated>
   <id>https://www.benramey.com/2016/02/25/you-cant-subscribe-to-ievent-with-nservicebus</id>
   <content type="html">&lt;p&gt;The reason you might want to subscribe to &lt;code class=&quot;highlighter-rouge&quot;&gt;IEvent&lt;/code&gt; is pretty straightforward. I
wanted to do it for the simple reason of wanting to be able to choose (based
on configuration) whether I wanted to notify anyone of any event that
could be published on my bus.&lt;/p&gt;

&lt;p&gt;In other words, whenever an event of any type was published, I wanted one particular
endpoint to subscribe to that event and then decide whether it should do
anything with it.&lt;/p&gt;

&lt;p&gt;I thought the code to do that should be pretty simple.  Since all published
events &lt;em&gt;should&lt;/em&gt; implement the &lt;code class=&quot;highlighter-rouge&quot;&gt;IEvent&lt;/code&gt; interface and NServiceBus supports
polymorphism in its message handling, creating a message handler that
implemented &lt;code class=&quot;highlighter-rouge&quot;&gt;IHandleMessages&amp;lt;IEvent&amp;gt;&lt;/code&gt; should be all I should have needed!&lt;/p&gt;

&lt;p&gt;I was testing this with only partial success and so I thought it was working.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;public class EventHandler : IHandleMessages&amp;lt;IEvent&amp;gt;
{
   public void Handle(IEvent message)
   {
     ...
   }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;my-partial-success&quot;&gt;My Partial Success&lt;/h2&gt;
&lt;p&gt;The reason I had partial success was because I was also &lt;em&gt;explicitly&lt;/em&gt; handling
other events in the same endpoint on a special saga I had setup.  So, when
the endpoint started up, it would subscribe to these events.  At first, I only
wanted to send notifications for these events anyway, so it all seemed to be
working.  My special &lt;code class=&quot;highlighter-rouge&quot;&gt;IEvent&lt;/code&gt; would work because the &lt;code class=&quot;highlighter-rouge&quot;&gt;Saga&lt;/code&gt; subscribed this same
endpoint to those few events explicitly.&lt;/p&gt;

&lt;h2 id=&quot;my-full-failure&quot;&gt;My Full Failure&lt;/h2&gt;
&lt;p&gt;I realized I had only partially succeeded when I started wanting to send notifications
for other events that were not in that &lt;code class=&quot;highlighter-rouge&quot;&gt;Saga&lt;/code&gt;.  I dug into the issue for a few
hours and finally began to wonder if NServiceBus (or maybe the RabbitMQ transport)
was explicitly ignoring &lt;code class=&quot;highlighter-rouge&quot;&gt;IEvent&lt;/code&gt; when it setup subscriptions.&lt;/p&gt;

&lt;p&gt;Sure enough, it does.&lt;/p&gt;

&lt;p&gt;To build a list of types to subscribe to, NServiceBus uses the &lt;code class=&quot;highlighter-rouge&quot;&gt;Conventions&lt;/code&gt;
class in the &lt;code class=&quot;highlighter-rouge&quot;&gt;NServiceBus.Core&lt;/code&gt; namespace.  One of the checks that code does
is to filter the list of potential types with the &lt;code class=&quot;highlighter-rouge&quot;&gt;IsEventType&lt;/code&gt; method.  This
method checks if the &lt;code class=&quot;highlighter-rouge&quot;&gt;Type&lt;/code&gt; is in a Particular (NServiceBus) DLL.  See the
code here: &lt;a href=&quot;https://github.com/Particular/NServiceBus/blob/e4bc405509e3b9c3fc91e21a56333bb40ac54a60/src/NServiceBus.Core/Conventions.cs#L154&quot;&gt;IsEventType&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;my-solution&quot;&gt;My Solution&lt;/h2&gt;
&lt;p&gt;The solution is simple enough.  Instead of listening to &lt;code class=&quot;highlighter-rouge&quot;&gt;IEvent&lt;/code&gt;, listen
to a custom interface that you implement on all of your events.  This is probably
more close to what you are trying to do anyway–listen to all events that your
system produces.&lt;/p&gt;

&lt;p&gt;So, I simply created a marker interface called &lt;code class=&quot;highlighter-rouge&quot;&gt;ICustomEvent&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;public interface ICustomEvent : IEvent { }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then, on all of my bus event classes, instead of implementing &lt;code class=&quot;highlighter-rouge&quot;&gt;IEvent&lt;/code&gt; directly,
I implemented &lt;code class=&quot;highlighter-rouge&quot;&gt;ICustomEvent&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;My handler then looked like this.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;public class EventHandler : IHandleMessages&amp;lt;ICustomEvent&amp;gt;
{
   public void Handle(ICustomEvent message)
   {
     ...
   }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, the right subscriptions are all set up and my single handler gets
every single event published by my entire bus.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Adding a RabbitMQ Configuration File When Running as a Windows Service</title>
   <link href="https://www.benramey.com/2016/01/04/adding-a-rabbitmq-configuration-file-when-running-as-a-windows-service/"/>
   <updated>2016-01-04T09:26:00-06:00</updated>
   <id>https://www.benramey.com/2016/01/04/adding-a-rabbitmq-configuration-file-when-running-as-a-windows-service</id>
   <content type="html">&lt;h2 id=&quot;a-little-context&quot;&gt;A little context&lt;/h2&gt;
&lt;p&gt;I was having a hard time adding a rabbitmq.config file today.  I added it in the right location, restarted
the RabbitMQ Windows service and the logs still showed that the configuration file was not found.&lt;/p&gt;

&lt;p&gt;If you’re experiencing the same problem, you’ll see a similar error message in the RabbitMQ log file after
you restart the Windows service.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;=INFO REPORT==== &amp;lt;date here&amp;gt;
node			: rabbit@&amp;lt;server&amp;gt;
home dir		: C:\Windows
config file(s)	: c:/path/to/config/rabbitmq.config (not found)
...some other stuff...&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This will happen if you just install your RabbitMQ server with the normal, default installation process
and then try to add a configuration file later.  By default, RabbitMQ doesn’t install configuration file and just
uses all it’s defined defaults.&lt;/p&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;/h2&gt;
&lt;p&gt;I read the &lt;a href=&quot;http://www.rabbitmq.com/configure.html&quot;&gt;documentation&lt;/a&gt; a little more closely
and finally came upon this line: “Windows service users will need to re-install the service after adding
or removing a configuration file.”&lt;/p&gt;

&lt;p&gt;Oops.  Guess I should have read the documentation more closely the first time around!  The easiest way to
do this is as follows (start a command prompt as administrator):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; cd &quot;C:\Program Files (x86)\RabbitMQ Server\rabbitmq_server-3.6.0\sbin&quot;
&amp;gt; .\rabbitmq-service.bat remove
&amp;gt; .\rabbitmq-service.bat install
&amp;gt; .\rabbitmq-service.bat start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Of course, The path you cd into will depend on the version of RabbitMQ you have installed.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Working with x.509 Certificates in .NET</title>
   <link href="https://www.benramey.com/2015/12/02/working-with-x509-certificates-in-net/"/>
   <updated>2015-12-02T10:35:00-06:00</updated>
   <id>https://www.benramey.com/2015/12/02/working-with-x509-certificates-in-net</id>
   <content type="html">&lt;p&gt;I found a lot of very helpful details about certificate storage and usage in Windows and
.NET in this article.&lt;/p&gt;

&lt;p&gt;Particularly, the explanation of where certificates and private keys can be stored for UserStore
certificates was very helpful in debugging some issues I’m currently having on a production server.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://paulstovell.com/blog/x509certificate2&quot;&gt;Paul Stovell’s blog post&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Permutations with Iterators in C#</title>
   <link href="https://www.benramey.com/2015/09/03/permutations-with-iterators-in-csharp/"/>
   <updated>2015-09-03T07:27:00-05:00</updated>
   <id>https://www.benramey.com/2015/09/03/permutations-with-iterators-in-csharp</id>
   <content type="html">&lt;p&gt;I recently ran across a need to generate all permutations of an array of objects
in some unit testing I was doing.&lt;/p&gt;

&lt;p&gt;The specific situation was testing that, no matter what the order, when certain messages
were picked up by an &lt;a href=&quot;http://particular.net/&quot;&gt;NServiceBus&lt;/a&gt; &lt;a href=&quot;particular.net/articles/sagas-in-nservicebus&quot;&gt;Saga&lt;/a&gt;, that a certain state was consistent after all
messages were received.  Since I explicitly wanted to test the state no matter what order
the messages arrived in, I needed all permutations of those messages so I could send
them to the Saga in each order and test the resulting state.&lt;/p&gt;

&lt;p&gt;I found this super article on the subject that gave all the code I needed: &lt;a href=&quot;http://www.interact-sw.co.uk/iangblog/2004/09/16/permuterate&quot;&gt;Generating Permutations with C# Iterators&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thanks IanG on Tap!&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Active Directory Authentication in ASP.NET MVC 5 with Forms Authentication and Group-Based Authorization</title>
   <link href="https://www.benramey.com/2014/10/20/active-directory-authentication-in-asp-net-mvc-5-with-forms-authentication-and-group-based-authorization/"/>
   <updated>2014-10-20T04:03:00-05:00</updated>
   <id>https://www.benramey.com/2014/10/20/active-directory-authentication-in-asp-net-mvc-5-with-forms-authentication-and-group-based-authorization</id>
   <content type="html">&lt;p&gt;I know that blog post title is sure a mouth-full, but it describes the whole problem I was trying to solve in a recent project.&lt;/p&gt;

&lt;h2 id=&quot;the-project&quot;&gt;The Project&lt;/h2&gt;

&lt;p&gt;Let me outline the project briefly.  We were building a report dashboard-type site that will live inside the client’s network.  The dashboard gives an overview of various, very important information that relates to how the company is performing on a hourly basis.  So, the dashboard is only available to a certain group of directors.&lt;/p&gt;

&lt;p&gt;To limit the solution to the these directors, authentication and authorization would go through their existing Active Directory setup by putting the authorized users in a special AD group.&lt;/p&gt;

&lt;h2 id=&quot;the-problem&quot;&gt;The Problem&lt;/h2&gt;

&lt;p&gt;Getting authentication to work was a snap.  Microsoft provides the System.Web.Security.ActiveDirectoryMembershipProvider
class to use as your membership provider.  Putting an &lt;code class=&quot;highlighter-rouge&quot;&gt;[Authorize]&lt;/code&gt; attribute on my action methods or entire controllers was all I needed to get it working (besides, of course, the system.web/authentication web.config updates and a controller to show my login form and handle the submit credentials).&lt;/p&gt;

&lt;p&gt;Here’s my relevant web.config setup:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;connectionStrings&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;add&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ADConnectionString&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;connectionString=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;ldap connection string here&amp;gt;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/connectionStrings&amp;gt;&lt;/span&gt;
…
&lt;span class=&quot;nt&quot;&gt;&amp;lt;authentication&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;mode=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Forms&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;forms&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;.AuthCookie&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;loginUrl=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;~/login&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/authentication&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;membership&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;defaultProvider=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ADMembershipProvider&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;providers&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;clear/&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;add&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ADMembershipProvider&quot;&lt;/span&gt;
                 &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;System.Web.Security.ActiveDirectoryMembershipProvider&quot;&lt;/span&gt;
                 &lt;span class=&quot;na&quot;&gt;connectionStringName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ADConnectionString&quot;&lt;/span&gt;
                 &lt;span class=&quot;na&quot;&gt;attributeMapUsername=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sAMAccountName&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/providers&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/membership&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The tough part came when I wanted to limit access to users in that AD group. Microsoft doesn’t provide a RoleProvider along with its ActiveDirectoryMembershipProvider. So, what to do?&lt;/p&gt;

&lt;p&gt;I tried several methods I found online. Most of them were based on creating my own custom RoleProvider and querying AD to iterate through the user’s groups (treating them like roles) and seeing if one of them matched my AD group I was looking for. However, I could never get it to work. Each code example I found eventually gave me this AD error when I iterated through the current user’s AD groups:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;The specified directory service attribute or value does not exist.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;the-solution&quot;&gt;The Solution&lt;/h2&gt;

&lt;p&gt;Eventually, I found a solution online that worked. Instead of setting up a custom RoleProvider, all it involved was creating a custom AuthorizeAttribute for your MVC controllers (or action methods) that checked the user’s .IsMemberOf method to see if the member belonged the sought after group (or groups). I don’t know why this method does not cause the same AD error as describe above, but I’m glad it doesn’t! All I can assume is that it queries AD in a more friendly way.&lt;/p&gt;

&lt;p&gt;Here is my custom AuthorizeAttribute:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AuthorizeADAttribute&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AuthorizeAttribute&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_authenticated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_authorized&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Groups&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;HandleUnauthorizedRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AuthorizationContext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filterContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;HandleUnauthorizedRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filterContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_authenticated&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_authorized&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;filterContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Result&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RedirectResult&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/error/notauthorized&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;AuthorizeCore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpContextBase&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;httpContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;_authenticated&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AuthorizeCore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;httpContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_authenticated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;IsNullOrEmpty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Groups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;_authorized&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_authorized&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;groups&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Groups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;','&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;httpContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Identity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;_authorized&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LDAPHelper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;UserIsMemberOfGroups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;groups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_authorized&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Error attempting to authorize user&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;_authorized&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_authorized&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;_authorized&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_authorized&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Notice that I also included a little code to distinguish between the user not being authenticated (which the call to base.AuthorizeCore takes care of) and not being authorized. Without the code in HandleUnauthorizedRequest, if the user successfully logs in but is not in the AD group, he just sees the log in screen again which doesn’t communicate the problem very well.&lt;/p&gt;

&lt;p&gt;The this.Log() code uses a Nuget package called this.Log. The LDAPHelper class is something I wrote. The code is below:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LDAPHelper&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GetLDAPContainer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Uri&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ldapUri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;ParseLDAPConnectionString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ldapUri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpUtility&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;UrlDecode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ldapUri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PathAndQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;TrimStart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;'/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GetLDAPHost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Uri&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ldapUri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;ParseLDAPConnectionString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ldapUri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ldapUri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ParseLDAPConnectionString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Uri&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ldapUri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;connString&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ConfigurationManager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ConnectionStrings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ADConnectionString&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ConnectionString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Uri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;TryCreate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UriKind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Absolute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ldapUri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;UserIsMemberOfGroups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;groups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;cm&quot;&gt;/* Return true immediately if the authorization is not
        locked down to any particular AD group */&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;groups&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;groups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Length&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// Verify that the user is in the given AD group (if any)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;BuildPrincipalContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userPrincipal&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UserPrincipal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;FindByIdentity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;IdentityType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SamAccountName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;groups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userPrincipal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;IsMemberOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IdentityType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PrincipalContext&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;BuildPrincipalContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;container&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LDAPHelper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetLDAPContainer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;PrincipalContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ContextType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Domain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;container&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;My code is mostly based on example code I found on a very helpful &lt;a href=&quot;http://stackoverflow.com/questions/4342271/asp-net-mvc-forms-authorization-with-active-directory-groups/4383502#4383502&quot;&gt;StackOverflow post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To use this code, all you have to do is use your custom AuthorizeAttribute instead of the built-in one. Something like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AuthorizeAD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Groups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Some AD group name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HomeController&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Controller&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;…&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</content>
 </entry>
 
 <entry>
   <title>Apply Git Patches to SVN Repository</title>
   <link href="https://www.benramey.com/2014/09/23/apply-git-patches-to-svn-repository/"/>
   <updated>2014-09-23T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2014/09/23/apply-git-patches-to-svn-repository</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://codeprairie.net/blogs/chrisortman/archive/2008/01/14/creating-subversion-patches-with-git.aspx&quot;&gt;Creating Subversion patches with Git&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>IE Date Parsing Doesn’t Work Like Chrome</title>
   <link href="https://www.benramey.com/2014/06/05/ie-date-parsing-doesnt-work-like-chrome/"/>
   <updated>2014-06-05T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2014/06/05/ie-date-parsing-doesnt-work-like-chrome</id>
   <content type="html">&lt;p&gt;I noticed a goofy issue today while working with a jQuery countdown plugin.  This plugin allows you to set an “until” date so that you counter counts down to zero at a certain date and time.&lt;/p&gt;

&lt;p&gt;I was setting the date like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;countdown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;until&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;′&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In Chrome, this worked just fine.  The string “10/13/14 00:00:00″ parsed to a Date object for midnight on October 13th, 2014.&lt;/p&gt;

&lt;p&gt;In IE, however (versions10, 9 and 8 at least) it parsed as October 13th, 1914.  Why?  Who knows.  Updating my string to “10/13/2014 00:00:00″ fixed it.  My final javascript looked like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;countdown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;until&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2014&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;′&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;So, be aware of this oddity!  It caused my whole countdown widget to screw up because the current time was already past the “until” date.#&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Sitefinity Thunder Boolean Widget Designer Field Auto-Generation is Flawed</title>
   <link href="https://www.benramey.com/2014/05/23/sitefinity-thunder-boolean-widget-designer-field-auto-generation-is-flawed/"/>
   <updated>2014-05-23T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2014/05/23/sitefinity-thunder-boolean-widget-designer-field-auto-generation-is-flawed</id>
   <content type="html">&lt;p&gt;##Problem&lt;/p&gt;

&lt;p&gt;When you use Sitefinity Thunder (a great help, by the way) to generate a Widget Designer for an existing widget that has a boolean property, you get this javascript in the auto-generated javascript file (let’s say my boolean field is named HasSubMenu):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/* RefreshUI HasSubMenu */&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;jQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get_hasSubMenu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;checked&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;controlData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;HasSubMenu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This code is in the refreshUI method.  It’s supposed to mark a checkbox as checked if HasSubMenu is true and not check it if it’s false.  The problem is, for some reason, HasSubMenu is a string in Javascript instead of a real boolean. So, HasSubMenu will be either “true” or “false”–both of which are true values in Javascript.  That is, because “true” and “false” are both non-empty strings, they evaluate to true when used as an expression.&lt;/p&gt;

&lt;p&gt;This means, no matter what you do with the checkbox, the next time you click “Edit” for this widget, the checkbox will be checked and your data is effectively corrupted.&lt;/p&gt;

&lt;p&gt;##Solution&lt;/p&gt;

&lt;p&gt;The solution is pretty simple.  Instead of using controlData.HasSubMenu for the expression by itself, update your Javascript so that you check if the string is “true” or not: controlData.HasSubMenu === “true”.  The line in the refreshUI method should now look like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/* RefreshUI HasSubMenu */&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;jQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get_hasSubMenu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;checked&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;controlData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;HasSubMenu&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now your checkbox will keep it’s value as you would expect.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Create a List Selector Field in a Widget Designer in Sitefinity 6.2</title>
   <link href="https://www.benramey.com/2014/05/21/create-a-list-selector-field-in-a-widget-designer-in-sitefinity-6-2/"/>
   <updated>2014-05-21T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2014/05/21/create-a-list-selector-field-in-a-widget-designer-in-sitefinity-6-2</id>
   <content type="html">&lt;blockquote&gt;
  &lt;p&gt;[9/25/14 update] See Hardy’s comments below for necessary updates to my steps when using Sitefinity 7.1 and up.  Thanks, Hardy!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;##Scenario&lt;/p&gt;

&lt;p&gt;I am designing a fairly simple widget in Sitefinity (version 6.2, but this probably applies to other versions as well) that will display a simple FAQ list.  The FAQ list has two major parts: 1) a “table of contents” type ordered-list at the top that lists each question and links to the answer further down the page, and 2) the list of questions with the answers below them.&lt;/p&gt;

&lt;p&gt;##Approach&lt;/p&gt;

&lt;p&gt;I wanted to create a simple Sitefinity list that would contain the FAQ content (questions and answers).  The default fields for a Sitefinity list are Title and Content which are really all I needed to collect a Question and Answer for a FAQ item.&lt;/p&gt;

&lt;p&gt;So, my widget, after being placed on a page, would only need to allow a content author to simply select the FAQ list they had created earlier.  The widget would then find the list, collect the items in the list and display them.&lt;/p&gt;

&lt;p&gt;##Solution&lt;/p&gt;

&lt;p&gt;My solution would involved a widget designer control and a customized FlatSelector field.  Here’s an overview with details below.&lt;/p&gt;

&lt;p&gt;###Overview&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Create a Sitefinity MVC widget with a single “List” field that will contain the list GUID&lt;/li&gt;
  &lt;li&gt;Create a Sitefinity widget designer for this MVC widget with a single FlatSelector field&lt;/li&gt;
  &lt;li&gt;Update the FlatSelector ItemType field&lt;/li&gt;
  &lt;li&gt;Update the FlatSelector ServiceURL field&lt;/li&gt;
  &lt;li&gt;Update the FlatSelector DataMembers&lt;/li&gt;
  &lt;li&gt;Update the widget designer Javascript to choose the list ID&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;###Details
For some reason, Sitefinity widget designer documentation is really hard for me to find.  Maybe I’m the only one.  Maybe Sitefinity needs to put some more dollars toward good documentation!  Anyway, after some searching and some trial and error, I found this page giving me an idea of how I should accomplish what I was trying to do: &lt;a href=&quot;http://www.sitefinity.com/documentation/documentationarticles/change-your-dynamic-content-selector-to-choose-from-generic-content&quot;&gt;Sitefinity article&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To summarize, it tells you how to create a widget designer with Sitefinity Thunder and then change the generated control to point to some of the generic content types (like Lists).  However, it didn’t have all the details I needed.  I had to troubleshoot and that’s why I’m writing this post.&lt;/p&gt;

&lt;p&gt;####Step 1: Create the Widget
Below are the details for how I setup my MVC widget.  Translate the various tasks for the same effect if you prefer a WebForms widget.&lt;/p&gt;

&lt;p&gt;Using Sitefinity Thunder, create your widget.  Don’t create the designer at this time.  I like using MVC widgets but there’s no reason this won’t work with a WebForms widget.  I called my widget “FAQList”.&lt;/p&gt;

&lt;p&gt;#####Step 1.1: Update controller properties
Remove whatever properties Thunder automatically adds on the MVC controller and add your own List property of type Guid.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Category&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Widget Properties&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Guid&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;#####Step 1.2: Update widget view model
I added a simple POCO to describe each FAQ item (containing a question and answer) and then added a list of these POCOs as the only property on my view model.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;FAQListModel&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FAQItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Items&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;FAQItem&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Answer&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Question&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;#####Step 1.3: Update Index action
Update the Index action to use the List property to access the content-author-chosen list, pull the items and stick them in the model.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ActionResult&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;FAQListModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;List&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Guid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Items&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;WorkWith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ListItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Status&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ContentLifecycleStatus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Live&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FAQItem&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Question&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Answer&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Content&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Items&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FAQItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;();&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Default&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;####Step 2: Create widget designer/public
Once your widget is created, you can create your widget designer.  Using Thunder, create a widget designer for an existing widget. Name your widget designer.  I use the name of the widget and append “Designer”.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/create-a-list-selector-field-in-a-widget-designer-in-sitefinity-6-2/widget-designer-naming.png&quot; alt=&quot;FAQItemDesigner widget designer naming&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Click “Next” on the next screen. Choose your FAQItemController from the list on the next screen.&lt;/p&gt;

&lt;p&gt;#####Step 2.1: Choose widget designer fields
Next, choose the List property from your controller and set it up as follows.  Especially note two things.  First, choose the DynamicContentSelector.  Second, update the “Select the content type for the selector” to ‘Telerik.Sitefinity.Lists.Model.List’.  Click on “Add”.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/create-a-list-selector-field-in-a-widget-designer-in-sitefinity-6-2/widget-designer-fields1.png&quot; alt=&quot;Create a widget designer&quot; /&gt;&lt;/p&gt;

&lt;p&gt;#####Step 2.2: Update generated widget designer files
In the generated .ascx file, update the ‘ServiceUrl’ property on the FlatSelector control to ‘/Sitefinity/Services/Lists/ListService.svc/?managerType=&amp;amp;providerName=&amp;amp;itemType=Telerik.Sitefinity.Lists.Model.List&amp;amp;provider=&amp;amp;sortExpression=LastModified%20DESC&amp;amp;skip=0&amp;amp;take=50’.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/create-a-list-selector-field-in-a-widget-designer-in-sitefinity-6-2/widget-designer-serviceurl1.png&quot; alt=&quot;Service URL 1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In the generated .cs file, remove line 135 that sets the ConstantFilter property to ‘Visible=true’.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/create-a-list-selector-field-in-a-widget-designer-in-sitefinity-6-2/widget-designer-removeline135.png&quot; alt=&quot;FAQItemDesigner remove line 135&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Finally, in the generated .js file, change the property that is used as the value of the selected list from ‘OriginalContentId’ to ‘Id’.  This code can be found in the ‘_ListDoneSelecting’ method.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/create-a-list-selector-field-in-a-widget-designer-in-sitefinity-6-2/widget-designer-changejsfile.png&quot; alt=&quot;FAQItemDesigner update js file&quot; /&gt;&lt;/p&gt;

&lt;p&gt;At this point, you should be done!  Build your project, plop your new widget on a page and test it out!  Here’s what mine looks like.&lt;/p&gt;

&lt;p&gt;The edit dialog:
&lt;img src=&quot;/public/images/create-a-list-selector-field-in-a-widget-designer-in-sitefinity-6-2/widget-designer-editscreen.png&quot; alt=&quot;FAQItemDesigner edit screen&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The list select screen:
&lt;img src=&quot;/public/images/create-a-list-selector-field-in-a-widget-designer-in-sitefinity-6-2/widget-designer-selectscreen.png&quot; alt=&quot;FAQItemDesigner select screen&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The selected item screen:
&lt;img src=&quot;/public/images/create-a-list-selector-field-in-a-widget-designer-in-sitefinity-6-2/widget-designer-selectedscreen.png&quot; alt=&quot;FAQItemDesigner selected screen&quot; /&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>EPiServer 7: Cannot decrypt password</title>
   <link href="https://www.benramey.com/2014/04/17/episerver-7-cannot-decrypt-password/"/>
   <updated>2014-04-17T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2014/04/17/episerver-7-cannot-decrypt-password</id>
   <content type="html">&lt;p&gt;##Problem
I’ve been dealing with an issue in EPiServer 7 recently.  I got this error when trying to log into the admin back-end of the site.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Cannot decrypt password

Description: An unhandled exception occurred during the execution of the current web request. Please review the stack trace for more information about the error and where it originated in the code.

Exception Details: System.InvalidOperationException: Cannot decrypt password

Source Error:

An unhandled exception was generated during the execution of the current web request. Information regarding the origin and location of the exception can be identified using the exception stack trace below.

Stack Trace:

[InvalidOperationException: Cannot decrypt password]
EPiServer.Common.Security.HMACPasswordProvider.DecryptPassword(Byte[] ciphertext) +60
EPiServer.Common.Web.Authorization.Integrator.SynchronizeUser(MembershipUser membershipUser, String password, Boolean enableCreateNew) +1116
System.Web.SyncEventExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute() +80
System.Web.HttpApplication.ExecuteStep(IExecutionStep step, Boolean&amp;amp; completedSynchronously) +165&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;##Scenario
We originally installed the Relate+ site for our EPiServer installation. Through various bad decisions, we didn’t keep the custom code and templates we wrote separate from the Relate+ stuff. So, we inevitably created a mess where we did not need a ton of the Relate+ templates, page types, block types, etc but we could not longer easily pull our custom stuff out from the tangled mess.&lt;/p&gt;

&lt;p&gt;Well, we undertook the disentangling anyway (a good decision) and ended up with a much cleaner code base. This meant re-installing EPiServer for a clean (without Relate+) beginning. The database would remain the same to keep our content.&lt;/p&gt;

&lt;p&gt;We ran into this error when we got the new, cleaned-up site installed and running and then tried to log into the administration portion of the site.&lt;/p&gt;

&lt;p&gt;##Solution
At first, I found this post online: http://world.episerver.com/Modules/Forum/Pages/Thread.aspx?id=77776 which suggested changing over to the multiplexing membership and role providers and described the new hashing mechanism in EPiServer 7.&lt;/p&gt;

&lt;p&gt;At first, this seemed to work. Yay! But, the joy didn’t last long. I soon got the error again even after using the multiplexing providers. I dug a little deeper into the issue.&lt;/p&gt;

&lt;p&gt;What I found was (in retrospect) pretty obvious. When we did the new, clean installation of EPiServer, it also created a new web.config with new attributes on the machineKey element. These properties are used with forms authentication to encrypt and decrypt information. Well, we didn’t make sure to keep the same values between the old install and the new install. So, when it tried to decrypt login information created with the old descryptionKey using the new decryptionKey, it obviously didn’t work.&lt;/p&gt;

&lt;p&gt;Luckily, our trusty Systems Admins always keep backups of stuff they replace. We just went into the old web.config file from the previous site, copied the entire &lt;machineKey&gt; element and overwrite it in the new web.config. After an app pool recycle, the login was working great.&lt;/machineKey&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>EPiServer 7 “The file ‘/link/GUID.aspx’ does not exist.” Error</title>
   <link href="https://www.benramey.com/2014/03/27/episerver-7-the-file-linkguid-aspx-does-not-exist-error/"/>
   <updated>2014-03-27T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2014/03/27/episerver-7-the-file-linkguid-aspx-does-not-exist-error</id>
   <content type="html">&lt;p&gt;I ran into the following error while working with an installation of EPiServer 7 this week. It took me a long time to finally figure out the solution.&lt;/p&gt;

&lt;p&gt;First, here’s the error and stack trace:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;2014-03-27 12:12:43,396 [6] ERROR EPiServer.Global: 1.2.5 Unhandled exception in ASP.NET
System.Web.HttpException (0x80004005): The file ‘/link/cc299342a697494c8a4bc47717210bf0.aspx’ does not exist.
at System.Web.Compilation.BuildManager.GetVPathBuildResultInternal(VirtualPath virtualPath, Boolean noBuild, Boolean allowCrossApp, Boolean allowBuildInPrecompile, Boolean throwIfNotFound, Boolean ensureIsUpToDate)
at System.Web.Compilation.BuildManager.GetVPathBuildResultWithNoAssert(HttpContext context, VirtualPath virtualPath, Boolean noBuild, Boolean allowCrossApp, Boolean allowBuildInPrecompile, Boolean throwIfNotFound, Boolean ensureIsUpToDate)
at System.Web.Compilation.BuildManager.GetVirtualPathObjectFactory(VirtualPath virtualPath, HttpContext context, Boolean allowCrossApp, Boolean throwIfNotFound)
at System.Web.Compilation.BuildManager.CreateInstanceFromVirtualPath(VirtualPath virtualPath, Type requiredBaseType, HttpContext context, Boolean allowCrossApp)
at System.Web.Routing.PageRouteHandler.GetHttpHandler(RequestContext requestContext)
at System.Web.Routing.UrlRoutingModule.PostResolveRequestCache(HttpContextBase context)
at System.Web.HttpApplication.SyncEventExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute()
at System.Web.HttpApplication.ExecuteStep(IExecutionStep step, Boolean&amp;amp; completedSynchronously)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;As it turns out, I did not have a TemplateDescriptor attribute on the page template that I was trying to access. Adding the following TemplateDescriptor attribute to the code-behind class for my page template saved me.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;TemplateDescriptor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;~/Templates/PageTemplates/Home.aspx&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;partial&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Home&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TemplatePage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HomePage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</content>
 </entry>
 
 <entry>
   <title>The Dumbest Code I Ever Wrote</title>
   <link href="https://www.benramey.com/2014/03/21/the-dumbest-code-i-ever-wrote/"/>
   <updated>2014-03-21T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2014/03/21/the-dumbest-code-i-ever-wrote</id>
   <content type="html">&lt;p&gt;Here it is, folks: some of the dumbest code I’ve ever written and I just now noticed it.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;attachment; filename=\&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pagePdf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;.pdf&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;\&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</content>
 </entry>
 
 <entry>
   <title>NServiceBus with EntityFramework Persisters</title>
   <link href="https://www.benramey.com/2014/03/07/nservicebus-with-entityframework-persisters/"/>
   <updated>2014-03-07T00:00:00-06:00</updated>
   <id>https://www.benramey.com/2014/03/07/nservicebus-with-entityframework-persisters</id>
   <content type="html">&lt;h2 id=&quot;update-1132016&quot;&gt;Update 1/13/2016&lt;/h2&gt;
&lt;p&gt;This code (much refactored and improved) is now available as a &lt;a href=&quot;http://www.nuget.org/packages/GoodlyFere.NServiceBus.EntityFramework&quot;&gt;NuGet package&lt;/a&gt;.
Please see documentation and the code over at the &lt;a href=&quot;https://github.com/benjaminramey/GoodlyFere.NServiceBus.EntityFramework&quot;&gt;GitHub repository&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;
&lt;p&gt;NServiceBus is easily configurable to use NHibernate, RavenDB or in-memory persistence. RavenDB is built in and is the default. You can configure it to use in-memory persistence. You can install a NuGet package to use NHibernate which opens the door to many data stores.&lt;/p&gt;

&lt;p&gt;So, for a recent project in which we were using NServiceBus, I decided to use NHibernate as the ORM for our simple domain model. I might just be dumb, but I ran into all sorts of problems with NHibernate and MS DTC when I used a remote SQL server. Try as I might, I just couldn’t get NHibernate to work to persist my domain model even though it persisted the NServiceBus stuff just fine.&lt;/p&gt;

&lt;p&gt;I decided to switch over to EntityFramework for my domain model. NHibernate and EntityFramework coexisted just fine, but I wanted to use the same ORM for both NServiceBus and my domain model just to make things nice and clean. The problem is, there isn’t a prepackaged solution (none that I found at least) out there to use EntityFramework with NServiceBus. I had to implement my own persistence classes for NServiceBus. As it turns out, that wasn’t too hard. Below is a description of what you will need to do to get EntityFramework working as NServiceBus’ persistence layer. Much of it was modeled directly off of the NHibernate persistence classes found here: https://github.com/Particular/NServiceBus.NHibernate.&lt;/p&gt;

&lt;p&gt;Below are all the classes and interfaces I used to implement these persisters. Note that I have EF abstracted away through an IDataContext interface which the persisters use.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;IPersistSagas&lt;/li&gt;
  &lt;li&gt;ISubscriptionStorage&lt;/li&gt;
  &lt;li&gt;IPersistTimeouts&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Actually, this solution isn’t tied specifically to EntityFramework.  I have EF abstracted away through an IDataContext interface which the persisters use.&lt;/p&gt;

&lt;p&gt;##IDataContext
&lt;script src=&quot;https://gist.github.com/benjaminramey/9421173.js&quot; type=&quot;text/javascript&quot;&gt;
&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;##BaseDataContext
&lt;script src=&quot;https://gist.github.com/benjaminramey/9421291.js&quot;&gt;
&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;##EFDataContext
&lt;script src=&quot;https://gist.github.com/benjaminramey/9421303.js&quot;&gt;
&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;##IRepository
&lt;script src=&quot;https://gist.github.com/benjaminramey/9421272.js&quot;&gt;
&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;##EFRepository
Not every method is implemented because I didn’t need them all on this project. Using TDD, I only implemented methods as I needed them.
&lt;script src=&quot;https://gist.github.com/benjaminramey/9421323.js&quot;&gt;
&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;##EFDbContext
This is the project-specific EntityFramework DbContext.
&lt;script src=&quot;https://gist.github.com/benjaminramey/9421353.js&quot;&gt;
&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;##EFSagaPersister
&lt;script src=&quot;https://gist.github.com/benjaminramey/9421364.js&quot;&gt;
&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;##EFSubscriptionPersister
&lt;script src=&quot;https://gist.github.com/benjaminramey/9421372.js&quot;&gt;
&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;##EFTimeoutPersister
&lt;script src=&quot;https://gist.github.com/benjaminramey/9421383.js&quot;&gt;
&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;##TimeoutDataEntity
&lt;script src=&quot;https://gist.github.com/benjaminramey/9421403.js&quot;&gt;
&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;##Subscription
&lt;script src=&quot;https://gist.github.com/benjaminramey/9421461.js&quot;&gt;
&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;##SagaData
&lt;script src=&quot;https://gist.github.com/benjaminramey/9421470.js&quot;&gt;
&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;##Criteria classes
&lt;script src=&quot;https://gist.github.com/benjaminramey/9421428.js&quot;&gt;
&lt;/script&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Better Gruntfiles</title>
   <link href="https://www.benramey.com/2014/02/23/better-gruntfiles/"/>
   <updated>2014-02-23T00:00:00-06:00</updated>
   <id>https://www.benramey.com/2014/02/23/better-gruntfiles</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://www.thomasboyt.com/2013/09/01/maintainable-grunt.html&quot;&gt;More maintainable Gruntfiles&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Installing SharePoint 2010 Language Packs on Windows 7</title>
   <link href="https://www.benramey.com/2013/11/05/installing-sharepoint-2010-language-packs-on-windows-7/"/>
   <updated>2013-11-05T00:00:00-06:00</updated>
   <id>https://www.benramey.com/2013/11/05/installing-sharepoint-2010-language-packs-on-windows-7</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://johnnyharbieh.wordpress.com/2010/04/08/installing-language-packs-on-windows-7-for-sharepoint-server-2010-rc/&quot;&gt;Installing Language Packs on Windows 7 for SharePoint Server 2010 RC&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>How Not to Validate Email Addresses</title>
   <link href="https://www.benramey.com/2013/10/14/how-not-to-validate-email-addresses/"/>
   <updated>2013-10-14T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2013/10/14/how-not-to-validate-email-addresses</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://mdswanson.com/blog/2013/10/14/how-not-to-validate-email-addresses.html&quot;&gt;How Not to Validate Email Addresses&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>SharePoint 2010 Page Layout Button Javascript Error</title>
   <link href="https://www.benramey.com/2013/09/25/sharepoint-2010-page-layout-button-javascript-error/"/>
   <updated>2013-09-25T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2013/09/25/sharepoint-2010-page-layout-button-javascript-error</id>
   <content type="html">&lt;p&gt;I ran across an issue today in SharePoint 2010 where the Page Layout button would not open. It would throw the following error in Internet Explorer:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;SCRIPT5007&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Unable&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;property&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;‘&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nodeName&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;undefined&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reference&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;cui&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;js&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;character&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6422&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The following link gave me the answer.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://johnliu.net/blog/2010/12/22/sharepoint-2010-quick-fix-for-ribbon-page-layout-switch-java.html&quot;&gt;SharePoint 2010 – Quick Fix for Ribbon Page Layout switch JavaScript error&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Querying a Lookup Field with CAML</title>
   <link href="https://www.benramey.com/2013/07/15/querying-a-lookup-field-with-caml/"/>
   <updated>2013-07-15T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2013/07/15/querying-a-lookup-field-with-caml</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://forums.asp.net/t/1127580.aspx/1&quot;&gt;Caml Query with Lookup field&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Properly Setting Up SharePoint 2010 Search PDF Indexing</title>
   <link href="https://www.benramey.com/2013/06/26/properly-setting-up-sharepoint-2010-search-pdf-indexing/"/>
   <updated>2013-06-26T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2013/06/26/properly-setting-up-sharepoint-2010-search-pdf-indexing</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://nickgrattan.wordpress.com/2010/06/14/adobe-pdf-ifilter-indexing-with-sharepoint%C2%A02010/&quot;&gt;Adobe PDF IFilter Indexing with SharePoint 2010&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Error on /_vti_bin/owssvr.dll?cs=65001 When Creating or Editing a SharePoint List View</title>
   <link href="https://www.benramey.com/2013/06/13/error-on-_vti_binowssvr-dllcs65001-when-creating-or-editing-a-sharepoint-list-view/"/>
   <updated>2013-06-13T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2013/06/13/error-on-_vti_binowssvr-dllcs65001-when-creating-or-editing-a-sharepoint-list-view</id>
   <content type="html">&lt;blockquote&gt;
  &lt;p&gt;UPDATE (6/14/2013):
After some further issues I encountered (unrelated to the OWSSVR.dll error, but on this module) I found out that the problem is with accessing query string parameters (at least). However, accessing the HttpRequest object’s Url property, for example, doesn’t cause this error.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;So, I moved my code back to the BeginRequest event (to solve my other problem) and then I just did a simple HttpContext.Current.Request.Url.AbsoluteUri.Contains(“owssvr”) check to go on and check the query string parameters or not.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;problem&quot;&gt;Problem&lt;/h2&gt;
&lt;p&gt;I was recently very frustrated by the dreaded “Cannot complete this action” error on a SharePoint 2010 project when trying to edit or create a new view for any list.  I looked around and found several causes that others had pinpointed, but nothing really related to the specific situation I was seeing.  I wasn’t seeing this on a particular list or set of lists.  I could create an out-of-the-box SharePoint Document Library and get this error when trying to edit or create a view.&lt;/p&gt;

&lt;p&gt;What finally got me on the right track was this link here that a co-worker of mine found:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://social.msdn.microsoft.com/Forums/en-US/sharepointdevelopmentprevious/thread/ea0b1380-480f-4b2e-afde-77ed06995bb0&quot;&gt;MSDN forum thread&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In a response to the question in that thread, it is mentioned that accessing the SPContext static object in an HttpModule causes this error when the /_vti_bin/owssvr.dll is accessed.  Great!  There was only one problem for me: my HttpModule was not accessing the SPContext object anywhere. Nevertheless, when I removed my HttpModules from the web.config, the list editing and creation worked.  So, it was definitely something with my modules.&lt;/p&gt;

&lt;p&gt;Still, the post mentioned above got me on the right track.  By commenting out code a bit at a time, I narrowed the problem down to a check for the HttpContext.Current.Request object that I was performing.  This is probably the same error that is caused by the SPContext object, since, as I understand it, the SPContext object just wraps the HttpContext object.&lt;/p&gt;

&lt;p&gt;I had the following code in my HttpModule.  Here is what Init method looked like:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpApplication&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BeginRequest&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SetupOutputFilter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PreSendRequestHeaders&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WritePdfHeaders&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PreSendRequestContent&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WritePdfToOutput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Commenting out the tie into the BeginRequest event fixed the issue, so it had to be something there. SetupOutputFilter looked like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SetupOutputFilter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EventArgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IsPdfRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;HttpResponse&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;_pdfStream&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;PdfMemoryStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Filter&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_pdfStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Commenting out the if expression also fixed the issue. My IsPdfRequest property looked like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IsPdfRequest&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;IsNullOrEmpty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;as&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;as&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;pdf&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And there you have my access to the HttpContext object. I kind of needed this though, so I thought it might be a timing issue. Maybe accessing this on BeginRequest was the problem. I took a look at the ordering of the HttpModule events to find a good replacement. This StackOverflow thread helped me there:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/441421/httpmodule-event-execution-order&quot;&gt;StackOverflow thread&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;/h2&gt;

&lt;p&gt;By switching my SetOutputFilter method from the BeginRequest event to the PostReleaseRequestState event, I was able to fix the issue.&lt;/p&gt;

&lt;p&gt;So, the lesson here is this: if you need HttpModules for your SharePoint 2010 project, make sure they do not access the HttpContext object anywhere in the BeginRequest event.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>SharePoint Unknown Error After Database Attach</title>
   <link href="https://www.benramey.com/2013/06/06/sharepoint-unknown-error-after-database-attach/"/>
   <updated>2013-06-06T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2013/06/06/sharepoint-unknown-error-after-database-attach</id>
   <content type="html">&lt;p&gt;There are many reasons you might get one of those blank screens with just the text “An unknown error has occurred” when working with SharePoint.  Just search for it online and you’ll find many fixes.&lt;/p&gt;

&lt;p&gt;I found another one last night.  One of our system admins setup a SharePoint web application for me for development purposes.  We attached a database from a backup of our client’s production content.  But, I couldn’t get to the site.  It gave me the unknown error screen.&lt;/p&gt;

&lt;p&gt;I noticed in the ULS logs that the page request was immediately being redirected to the Access Denied page, but that wasn’t rendering either.&lt;/p&gt;

&lt;p&gt;As it turns out, the system admin that setup the site was let go a couple of weeks ago and as a result his Windows domain account was deactivated.  However, he was the lone Site Collection Administrator on the site.  Once I removed him and added myself, the site came up as expected.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>SharePoint LINQ (SPMetal) in Anonymous User Context</title>
   <link href="https://www.benramey.com/2013/05/23/sharepoint-linq-spmetal-in-anonymous-user-context/"/>
   <updated>2013-05-23T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2013/05/23/sharepoint-linq-spmetal-in-anonymous-user-context</id>
   <content type="html">&lt;p&gt;Refer to the links below to fix this issue of SPMetal LINQ queries failing in an anonymous user context in SharePoint 2010.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.tylerholmes.com/2011/04/access-denied-with-linq-to-sharepoint.html&quot;&gt;Access Denied with LINQ-to-SharePoint&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jcapka.blogspot.com/2010/05/making-linq-to-sharepoint-work-for.html&quot;&gt;Making Linq to SharePoint work for Anonymous users&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>SharePoint 2010 401 Unauthorized Error</title>
   <link href="https://www.benramey.com/2013/05/23/sharepoint-2010-401-unauthorized-error/"/>
   <updated>2013-05-23T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2013/05/23/sharepoint-2010-401-unauthorized-error</id>
   <content type="html">&lt;p&gt;There are many, many reasons why SharePoint will throw a 401 error.  Most of them are hard to track down and have absolutely no bearing on reality unless you’re a genius.  So, your only hope is to track down obscure registry updates (hacks), scour the internet for random things other people have found or just give up.  :-)&lt;/p&gt;

&lt;p&gt;I just about pulled my hair out yesterday trying to get to the bottom of a 401 Unauthorized error I kept getting for my anonymous access-enabled web application.  I’m not sure why, but I never tried debugging my application to see where the error was actually being thrown.  I assumed it was on the IIS level or some SharePoint level, so I never tried debugging.&lt;/p&gt;

&lt;p&gt;So, lesson #1 when getting 401 in SharePoint: debug your application.&lt;/p&gt;

&lt;p&gt;Lesson #2: apparently accessing the DefaultPage property of a PublishingWeb requires elevated privileges.  Here was my code:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GetDefaultPageUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PublishingWeb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;IsPublishingWeb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SPContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Web&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;PublishingWeb&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;web&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PublishingWeb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetPublishingWeb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SPContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Web&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;web&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;web&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DefaultPage&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Empty&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;web&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DefaultPage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;That last line was throwing the 401. So, the solution was to wrap it in an SPSecurity.RunWithElevatedPrivileges call, like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GetDefaultPageUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;SPSite&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currentSite&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SPContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;SPWeb&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currentWeb&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SPContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Web&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;SPSecurity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;RunWithElevatedPrivileges&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// reopen site &amp;amp; web, otherwise defaultpage will throw an error&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SPSite&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SPSite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;currentSite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SPWeb&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;web&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;OpenWeb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;currentWeb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PublishingWeb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;IsPublishingWeb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;web&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

      &lt;span class=&quot;n&quot;&gt;PublishingWeb&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pubWeb&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PublishingWeb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetPublishingWeb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;web&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;web&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

      &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pubWeb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DefaultPage&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Empty&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pubWeb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DefaultPage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Thanks to this post for the answer about re-opening the site and web inside the RunWithElevatedPrivileges code:
&lt;a href=&quot;http://henry-chong.com/2010/11/sharepoint-anonymous-access-and-publishing-web-default-page&quot;&gt;http://henry-chong.com/2010/11/sharepoint-anonymous-access-and-publishing-web-default-page&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Sitecore Rocks and SharePoint Package Interference</title>
   <link href="https://www.benramey.com/2013/05/08/sitecore-rocks-and-sharepoint-package-interference/"/>
   <updated>2013-05-08T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2013/05/08/sitecore-rocks-and-sharepoint-package-interference</id>
   <content type="html">&lt;p&gt;I ran into an interesting problem today while working in Visual Studio 2010 on a SharePoint 2010 project.&lt;/p&gt;

&lt;p&gt;You are supposed to be able to open the Package.package files to edit the Features that are included and their order, etc.  However, when I double-clicked on the Package.package file to open it, I got a strange dialog box that said the document was already open, would I like to close it?  If I said “yes”, another “Package Connection” dialog box would open with all the IIS sites I had setup listed.  However, none of my SharePoint sites were listed and choosing any of the other sites just failed.&lt;/p&gt;

&lt;p&gt;I have no idea why, honestly, but apparently Sitecore Rocks is causing this issue.  I had the Visual Studio extension enabled (I had worked on a Sitecore project a few months ago).  When I disabled it and restarted Visual Studio, everything worked as I expected when opening Package files.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>ASP.NET MVC 3.0 Redirect to Account/Login with Windows Authentication</title>
   <link href="https://www.benramey.com/2013/04/23/asp-net-mvc-3-0-redirect-to-accountlogin-with-windows-authentication/"/>
   <updated>2013-04-23T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2013/04/23/asp-net-mvc-3-0-redirect-to-accountlogin-with-windows-authentication</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://www.benramey.com/2013/04/23/asp-net-mvc-3-0-redirect-to-accountlogin-with-windows-authentication/#&quot;&gt;ASP.NET MVC 3 Windows Authentication problem – redirects to Account/Login&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Ektron Html Encodes Certain Content Title Characters</title>
   <link href="https://www.benramey.com/2013/03/20/ektron-html-encodes-certain-content-title-characters/"/>
   <updated>2013-03-20T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2013/03/20/ektron-html-encodes-certain-content-title-characters</id>
   <content type="html">&lt;p&gt;I found out today, while trying to search for certain content items in Ektron, that Ektron HTML encodes certain characters in content titles–but does not, apparently, HTML encode the entire title.&lt;/p&gt;

&lt;p&gt;Here is a list of characters I’ve found so far that Ektron encodes in the title:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;/ (forward slash)&lt;/li&gt;
  &lt;li&gt;‘ (apostrophe – single quote)&lt;/li&gt;
  &lt;li&gt;&amp;amp; (ampersand)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is what I know they do NOT encode in titles:&lt;/p&gt;

&lt;p&gt;® (registered trademark symbol)&lt;/p&gt;

&lt;p&gt;So, if you need to perform a search for Ektron content with a title like “Miner’s Hat”, then you need to encode it as “Miner's Hat” to find it.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>TaxonomyManager WCF Error in Ektron 8.5 3-tier Setup</title>
   <link href="https://www.benramey.com/2013/03/15/taxonomymanager-wcf-error-in-ektron-8-5-3-tier-setup/"/>
   <updated>2013-03-15T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2013/03/15/taxonomymanager-wcf-error-in-ektron-8-5-3-tier-setup</id>
   <content type="html">&lt;p&gt;##Problem
I’m currently working on a project to import data into an existing Ektron 8.5 SP3 installation. It is pulling existing product data from a database, transforming it into the smart form XML we need and then shoving that data into the Ektron installation.  In addition to creating content items, the import tool also updates metadata and taxonomy fields.&lt;/p&gt;

&lt;p&gt;The update the taxonomy fields, I use the TaxonomyManager to get the taxonomy by name, then set the taxonomy IDs on TaxonomyItemData objects.  This import tool isn’t running inside of an Ektron installation–it’s a standalone tool–so it takes advantage of Ektron 8.5’s 3-tier setup.  This means the TaxonomyManager calls are going over the wire via the WCF services.&lt;/p&gt;

&lt;p&gt;The TaxonomyManager calls were throwing WCF errors, however, saying that the ITaxonomyManager interface was violating the WCF rules of not having any same-named methods.  If you look, the ITaxonomyManager interface defines multiple same-named methods, including two versions of GetList.&lt;/p&gt;

&lt;p&gt;This was pretty confusing to me because I couldn’t believe that Ektron would release a major version like 8.5, touting their 3-tier capabilities, without having tested one of the major content managers liket he TaxonomyManager.&lt;/p&gt;

&lt;p&gt;##Solution
Whatever the case may be, I started snooping around on the net for others having experienced this issue.  As usual though (also a mystery), I couldn’t find any info on it.  Why does there seem to be so little content on the net about Ektron??&lt;/p&gt;

&lt;p&gt;I started snooping around with decompiling the Ektron.Cms.ObjectFactory DLL code where the ITaxonomyManager interface is defined.  Everything looked good–it had the same-named methods, but was using the OperationContract attribute which lets you define the action name.  The two GetList actions were defined with different names, so something wasn’t matching up with the error I was seeing in my import project.  You can see that the two GetList methods have different Action values, making it OK for WCF.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;OperationContract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;GetList&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TaxonomyData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GetList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TaxonomyCriteria&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;criteria&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;OperationContract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;GetListByCustomProperty&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;GetListByCustomPropertyCriteria&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TaxonomyData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GetList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TaxonomyCustomPropertyCriteria&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;criteria&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;When I decompiled the Ektron.Cms.ObjectFactory DLL that I was using in my import project, I found the problem.  You can see it here:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;OperationContract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;GetList&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TaxonomyData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GetList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TaxonomyCriteria&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;criteria&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;OperationContract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;GetList&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TaxonomyData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GetList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TaxonomyCustomPropertyCriteria&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;criteria&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Notice how the Action is defined with the same name.  I checked the DLL versions of my DLL and the DLL in the Ektron 8.5 SP3 site I was pushing content too.  They were both the same: 8.5.0.356.  So, somewhere along the line, Ektron fixed the issue without updating the AssemblyFileVersion to signify a bug fix/updated code.  Once I copied the DLL from the SP3 site’s bin folder to my import project, it worked just fine.&lt;/p&gt;

&lt;p&gt;So, if you have the same problem somewhere, look for an updated Ektron.Cms.ObjectFactory 8.5 DLL–probably in SP3.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Ektron Paths</title>
   <link href="https://www.benramey.com/2013/03/15/ektron-paths/"/>
   <updated>2013-03-15T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2013/03/15/ektron-paths</id>
   <content type="html">&lt;p&gt;For future reference, here is how you have to construct paths for finding Ektron content items, folders and taxonomy items.&lt;/p&gt;

&lt;p&gt;##FolderManager and ContentManager&lt;/p&gt;

&lt;p&gt;Use forward slashes (/)
Do NOT include an initial slash
DO include a trailing slash
Example: “folder1/folder2/otherfolder/”
Given this code:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;n&quot;&gt;FolderManager&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fm&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;FolderManager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;FolderCriteria&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;folderCrit&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;FolderCriteria&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;folderCrit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AddFilter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;FolderProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FolderPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CriteriaFilterOperator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EqualTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;folderPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;FolderData&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;folder&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;folderCrit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;FirstOrDefault&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then the “folderPath” variable needs to be in this format: “folderName1/folderName2/”.  The same would apply for finding all the content in a folder via the contents’ path.&lt;/p&gt;

&lt;p&gt;##TaxonomyManager&lt;/p&gt;

&lt;p&gt;Use backslashes ()
DO use an initial slash
Do NOT use a trailing slash
Example: “\taxonomy1\taxonomy2\othertaxonomy”
So, given this code:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;n&quot;&gt;ITaxonomyManager&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_taxManager&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ObjectFactory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetTaxonomyManager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;TaxonomyData&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tax&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_taxManager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;taxPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The “taxPath” variable needs to be in this format: “\rootTaxonomyName\subTaxonomyName1\subTaxonomyName2″.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Converting an Interface Expression to a Concrete Expression</title>
   <link href="https://www.benramey.com/2013/01/23/converting-an-interface-expression-to-a-concrete-expression/"/>
   <updated>2013-01-23T00:00:00-06:00</updated>
   <id>https://www.benramey.com/2013/01/23/converting-an-interface-expression-to-a-concrete-expression</id>
   <content type="html">&lt;p&gt;I had a case recently where I needed to convert a LINQ expression of the type of an interface and I needed to convert it to be based on a concrete implementation of that interface.  I came up with the  following solution, using an ExpressionVisitor and a simple helper method.&lt;/p&gt;

&lt;p&gt;First, the helper method in a static class.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;k&quot;&gt;internal&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Expression&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TConcrete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ConvertToConcreteExpression&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TConcrete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TInterface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Expression&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TInterface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interfaceExpression&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TInterface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;IsAssignableFrom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TConcrete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;TInterface must be assignable from TConcrete to convert an expression.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TransformVisitor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TConcrete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TInterface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;interfaceExpression&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Here is the TransformVisitor class.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;k&quot;&gt;internal&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TransformVisitor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TConcrete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TInterface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ExpressionVisitor&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;readonly&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ParameterExpression&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_param&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Expression&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Parameter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TConcrete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;param_0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Expression&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TConcrete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Expression&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;expression&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;visitor&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TransformVisitor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TConcrete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TInterface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;();&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newLambda&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Expression&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TConcrete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&amp;gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;visitor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Visit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;expression&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newLambda&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Expression&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VisitLambda&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Expression&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;IsAssignableFrom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TInterface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;)))&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Expression&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Lambda&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TConcrete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&amp;gt;(&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;Visit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;_param&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;VisitLambda&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Expression&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;VisitMember&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MemberExpression&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Member&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DeclaringType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;IsAssignableFrom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TInterface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Expression&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;MakeMemberAccess&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;nf&quot;&gt;Visit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Expression&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TConcrete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Member&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;VisitMember&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Expression&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;VisitParameter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ParameterExpression&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;IsAssignableFrom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TInterface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_param&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;VisitParameter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</content>
 </entry>
 
 <entry>
   <title>LINQ to Ektron Search Library</title>
   <link href="https://www.benramey.com/2013/01/15/linq-to-ektron-search-library/"/>
   <updated>2013-01-15T00:00:00-06:00</updated>
   <id>https://www.benramey.com/2013/01/15/linq-to-ektron-search-library</id>
   <content type="html">&lt;p&gt;I am currently working on a project at VML that will make use of Ektron’s 3-tier architecture. It will be an MVC 4.0 site that basically uses an existing Ektron site as a datasource. It pulls in various Ektron content and then feeds it into the MVC application (a mobile version of the Ektron site).&lt;/p&gt;

&lt;p&gt;I wanted to take time on this project to make everything “right”. I am using MVC as my presentation layer, I have a distinct business logic layer and underneath that I have a nice data layer. This data layer is what is interacting with Ektron. The data model for the application is defined separately through a set of interfaces that describe different data objects. The presentation and business logic layers know nothing about the concrete implementations of these interfaces. So, my project structure looks like this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Project.Web – my MVC application&lt;/li&gt;
  &lt;li&gt;Project.Data – the set of interfaces that define my data model and repositories&lt;/li&gt;
  &lt;li&gt;Project.Data.Ektron – the implementation of the Project.Data interfaces with Ektron (data model and repositories)&lt;/li&gt;
  &lt;li&gt;Project.BusinessLayer – the service layer that sits on top of Project.Data.Ektron (with no direct knowledge of it)
I tie it all neatly together with dependency injection using Autofac (that’s how my business layer doesn’t need to know about Project.Data.Ektron).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I thought about a few designs for how my repositories would receive queries for data.  Of course, nothing beats LINQ for this purpose.  The problem is, Ektron doesn’t implement anything like LINQ-to-Ektron to query its data.  So, what to do?&lt;/p&gt;

&lt;p&gt;I really didn’t want to move away from LINQ.  Anything else was going to be too rigid and cumbersome to use.  I started looking into my own implementation of LINQ-to-Ektron.  Ektron already implements a LINQ-like expression tree search via it’s AdvancedSearchCriteria search API.  So, my thinking was to take LINQ queries and translate them into those AdvancedSearchCriteria expressions.&lt;/p&gt;

&lt;p&gt;As I started to look into what it took to create a LINQ QueryProvider, I was overwhelmed.  I read through the first few posts of Matt Warren’s “tutorial” here: &lt;a href=&quot;http://blogs.msdn.com/b/mattwar/archive/2007/07/30/linq-building-an-iqueryable-provider-part-i.aspx&quot;&gt;http://blogs.msdn.com/b/mattwar/archive/2007/07/30/linq-building-an-iqueryable-provider-part-i.aspx&lt;/a&gt;.  I didn’t even understand half of what he was talking about, but I copied his code and started tinkering.  I gave up a couple of times, thinking this would take way too long to implement. But, I always came back to wanting to use LINQ for my repositories.  This meant I had to do some kind of LINQ-to-Ektron search translation and that meant I had do a LINQ query provider for it.&lt;/p&gt;

&lt;p&gt;I actually got to the point where I had a working query provider that successfully performed searches through Ektron.  It was pretty exciting.  Somewhere along the way, however, I discovered Remotion’s re-linq library and I knew I needed to rewrite my entire library.  re-linq does a great job of pre-parsing any LINQ expression into a more consistent format to translate into whatever you want to translate it into.  You still have to do the actual work of translating the query into something useful, but the gazillions of tiny tasks of parsing the query, evaluating evaluatable parts, etc are all taken care of for you.  In addition, it gives real structure to your query parsing code.&lt;/p&gt;

&lt;p&gt;What I ended up with, I decided to put on GitHub as an open-source project so that other Ektron developers (which I do NOT claim to be!) could benefit from it.  I’ve also created a NuGet package out of it to easily include in your own projects.&lt;/p&gt;

&lt;p&gt;I need users and contributors to beef it up and test it out.  So far, I’ve only had time to test it with the one project I developed it for (which is an Ektron 8.5 installation).  So, my domain of testing has been pretty limited.  I need it tested/expanded for 8.6 and for all sorts of different uses.&lt;/p&gt;

&lt;p&gt;Check out the library here:&lt;/p&gt;

&lt;p&gt;GitHub: &lt;a href=&quot;https://github.com/benjaminramey/GoodlyFere.Ektron.Linq&quot;&gt;https://github.com/benjaminramey/GoodlyFere.Ektron.Linq&lt;/a&gt;
NuGet: &lt;a href=&quot;http://nuget.org/packages/GoodlyFere.Ektron.Linq&quot;&gt;http://nuget.org/packages/GoodlyFere.Ektron.Linq&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;PS A note on the name “Goodly Fere”.  Goodly Fere is the name given to Christ in a ballad by Ezra Pound.  Read it here: &lt;a href=&quot;http://www.bartleby.com/265/295.html&quot;&gt;http://www.bartleby.com/265/295.html&lt;/a&gt;.  My faith in Christ defines everything I do and say (at least, it should–often I fall short of that ideal). Colossians 3:17 says to do everything in the name of the Lord Jesus.  That’s quite a standard!  After all, Paul started off that letter to the Colossians talking about how all of Creation was made by, through and for Christ.  I think Creation is a pretty high standard of quality.  I desire to reflect that standard of quality (as much as I can) in everything I do too–including writing code libraries.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Setting Selected Items on Sitefinity 5.1 PagesSelector in Javascript</title>
   <link href="https://www.benramey.com/2012/10/25/setting-selected-items-on-sitefinity-5-1-pagesselector-in-javascript/"/>
   <updated>2012-10-25T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2012/10/25/setting-selected-items-on-sitefinity-5-1-pagesselector-in-javascript</id>
   <content type="html">&lt;p&gt;##Problem
Today I nearly tore my hair out trying to get set the selected items (having a list of GUIDs) on the PagesSelector control in Sitefinity through the Javascript API to the control.&lt;/p&gt;

&lt;p&gt;You are supposed to be able to use the set_selectedItemIds method to do this, but it doesn’t work. Nothing happens after you call this method.&lt;/p&gt;

&lt;p&gt;After doing some debugging through Sitefinity’s javascript, I found a bug which, when fixed, causes the set_selectedItemIds method to work as expected.&lt;/p&gt;

&lt;p&gt;##Solution
I am using a WidgetDesigner in which I have the PagesSelector control. My goal is pretty simple: I want the content editors to be able to select a set of pages for which to show links in the footer of their website. When they edit the footer widget, the PagesSelector should show up, let them choose pages (showing the currently selected ones) and let them save those selections.&lt;/p&gt;

&lt;p&gt;Everything works fine. Except, once I save a selection in the PagesSelector, on subsequent edits, the currently selected items would not show up, as described above.&lt;/p&gt;

&lt;p&gt;Here is the bug I found in the Sitefinity code. The set_selectedItemIds function is really simple. It looks like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;set_selectedItemIds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ids&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_selectedItemIds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ids&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_updateGridSelection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_updateTreeSelection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It updates a property (_selectedItemIds) and then updates the grid (not sure what that is) and then the tree (of page nodes). The _updateTreeSelection method is what we’re looking for–this is where the bug is. The method looks like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;_updateTreeSelection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_treeIsBound&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_treeMustBeUpdated&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_treeMustBeUpdated&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tree&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get_itemsTree&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;binder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tree&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getBinder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_selectedItemId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;binder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setSelectedValues&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_selectedItemId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;selectedItems&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tree&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get_selectedItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;selectedItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;binder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clearSelection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;binder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setSelectedItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;selectedItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_selectedItemIds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;binder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setSelectedValues&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_selectedItemIds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_raiseSelectionApplied&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The problem is on line 13. tree.get_selectedItems() returns an empty array when there are no items selected. So, the expression if (selectedItems) { } will always be true–but we want to get to the else statement, as you can see, to set the selection from the this._selectedItemIds array.&lt;/p&gt;

&lt;p&gt;The beauty (and danger!) of javascript is that you can easily fix something like this in your own code by simply redefining their method. Here is my code that fixes this bug:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;wrapper&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get_pagesSelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;selector&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get_pagesSelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get_pageSelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;selecting&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;wrapper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;add_selectionApplied&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;selecting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;selecting&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pageIds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;controlData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;FooterPages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pageIds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pages&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pageIds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;oldMethod&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_updateTreeSelection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_updateTreeSelection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_treeIsBound&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_treeMustBeUpdated&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_treeMustBeUpdated&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tree&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get_itemsTree&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;binder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tree&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getBinder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_selectedItemId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;binder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setSelectedValues&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_selectedItemId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;selectedItems&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tree&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get_selectedItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;selectedItems&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;selectedItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;binder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clearSelection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;binder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setSelectedItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;selectedItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_selectedItemIds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;binder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setSelectedValues&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_selectedItemIds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_raiseSelectionApplied&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{});&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;set_selectedItemIds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_updateTreeSelection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;oldMethod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;First, I attach to the selectionApplied method. If you try to do the above code before that is done, your selection will just be overridden (or just not work–not sure which). This event will get called when you call set_selectedItemIds. To avoid an infinite loop, then, I use the selecting flag at the top of the event function I am attaching.&lt;/p&gt;

&lt;p&gt;Second, I parse out my ids into an array.&lt;/p&gt;

&lt;p&gt;Third, I save the old version of the _updateTreeSelection method and then override it with my own. Notice, the fix on line 13 of that method. I have added ” &amp;amp;&amp;amp; selectedItems.length &amp;gt; 0″.&lt;/p&gt;

&lt;p&gt;Fourth, now that I have a fixed method, I call selector.set_selectedItemIds, passing in my array of ids and it works!&lt;/p&gt;

&lt;p&gt;Lastly, I change the method back to the original (just in case the seemingly faulty if expression is what they intended in other situations).&lt;/p&gt;

&lt;p&gt;Hope that helps!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Indexing Taxonomy Fields For Search in Sitefinity 5.1</title>
   <link href="https://www.benramey.com/2012/10/19/indexing-taxonomy-fields-for-search-in-sitefinity-51/"/>
   <updated>2012-10-19T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2012/10/19/indexing-taxonomy-fields-for-search-in-sitefinity-51</id>
   <content type="html">&lt;p&gt;##Problem
We recently ran into a rather surprising issue with a Sitefinity 5.1 installation. We wanted a pretty simple feature: when searching and using Lucene, we wanted the values of any taxonomy fields to be indexed with Sitefinity’s Lucene back-end so that items could be searched by their attached taxonomy. This is apparently impossible with the basic installation because you can only search short text and long text fields.&lt;/p&gt;

&lt;p&gt;So, I began on a quest to implement this somehow and ran into another wall: the Sitefinity documentation on their search API is horrendously non-existent. We mostly had to rely on forum posts and decompiling Telerik assemblies to see how stuff worked. But, this did eventually lead to a solid solution.&lt;/p&gt;

&lt;p&gt;##Solution
It took me about 13 hours of research to figure out what to do and then just about an hour to actually implement. So, the good news is that it’s a pretty simple solution!&lt;/p&gt;

&lt;p&gt;When you create a search index in Sitefinity’s back-end, you can add a comma-separated list of extra fields to index. Sitefinity indexes a standard set (like Title). But, if you create custom dynamic modules with other fields you want to index you have to add them in this Additional Fields box. Here here:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/2012-10-19-indexing-taxonomy-fields-for-search-in-sitefinity-51/addtionalfields.png&quot; alt=&quot;Additional Fields&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Looking through the de-compiled code for Sitefinity’s SearchModule, I found that it registered a special outbound pipe that updates the Lucene indexes (not directly, but through Sitefinity’s abstraction, it appears) when you publish an item. It also registered various Translator classes with PipeTranslatorFactory.RegisterTranslator. Digging through the code in that SearchIndexOutboundPipe and the various translator classes it registered, I finally found that when the SearchIndexOutboundPipe runs, it reads that comma-separated list of additional fields from your index and ties them to the ConcatenationTranslator through some type of mapping. It looked like these translators were being used by the SearchModule to translate content values into index-able values for the Lucene indexing system.&lt;/p&gt;

&lt;p&gt;Turns out, I was right. With some more trial and error from that point on, I came up with this solution.&lt;/p&gt;

&lt;p&gt;Override ConcatenationTranslator
First of all, you need to create a new class that inherits from ConcatenationTranslator. This is a public class in the Telerik.Sitefinity.Publishing.Translators namespace. I called my class CustomConcatenationTranslator. IN the base class, the Translate method turns an array of object values into a space-separated string. I’ll show the code in a minute, but the first thing you need to do after creating the class is register it with the pipeline. In Global.asax.cs, add these lines (around any other code you have there):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Application_Start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EventArgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Bootstrapper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Initialized&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Bootstrapper_Initialized&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Bootstrapper_Initialized&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Telerik&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Sitefinity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ExecutedEventArgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CommandName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Bootstrapped&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;PipeTranslatorFactory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;RegisterTranslator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;CustomConcatenationTranslator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You don’t have to unregistered the existing ConcatenationTranslator. Your registration will replace it as long as you don’t rename the translator by overriding it’s Name property.&lt;/p&gt;

&lt;p&gt;What I wanted to do was check if the data being translated was a TrackedList&lt;Guid&gt; type. This is what your taxonomy fields are in code. Here is my code for the CustomConcatenationTranslator class.&lt;/Guid&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CustomConcatenationTranslator&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ConcatenationTranslator&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;readonly&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TaxonomyManager&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_taxonomyManager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;CustomConcatenationTranslator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;_taxonomyManager&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TaxonomyManager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetManager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Translate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IDictionary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;translationSettings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Length&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;StringBuilder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;concatedStr&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;StringBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;ConcatValues&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;concatedStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;concatedStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IsTrackedList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TrackedList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ConcatValues&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StringBuilder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;concatedStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;++)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IsTrackedList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Guid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;TranslatedTaxonomies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GetString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

      &lt;span class=&quot;n&quot;&gt;concatedStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;concatedStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;‘&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;‘&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;TranslatedTaxonomies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;taxNames&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Guid&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;guid&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TrackedList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Guid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;taxon&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_taxonomyManager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetTaxon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;guid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;taxNames&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;taxon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;taxNames&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It should be pretty simple to follow. Basically, if I find a data value is a TrackedList&lt;Guid&gt;, I get the Taxon items with that Guid ID, get the name of that Taxon and then concatenate those values, separated by a space. If the data object is anything other than a TrackedList&lt;Guid&gt;, I used the default ConcatenationTranslator behavior.&lt;/Guid&gt;&lt;/Guid&gt;&lt;/p&gt;

&lt;p&gt;Conclusion
That’s really all you need to do. Just go into your Sitefinity back-end, re-index your search index and you can now search your content by any taxonomy it has attached to it.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Custom Error Pages with Sitefinity</title>
   <link href="https://www.benramey.com/2012/10/12/custom-error-pages-with-sitefinity/"/>
   <updated>2012-10-12T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2012/10/12/custom-error-pages-with-sitefinity</id>
   <content type="html">&lt;p&gt;I had a considerably hard time today getting just a simple 404 error page (custom) to show up in all cases for a Sitefinity installation. It probably has nothing to do with Sitefinity and a lot more to do with my lack of experience doing this simple task. But, anyhow, here are my findings.&lt;/p&gt;

&lt;p&gt;You have to setup the error pages in two places in the application’s web.config to cover all of your bases.&lt;/p&gt;

&lt;p&gt;##system.web/customErrors
You have to setup your error pages in the system.web/customErrors section of your web.config to cover calls to non-existent *.aspx pages (and probably other ASP.NET-handled pages as well). My customErrors section looks like this. It will be expanded to cover other error codes.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;customErrors&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;mode=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;On&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;redirectMode=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ResponseRewrite&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;error&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;statusCode=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;404&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;redirect=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;~/Static/404.htm&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/customErrors&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;##system.webServer/httpErrors
The next section you need is the system.webServer/httpErrors section. I never knew this section exists, but it corresponds to the Errors panel in IIS Manager 7.5 for your website. This section covers request for non-existing folders and static files (like /bogusFolder or /bogusFile.htm). Mine looks like this and it will likewise be expanded for other error codes.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;httpErrors&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;errorMode=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Custom&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;defaultResponseMode=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;File&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;remove&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;statusCode=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;404&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;error&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;statusCode=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;404&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Static\404.htm&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/httpErrors&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Because IIS has default settings for this stuff, you need to use the remove element before adding your own error messages. You can find more specifics on this configuration element here: &lt;a href=&quot;http://www.iis.net/configreference/system.webserver/httperrors&quot;&gt;http://www.iis.net/configreference/system.webserver/httperrors&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You have other options than the defaultResponseMode=”File” for the httpErrors section. See the link above for more information about this. You can redirect to *.aspx files and stuff for more dynamically handled pages. I wanted very simple, static HTML pages to ensure maximum possibility of the page rendering and displaying a legible error to the user.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Sitefinity Configuration File Changes When Creating and Activating a Dynamic Module</title>
   <link href="https://www.benramey.com/2012/10/10/sitefinity-configuration-file-changes-when-creating-and-activating-a-dynamic-module/"/>
   <updated>2012-10-10T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2012/10/10/sitefinity-configuration-file-changes-when-creating-and-activating-a-dynamic-module</id>
   <content type="html">&lt;p&gt;After you create and activate a dynamic module with Module Builder in Sitefinity several configuration files are changes inside of App_Data/Sitefinity/Configuration.  Here’s a list of what is changed.&lt;/p&gt;

&lt;h2 id=&quot;contentviewconfigconfig&quot;&gt;ContentViewConfig.config&lt;/h2&gt;
&lt;p&gt;A config:link element is added under contentViewControls.  Example:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;config:link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;definitionName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.DynamicTypes.Model.Configchangetests.ConfigChangeBackendDefinition&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dynamicModulesConfig/contentViewControls/Telerik.Sitefinity.DynamicTypes.Model.Configchangetests.ConfigChangeBackendDefinition&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;module=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ModuleBuilder&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;dynamicmodulesconfigconfig&quot;&gt;DynamicModulesConfig.config&lt;/h2&gt;
&lt;p&gt;And entire contentViewControl section is added under the contentViewControls element. Example:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;contentViewControl&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;contentType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.DynamicTypes.Model.Configchangetests.ConfigChange&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;managerType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.DynamicModules.DynamicModuleManager, Telerik.Sitefinity&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;useWorkflow=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;definitionName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.DynamicTypes.Model.Configchangetests.ConfigChangeBackendDefinition&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;views&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;view&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;gridCssClass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sfPagesTreeview&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;searchFields=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Title&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;doNotBindOnClientWhenPageIsLoaded=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;allowPaging=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;allowUrlQueries=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;disableSorting=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;itemsPerPage=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;50&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;canUsersSetItemsPerPage=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;sortExpression=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;LastModified DESC&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;detailsPageId=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;00000000-0000-0000-0000-000000000000&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;webServiceBaseUrl=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;~/Sitefinity/Services/DynamicModules/Data.svc/&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;templateEvaluationMode=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;None&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;itemsParentId=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;00000000-0000-0000-0000-000000000000&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;renderLinksInMasterView=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;enableSocialSharing=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;displayMode=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Read&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;useWorkflow=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Config changes&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;viewType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.DynamicModules.Web.UI.Backend.DynamicContentMasterGridView&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;viewName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Config changeBackendList&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type:this=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.ContentUI.Views.Backend.Master.Config.MasterGridViewElement, Telerik.Sitefinity&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;decisionScreens&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;add&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;decisionType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;NoItemsExist&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;displayed=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;messageText=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;No config changes have been created yet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;messageType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Neutral&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;NoItemsExistScreen&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;actions&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;add&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commandName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;create&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commandButtonType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Create&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isFilter=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;permissionSet=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Configchangetests-ConfigChange&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;actionName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Create&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;relatedSecuredObjectTypeName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.DynamicModules.Builder.Model.DynamicModuleType&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;relatedSecuredObjectId=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;95f17af4-12b4-491f-bfbd-f4cf8c02c0b0&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cssClass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sfCreateItem&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Create a config change&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wrapperTagKey=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Unknown&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isSeparator=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Create&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/actions&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/add&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/decisionScreens&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;dialogs&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;add&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ContentViewInsertDialog&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;openOnCommand=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;create&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;100%&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;100%&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;initialBehaviors=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Maximize&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;behaviors=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;None&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;autoSizeBehaviors=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Default&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isfullscreen=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;visiblestatusbar=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;visibletitlebar=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;params=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;?ControlDefinitionName=Telerik.Sitefinity.DynamicTypes.Model.Configchangetests.ConfigChangeBackendDefinition&amp;amp;amp;ViewName=Config changeBackendInsertView&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ismodal=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;destroyOnClose=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ReloadOnShow=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cssclass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sfMaximizedWindow&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ContentViewInsertDialog on create&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;add&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ContentViewEditDialog&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;openOnCommand=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;edit&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;100%&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;100%&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;initialBehaviors=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Maximize&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;behaviors=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;None&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;autoSizeBehaviors=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Default&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isfullscreen=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;visiblestatusbar=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;visibletitlebar=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;params=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;?ControlDefinitionName=Telerik.Sitefinity.DynamicTypes.Model.Configchangetests.ConfigChangeBackendDefinition&amp;amp;amp;ViewName=Config changeBackendEditView&amp;amp;amp;Id=&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ismodal=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;destroyOnClose=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ReloadOnShow=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cssclass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sfMaximizedWindow&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ContentViewEditDialog on edit&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;add&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ContentViewEditDialog&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;openOnCommand=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;preview&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;100%&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;100%&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;initialBehaviors=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Maximize&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;behaviors=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;None&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;autoSizeBehaviors=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Default&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isfullscreen=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;visiblestatusbar=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;visibletitlebar=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;params=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;?ControlDefinitionName=Telerik.Sitefinity.DynamicTypes.Model.Configchangetests.ConfigChangeBackendDefinition&amp;amp;amp;ViewName=Config changeBackendPreviewView&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ismodal=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;destroyOnClose=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ReloadOnShow=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cssclass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sfMaximizedWindow&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ContentViewEditDialog on preview&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;add&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ModulePermissionsDialog&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;openOnCommand=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;permissions&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;100%&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;100%&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;initialBehaviors=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Maximize&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;behaviors=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;None&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;autoSizeBehaviors=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Default&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isfullscreen=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;visiblestatusbar=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;visibletitlebar=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;params=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;?moduleName=ModuleBuilder&amp;amp;amp;typeName=Telerik.Sitefinity.DynamicModules.Builder.Model.DynamicModuleType&amp;amp;amp;securedObjectId=95f17af4-12b4-491f-bfbd-f4cf8c02c0b0&amp;amp;amp;backLabelText=Back to items&amp;amp;amp;title=Permissions&amp;amp;amp;permissionSetName=Configchangetests-ConfigChange&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ismodal=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;destroyOnClose=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ReloadOnShow=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cssclass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sfMaximizedWindow&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ModulePermissionsDialog on permissions&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dialogs&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;viewModes&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;add&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;EnableDragAndDrop=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;EnableInitialExpanding=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Grid&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type:this=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.ContentUI.Views.Backend.Master.Config.GridViewModeElement, Telerik.Sitefinity&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;columns&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;add&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;clientTemplate=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;amp;lt;a sys:href=’javascript:void(0);’ sys:class=&amp;amp;quot;&amp;amp;quot;&amp;amp;gt;&amp;amp;lt;strong&amp;amp;gt;&amp;amp;lt;/strong&amp;amp;gt;&amp;amp;lt;span class=’sfStatusLocation’&amp;amp;gt;&amp;amp;lt;/span&amp;amp;gt;&amp;amp;lt;/a&amp;amp;gt;&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;headerCssClass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sfTitleCol&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;headerText=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Title&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;itemCssClass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sfTitleCol&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;disableSorting=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Title&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type:this=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.ContentUI.Views.Backend.Master.Config.DataColumnElement, Telerik.Sitefinity&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;add&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;headerCssClass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sfMoreActions&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;headerText=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Actions&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;itemCssClass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sfMoreActions&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;disableSorting=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Actions&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type:this=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.ContentUI.Views.Backend.Master.Config.ActionMenuColumnElement, Telerik.Sitefinity&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;mainAction&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commandButtonType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Standard&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isFilter=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wrapperTagKey=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Unknown&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isSeparator=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;menuItems&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;menuItem&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commandName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;delete&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commandButtonType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Standard&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isFilter=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cssClass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sfDeleteItm&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Delete&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wrapperTagKey=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Li&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;widgetType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Backend.Elements.Widgets.CommandWidget&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isSeparator=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Delete&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type:this=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Backend.Elements.Config.CommandWidgetElement, Telerik.Sitefinity&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/menuItems&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/add&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;add&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;clientTemplate=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;amp;lt;span&amp;amp;gt;&amp;amp;lt;/span&amp;amp;gt;&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;resourceClassId=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Labels&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;headerCssClass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sfAuthor&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;headerText=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Author&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;itemCssClass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sfAuthor&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;disableSorting=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Author&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type:this=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.ContentUI.Views.Backend.Master.Config.DataColumnElement, Telerik.Sitefinity&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;add&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;clientTemplate=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;amp;lt;span&amp;amp;gt;&amp;amp;lt;/span&amp;amp;gt;&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;resourceClassId=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ModuleBuilderResources&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;headerCssClass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sfDateAndHour&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;headerText=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;PublicationDate&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;itemCssClass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sfDateAndHour&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;disableSorting=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;PublicationDate&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type:this=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.ContentUI.Views.Backend.Master.Config.DataColumnElement, Telerik.Sitefinity&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/columns&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/add&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/viewModes&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;links&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;add&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;navigateUrl=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;[node:70aef8e7-1bf8-49d0-a7c9-21b90fb9c7a6]/fa2e4a73-929b-4050-a4ac-6030808f41cf&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commandName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;goBackToContentTypes&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;NavigateToContentTypesLink&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/links&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;toolbar&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wrapperTagKey=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Unknown&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;sections&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;section&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;titleWrapperTagKey=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Unknown&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wrapperTagKey=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Unknown&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;visible=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;toolbar&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;items&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;item&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commandName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;create&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commandButtonType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Create&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isFilter=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;permissionSet=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Configchangetests-ConfigChange&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;actionName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Create&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;relatedSecuredObjectTypeName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.DynamicModules.Builder.Model.DynamicModuleType&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;relatedSecuredObjectId=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;95f17af4-12b4-491f-bfbd-f4cf8c02c0b0&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cssClass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sfMainAction&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Create a Config change&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wrapperTagKey=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Unknown&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;widgetType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Backend.Elements.Widgets.CommandWidget&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isSeparator=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;CreateItemWidget&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type:this=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Backend.Elements.Config.CommandWidgetElement, Telerik.Sitefinity&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;item&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commandName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;groupDelete&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commandButtonType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Standard&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isFilter=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;permissionSet=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Configchangetests-ConfigChange&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;actionName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Delete&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;relatedSecuredObjectTypeName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.DynamicModules.Builder.Model.DynamicModuleType&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;relatedSecuredObjectId=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;95f17af4-12b4-491f-bfbd-f4cf8c02c0b0&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Delete&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wrapperTagKey=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Unknown&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;widgetType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Backend.Elements.Widgets.CommandWidget&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isSeparator=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;DeleteItemWidget&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type:this=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Backend.Elements.Config.CommandWidgetElement, Telerik.Sitefinity&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;item&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;More actions&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wrapperTagKey=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Li&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;widgetType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Backend.Elements.Widgets.ActionMenuWidget&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isSeparator=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;MoreActionsItemWidget&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type:this=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Backend.Elements.Config.ActionMenuWidgetElement, Telerik.Sitefinity&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;mainAction&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commandButtonType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Standard&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isFilter=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wrapperTagKey=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Unknown&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isSeparator=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;menuItems&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;item&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commandName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;groupPublish&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commandButtonType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Standard&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isFilter=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cssClass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sfPublishItm&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Publish&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wrapperTagKey=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Unknown&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isSeparator=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;PublishItemWidget&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type:this=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Backend.Elements.Config.CommandWidgetElement, Telerik.Sitefinity&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;item&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commandName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;groupUnpublish&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commandButtonType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Standard&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isFilter=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cssClass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sfUnpublishItm&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Unpublish&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wrapperTagKey=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Unknown&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isSeparator=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UnpublishItemWidget&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type:this=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Backend.Elements.Config.CommandWidgetElement, Telerik.Sitefinity&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/menuItems&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;item&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;persistentTypeToSearch=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.GenericContent.Model.Content&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;mode=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;NotSet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commandName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;search&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commandButtonType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Standard&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isFilter=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Search&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wrapperTagKey=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Unknown&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;widgetType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Backend.Elements.Widgets.SearchWidget&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isSeparator=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SearchItemWidget&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type:this=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Backend.Elements.Config.SearchWidgetElement, Telerik.Sitefinity&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/items&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/sections&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/toolbar&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;sidebar&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Manage Config changes&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wrapperTagKey=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Unknown&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;sections&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;section&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Filter Config change&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;titleWrapperTagKey=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Unknown&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wrapperTagKey=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Unknown&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cssClass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sfFirst sfWidgetsList sfSeparator sfModules&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;visible=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Filter&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;items&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;item&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commandName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;showAllItems&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commandButtonType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SimpleLinkButton&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isFilter=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;buttonCssClass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sfSel&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;All Config changes&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wrapperTagKey=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Unknown&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;widgetType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Backend.Elements.Widgets.CommandWidget&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isSeparator=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;AllItems&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type:this=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Backend.Elements.Config.CommandWidgetElement, Telerik.Sitefinity&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;item&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commandName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;showMyItems&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commandButtonType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SimpleLinkButton&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isFilter=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;My Config change&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wrapperTagKey=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Unknown&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;widgetType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Backend.Elements.Widgets.CommandWidget&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isSeparator=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;MyItems&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type:this=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Backend.Elements.Config.CommandWidgetElement, Telerik.Sitefinity&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/items&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;section&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Settings&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;titleWrapperTagKey=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Unknown&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wrapperTagKey=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Unknown&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cssClass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sfWidgetsList sfSettings&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;resourceClassId=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ModuleBuilderResources&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;visible=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Settings&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;items&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;item&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commandName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;goBackToContentTypes&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commandButtonType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SimpleLinkButton&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isFilter=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Content types&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wrapperTagKey=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Span&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;widgetType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Backend.Elements.Widgets.CommandWidget&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isSeparator=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;NavigateToContentTypes&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type:this=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Backend.Elements.Config.CommandWidgetElement, Telerik.Sitefinity&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;item&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commandName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;permissions&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commandButtonType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SimpleLinkButton&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isFilter=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Permissions&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;resourceclassid=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ModuleBuilderResources&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wrapperTagKey=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Unknown&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;widgetType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Backend.Elements.Widgets.CommandWidget&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isSeparator=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Permissions&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type:this=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Backend.Elements.Config.CommandWidgetElement, Telerik.Sitefinity&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/items&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/sections&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/sidebar&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;contextBar&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wrapperTagKey=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Unknown&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;scripts&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;scriptLocation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Resources.Scripts.jquery.shorten.js, Telerik.Sitefinity.Resources&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;loadMethodName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;OnModuleMasterViewLoaded&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;scriptLocation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.DynamicModules.Web.UI.Backend.Script.MasterGridViewGeneratorExtensions.js, Telerik.Sitefinity&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/scripts&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;commentsSettingsDefinition&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;postRights=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;None&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/view&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;view&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;showTopToolbar=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;webServiceBaseUrl=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;~/Sitefinity/Services/DynamicModules/Data.svc/?itemType=Telerik.Sitefinity.DynamicTypes.Model.Configchangetests.ConfigChange&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;showNavigation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;createBlankItem=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;unlockDetailItemOnExit=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isToRenderTranslationView=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;doNotUseContentItemContext=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;multilingualMode=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Automatic&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;showSections=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;masterPageId=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;00000000-0000-0000-0000-000000000000&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;dataItemId=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;00000000-0000-0000-0000-000000000000&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;enableSocialSharing=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;displayMode=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Write&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;useWorkflow=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Create a Config change&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;viewType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.DynamicModules.Web.UI.Backend.DynamicContentDetailFormView&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;viewName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Config changeBackendInsertView&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type:this=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.ContentUI.Views.Backend.Master.Config.DetailFormViewElement, Telerik.Sitefinity&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;toolbar&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wrapperTagKey=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Unknown&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;sections&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;section&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;titleWrapperTagKey=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Unknown&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wrapperTagKey=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Div&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cssClass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sfWorkflowMenuWrp&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;visible=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;BackendForm&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;items&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;item&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commandName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;save&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commandButtonType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Save&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isFilter=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Create Config change&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wrapperTagKey=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Span&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;widgetType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Backend.Elements.Widgets.CommandWidget&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isSeparator=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SaveChangesWidgetElement&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type:this=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Backend.Elements.Config.CommandWidgetElement, Telerik.Sitefinity&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;item&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commandName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cancel&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commandButtonType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Cancel&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isFilter=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Back to Press Releases&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wrapperTagKey=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Span&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;widgetType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Backend.Elements.Widgets.CommandWidget&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isSeparator=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;CancelWidgetElement&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type:this=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Backend.Elements.Config.CommandWidgetElement, Telerik.Sitefinity&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;item&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commandName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;preview&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commandButtonType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Standard&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isFilter=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Preview&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;resourceclassid=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Labels&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wrapperTagKey=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Span&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;widgetType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Backend.Elements.Widgets.CommandWidget&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isSeparator=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;PreviewWidgetElement&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type:this=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Backend.Elements.Config.CommandWidgetElement, Telerik.Sitefinity&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/items&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/sections&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/toolbar&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;sections&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;sections&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cssClass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sfFirstForm&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wrapperTag=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Div&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isHiddenInTranslationMode=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;MainSection&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;fields&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;field&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rows=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;TitleControl&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;dataFieldName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Title&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;displayMode=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Write&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wrapperTag=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Li&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Title&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fieldType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Fields.TextField&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cssClass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sfFormSeparator&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fieldName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Title&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type:this=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Fields.Config.TextFieldDefinitionElement, Telerik.Sitefinity&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;expandableDefinition&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;expanded=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;validator&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;expectedFormat=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;None&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;maxLength=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;minLength=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;required=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;maxLengthViolationMessage=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;The input is too long&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;messageCssClass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sfError&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;minLengthViolationMessage=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;The input is too short&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;requiredViolationMessage=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;This field is required!&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;validateIfInvisible=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/field&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/fields&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;expandableDefinition&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;expanded=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/sections&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;sections&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cssClass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sfExpandableForm&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;More Options&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wrapperTag=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Div&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isHiddenInTranslationMode=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;MoreOptions&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;fields&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;field&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;regularExpressionFilter=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;[^\p{L}\-\!\$\(\)\=\@\d_\’\.]+|\.+$&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;replaceWith=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;-&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;mirroredControlId=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;TitleControl&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;enableChangeButton=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;toLower=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;trim=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rows=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UrlNameFieldControl&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;dataFieldName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UrlName.PersistedValue&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;displayMode=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Write&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wrapperTag=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Li&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UrlNameTitle&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;example=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UrlNameExample&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fieldType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Fields.MirrorTextField&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;resourceClassId=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ModuleBuilderResources&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cssClass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sfFormSeparator&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fieldName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UrlName&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type:this=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Fields.Config.MirrorTextFieldElement, Telerik.Sitefinity&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;expandableDefinition&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;expanded=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;validator&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;expectedFormat=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;None&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;maxLength=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;-1&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;minLength=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;-1&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;regularExpression=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;^[\p{L}\-\!\$\(\)\=\@\d_\’~\.]*[\p{L}\-\!\$\(\)\=\@\d_\’~]+$&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;required=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;messageCssClass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sfError&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;regularExpressionViolationMessage=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;The URL contains invalid symbols.&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;requiredViolationMessage=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Url name cannot be empty.&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;validateIfInvisible=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/field&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/fields&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;expandableDefinition&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;expanded=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/sections&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;sections&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cssClass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sfItemReadOnlyInfo&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wrapperTag=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Div&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isHiddenInTranslationMode=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SidebarSection&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;fields&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;field&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;displayMode=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Write&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wrapperTag=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Li&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fieldType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Fields.ContentWorkflowStatusInfoField&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fieldName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ItemWorkflowStatusInfoField&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type:this=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Fields.Config.ContentWorkflowStatusInfoFieldElement, Telerik.Sitefinity&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;validator&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;expectedFormat=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;None&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;maxLength=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;-1&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;minLength=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;-1&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;required=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;validateIfInvisible=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;expandableDefinition&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;expanded=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/field&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/fields&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;expandableDefinition&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;expanded=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/sections&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/sections&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;commentsSettingsDefinition&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;postRights=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;None&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/view&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;view&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;showTopToolbar=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;webServiceBaseUrl=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;~/Sitefinity/Services/DynamicModules/Data.svc/?itemType=Telerik.Sitefinity.DynamicTypes.Model.Configchangetests.ConfigChange&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;showNavigation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;createBlankItem=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;unlockDetailItemOnExit=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;doNotUseContentItemContext=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;multilingualMode=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Automatic&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;showSections=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;masterPageId=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;00000000-0000-0000-0000-000000000000&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;dataItemId=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;00000000-0000-0000-0000-000000000000&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;enableSocialSharing=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;displayMode=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Read&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;useWorkflow=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Preview a Config change&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;viewType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.DynamicModules.Web.UI.Backend.DynamicContentDetailFormView&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;viewName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Config changeBackendPreviewView&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type:this=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.ContentUI.Views.Backend.Master.Config.DetailFormViewElement, Telerik.Sitefinity&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;toolbar&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wrapperTagKey=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Unknown&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;sections&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;sections&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cssClass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sfFirstForm&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wrapperTag=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Div&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isHiddenInTranslationMode=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;MainSection&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;fields&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;field&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rows=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;TitleControl&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;dataFieldName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Title&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;displayMode=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Read&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wrapperTag=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Li&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Title&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fieldType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Fields.TextField&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cssClass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sfFormSeparator&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fieldName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Title&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type:this=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Fields.Config.TextFieldDefinitionElement, Telerik.Sitefinity&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;expandableDefinition&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;expanded=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;validator&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;expectedFormat=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;None&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;maxLength=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;minLength=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;required=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;maxLengthViolationMessage=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;The input is too long&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;messageCssClass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sfError&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;minLengthViolationMessage=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;The input is too short&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;requiredViolationMessage=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;This field is required!&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;validateIfInvisible=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/field&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/fields&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;expandableDefinition&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;expanded=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/sections&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;sections&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cssClass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sfExpandableForm&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;More Options&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wrapperTag=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Div&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isHiddenInTranslationMode=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;MoreOptions&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;fields&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;field&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;regularExpressionFilter=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;[^\p{L}\-\!\$\(\)\=\@\d_\’\.]+|\.+$&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;replaceWith=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;-&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;mirroredControlId=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;TitleControl&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;enableChangeButton=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;toLower=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;trim=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rows=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UrlNameFieldControl&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;dataFieldName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UrlName.PersistedValue&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;displayMode=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Read&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wrapperTag=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Li&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UrlNameTitle&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;example=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UrlNameExample&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fieldType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Fields.MirrorTextField&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;resourceClassId=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ModuleBuilderResources&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cssClass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sfFormSeparator&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fieldName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UrlName&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type:this=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Fields.Config.MirrorTextFieldElement, Telerik.Sitefinity&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;expandableDefinition&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;expanded=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;validator&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;expectedFormat=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;None&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;maxLength=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;-1&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;minLength=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;-1&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;regularExpression=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;^[\p{L}\-\!\$\(\)\=\@\d_\’~\.]*[\p{L}\-\!\$\(\)\=\@\d_\’~]+$&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;required=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;messageCssClass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sfError&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;regularExpressionViolationMessage=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;The URL contains invalid symbols.&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;requiredViolationMessage=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Url name cannot be empty.&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;validateIfInvisible=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/field&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/fields&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;expandableDefinition&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;expanded=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/sections&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/sections&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;commentsSettingsDefinition&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;postRights=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;None&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/view&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;view&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;showTopToolbar=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;webServiceBaseUrl=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;~/Sitefinity/Services/DynamicModules/Data.svc/?itemType=Telerik.Sitefinity.DynamicTypes.Model.Configchangetests.ConfigChange&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;showNavigation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;createBlankItem=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;unlockDetailItemOnExit=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isToRenderTranslationView=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;doNotUseContentItemContext=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;multilingualMode=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Automatic&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;showSections=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;masterPageId=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;00000000-0000-0000-0000-000000000000&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;dataItemId=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;00000000-0000-0000-0000-000000000000&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;enableSocialSharing=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;displayMode=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Write&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;useWorkflow=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Edit a Config change&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;viewType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.DynamicModules.Web.UI.Backend.DynamicContentDetailFormView&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;viewName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Config changeBackendEditView&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type:this=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.ContentUI.Views.Backend.Master.Config.DetailFormViewElement, Telerik.Sitefinity&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;toolbar&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wrapperTagKey=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Unknown&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;sections&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;section&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;titleWrapperTagKey=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Unknown&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wrapperTagKey=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Div&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cssClass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sfWorkflowMenuWrp&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;visible=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;BackendForm&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;items&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;item&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commandName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;save&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commandButtonType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Save&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isFilter=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Create Config change&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wrapperTagKey=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Span&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;widgetType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Backend.Elements.Widgets.CommandWidget&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isSeparator=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SaveChangesWidgetElement&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type:this=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Backend.Elements.Config.CommandWidgetElement, Telerik.Sitefinity&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;item&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commandName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cancel&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commandButtonType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Cancel&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isFilter=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Back to Press Releases&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wrapperTagKey=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Span&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;widgetType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Backend.Elements.Widgets.CommandWidget&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isSeparator=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;CancelWidgetElement&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type:this=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Backend.Elements.Config.CommandWidgetElement, Telerik.Sitefinity&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;item&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commandName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;preview&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commandButtonType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Standard&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isFilter=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Preview&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;resourceclassid=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Labels&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wrapperTagKey=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Span&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;widgetType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Backend.Elements.Widgets.CommandWidget&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isSeparator=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;PreviewWidgetElement&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type:this=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Backend.Elements.Config.CommandWidgetElement, Telerik.Sitefinity&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/items&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/sections&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/toolbar&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;sections&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;sections&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cssClass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sfFirstForm&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wrapperTag=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Div&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isHiddenInTranslationMode=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;MainSection&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;fields&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;field&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rows=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;TitleControl&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;dataFieldName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Title&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;displayMode=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Write&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wrapperTag=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Li&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Title&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fieldType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Fields.TextField&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cssClass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sfFormSeparator&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fieldName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Title&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type:this=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Fields.Config.TextFieldDefinitionElement, Telerik.Sitefinity&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;expandableDefinition&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;expanded=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;validator&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;expectedFormat=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;None&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;maxLength=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;minLength=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;required=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;maxLengthViolationMessage=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;The input is too long&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;messageCssClass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sfError&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;minLengthViolationMessage=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;The input is too short&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;requiredViolationMessage=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;This field is required!&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;validateIfInvisible=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/field&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/fields&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;expandableDefinition&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;expanded=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/sections&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;sections&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cssClass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sfExpandableForm&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;More Options&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wrapperTag=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Div&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isHiddenInTranslationMode=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;MoreOptions&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;fields&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;field&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;regularExpressionFilter=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;[^\p{L}\-\!\$\(\)\=\@\d_\’\.]+|\.+$&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;replaceWith=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;-&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;mirroredControlId=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;TitleControl&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;enableChangeButton=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;toLower=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;trim=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rows=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UrlNameFieldControl&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;dataFieldName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UrlName.PersistedValue&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;displayMode=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Write&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wrapperTag=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Li&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UrlNameTitle&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;example=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UrlNameExample&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fieldType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Fields.MirrorTextField&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;resourceClassId=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ModuleBuilderResources&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cssClass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sfFormSeparator&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fieldName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UrlName&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type:this=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Fields.Config.MirrorTextFieldElement, Telerik.Sitefinity&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;expandableDefinition&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;expanded=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;validator&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;expectedFormat=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;None&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;maxLength=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;-1&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;minLength=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;-1&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;regularExpression=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;^[\p{L}\-\!\$\(\)\=\@\d_\’~\.]*[\p{L}\-\!\$\(\)\=\@\d_\’~]+$&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;required=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;messageCssClass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sfError&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;regularExpressionViolationMessage=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;The URL contains invalid symbols.&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;requiredViolationMessage=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Url name cannot be empty.&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;validateIfInvisible=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/field&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/fields&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;expandableDefinition&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;expanded=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/sections&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;sections&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cssClass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sfItemReadOnlyInfo&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wrapperTag=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Div&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isHiddenInTranslationMode=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SidebarSection&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;fields&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;field&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;displayMode=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Write&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wrapperTag=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Li&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fieldType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Fields.ContentWorkflowStatusInfoField&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fieldName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ItemWorkflowStatusInfoField&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type:this=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.Web.UI.Fields.Config.ContentWorkflowStatusInfoFieldElement, Telerik.Sitefinity&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;validator&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;expectedFormat=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;None&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;maxLength=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;-1&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;minLength=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;-1&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;required=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;validateIfInvisible=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;expandableDefinition&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;expanded=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/field&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/fields&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;expandableDefinition&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;expanded=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/sections&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/sections&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;commentsSettingsDefinition&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;postRights=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;None&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/view&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/views&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/contentViewControl&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;securityconfigconfig&quot;&gt;SecurityConfig.config&lt;/h2&gt;
&lt;p&gt;A permission element is added underneath the permissions node. Example:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;permission&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Config changes permissions&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;description=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Represents the most common application security permissions.&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;loginUrl=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;~/Sitefinity/Login&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ajaxLoginUrl=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;~/Sitefinity/Login/Ajax&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Configchangetests-ConfigChange&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;actions&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;add&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;View Config changes&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;description=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Allows or denies viewing Config changes.&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;View&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;View&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;add&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Create Config changes&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;description=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Allows or denies the creation of new Config changes.&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Create&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Create&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;add&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Modify Config changes&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;description=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Allows or denies changes to existing Config changes.&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Modify&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Modify&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;add&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Delete Config changes&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;description=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Allows or denies deleting Config changes.&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Delete&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Delete&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;add&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Change a Config changes permissions&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;description=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Allows or denies changing the permissions of Config changes.&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ChangePermissions&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ChangePermissions&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/actions&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/permission&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;toolboxesconfigconfig&quot;&gt;ToolboxesConfig.config&lt;/h2&gt;
&lt;p&gt;A tool is added in the tools section. Example:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;add&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;enabled=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.DynamicModules.Web.UI.Frontend.DynamicContentView, Telerik.Sitefinity&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Config changes&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cssClass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sfNewsViewIcn&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;moduleName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Config change tests&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;DynamicContentTypeName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.DynamicTypes.Model.Configchangetests.ConfigChange&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;DefaultMasterTemplateKey=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;844f4eff-9a33-4799-84e5-2973d7a3db9b&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;DefaultDetailTemplateKey=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;7fd83546-0785-4050-998f-06428e7c6fa1&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;visibilityMode=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;None&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.DynamicTypes.Model.Configchangetests.ConfigChange&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;workflowconfigconfig&quot;&gt;WorkflowConfig.config&lt;/h2&gt;
&lt;p&gt;A workflow type is added in the workflowTypes section. Example:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;add&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Config change&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;moduleName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Config change tests&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;contentType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.DynamicTypes.Model.Configchangetests.ConfigChange&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;deactivation&quot;&gt;Deactivation&lt;/h2&gt;
&lt;p&gt;No configuration changes are made in the Sitefinity configuration files when you just deactivate a dynamic module with Module Builder.&lt;/p&gt;

&lt;p&gt;Interestingly, when you delete a dynamic module, all of the changes mentioned above are completely reverted EXCEPT the ContentViewConfig.config file. It keeps the config:link element that was added when you added and activated the dynamic module originally. This is curious as it points to a configuration element in DynamicModulesConfig.config that is removed when you delete the dynamic module.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Retrieve Dynamic Module Choice Field Value Options in Sitefinity</title>
   <link href="https://www.benramey.com/2012/10/05/retrieve-dynamic-module-choice-field-value-options-in-sitefinity/"/>
   <updated>2012-10-05T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2012/10/05/retrieve-dynamic-module-choice-field-value-options-in-sitefinity</id>
   <content type="html">&lt;p&gt;I am testing out Sitefinity right now for an upcoming project. So far, I really like everything I see. It’s a great CMS and should fit out needs just perfectly (for pretty cheap too).&lt;/p&gt;

&lt;p&gt;As with all software though, you will inevitably run into things you can’t do so easily (or, at least, as easily as you think you should be able to). I ran into one of those issues yesterday and finally hacked my way to a solution this morning.&lt;/p&gt;

&lt;p&gt;##Problem
My problem was this: how do I retrieve the available options for a Choices field in a dynamic module (built with the Module Builder). Honestly, I’m not sure it really matters. That is, I don’t think Sitefinity validates the value of a Choices field against what is technically a “valid” option. I think I read somewhere that it can store any option. However, I wanted to present a drop-down to users that had values that were essentially controlled by the available choices for this field. Here’s the dialog I’m talking about:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/2012-10-05-retrieve-dynamic-module-choice-field-value-options-in-sitefinity/choices_dialog.png&quot; alt=&quot;Choices field choice options&quot; /&gt;&lt;/p&gt;

&lt;p&gt;##Solution
Finding a way to retrieve this options through the Sitefinity API (which, in all other respects I’ve investigated so far is really good) was impossible. I started decompiling Sitefinity DLLs to see how it was done and still didn’t really get anywhere. All I could see was the choices being picked up from a config file.&lt;/p&gt;

&lt;p&gt;As I read more, I realized this was a bigger clue than I initially thought. The dynamic module information is stored in the App_Data/Sitefinity/Configuration directory in the DynamicModulesConfig.config file. Lo and behold, the options were stored in there–in no less than three places too. Sitefinity has the Config.Get interface for it’s configuration files. However, to get the DynamicModulesConfig.config information, I would have had to call something like Config.Get(). But, the DynamicModulesConfig (in Telerik.Sitefinity.DynamicModules.Configuration) is an internal class. So, I couldn’t do that. I decided upon a “get config file and parse the xml” approach.&lt;/p&gt;

&lt;p&gt;Here is my eventual solution. Unless they change the file location or configuration XML structure, it’s pretty safe, albeit a little hacky. I created a simple DynamicModulesHelper class.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DynamicModuleHelper&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DynamicModulesConfigRelativePath&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;~/App_Data/Sitefinity/Configuration/DynamicModulesConfig.config&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;KeyValuePair&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;[]&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GetChoiceFieldOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;contentType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataFieldName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;XmlNodeList&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;choicesNodes&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GetChoiceNodes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;contentType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataFieldName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;choicesNodes&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;KeyValuePair&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;choices&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;KeyValuePair&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&amp;gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;XmlNode&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;choicesNodes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;ParseChoiceElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;choices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;choices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ParseChoiceElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;KeyValuePair&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;choices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;XmlNode&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Attributes&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Attributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Attributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Attributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;value&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Attributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;value&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;IsNullOrEmpty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;IsNullOrEmpty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;choices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;KeyValuePair&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;XmlNodeList&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GetChoiceNodes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;contentType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataFieldName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dynamicModulesConfigPath&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;MapPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;DynamicModulesConfigRelativePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;XmlDocument&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xml&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ConfigXmlDocument&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xpath&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;/dynamicModulesConfig/contentViewControls&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/contentViewControl[@contentType='{0}’]&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;contentType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;//view[@displayMode=’Read’]&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;//field[@dataFieldName='{0}’]&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataFieldName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;/choicesConfig/element&quot;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dynamicModulesConfigPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;XmlNodeList&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;choicesNodes&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;SelectNodes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;choicesNodes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;To get the Choices field options, you call the GetChoiceFieldOptions method, passing in the dynamic module’s content type string (like this one: “Telerik.Sitefinity.DynamicTypes.Model.TestModule.TestModule”) and the name of the Choices field (like this: “RandomChoices”). So, my particular call for just a goofy test module I created was this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;n&quot;&gt;KeyValuePair&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;choices&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DynamicModuleHelper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetChoiceFieldOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;Telerik.Sitefinity.DynamicTypes.Model.TestModule.TestModule&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;RandomChoices&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</content>
 </entry>
 
 <entry>
   <title>Check for a Publishing SPWeb or SPSite</title>
   <link href="https://www.benramey.com/2012/09/28/check-for-a-publishing-spweb-or-spsite/"/>
   <updated>2012-09-28T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2012/09/28/check-for-a-publishing-spweb-or-spsite</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://www.dhirendrayadav.com/2011/09/checking-if-site-is-publishing-site.html&quot;&gt;Check for a Publishing SPWeb or SPSite&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Endless Authentication Prompts for SharePoint Site Collection</title>
   <link href="https://www.benramey.com/2012/09/27/endless-authentication-prompts-for-sharepoint-site-collection/"/>
   <updated>2012-09-27T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2012/09/27/endless-authentication-prompts-for-sharepoint-site-collection</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://www.benramey.com/2012/09/27/endless-authentication-prompts-for-sharepoint-site-collection/#&quot;&gt;Fix for endless authentication prompts in SharePoint on localhost with host header&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Cannot remove file “master_page_name_here”. Error Code: 158</title>
   <link href="https://www.benramey.com/2012/09/27/cannot-remove-file-error-code-158/"/>
   <updated>2012-09-27T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2012/09/27/cannot-remove-file-error-code-158</id>
   <content type="html">&lt;p&gt;UPDATE (9/19/2013):
  Please see Jeff’s comment below for a better solution to this issue using best-practices for iterating through a SPSite’s AllWebs collection.
  There are multiple places online that provide an answer to the error in the title of this post. The scenario is pretty simple: deleting a master page file previously deployed by a feature in the FeatureDeactivating method of a FeatureReceiver.&lt;/p&gt;

&lt;p&gt;Posts like this one &lt;a href=&quot;http://sharepoint.stackexchange.com/questions/41358/delete-custom-master-page-error-on-feature-deactivation&quot;&gt;http://sharepoint.stackexchange.com/questions/41358/delete-custom-master-page-error-on-feature-deactivation&lt;/a&gt; give the right answer (even if it’s sloppy–you don’t need to loop through EACH SPWeb and try to delete the files) but you can still get the error if you’re not careful (like I wasn’t!).&lt;/p&gt;

&lt;p&gt;Here was my specific case. In my FeatureDeactivating method I was setting all the SPWebs back to the original v4.master like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SPWeb&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;siteColl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AllWebs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MasterUrl&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;masterUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CustomMasterUrl&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;masterUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Notice how I am looping through the SPSite.AllWebs SPWebCollection and updating each SPWeb after I reset the master page URLs. Now, here is what I was doing to try to delete the master page file from the _catalogs/masterpage library:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileUrl&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SPUrlUtility&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;CombineUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;siteColl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ServerRelativeUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FullRelativeUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;SPFile&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spFile&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;siteColl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RootWeb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fileUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;spFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Delete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;spFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;When I would get to the spFile.Delete() line, it would catch the exception whose error message is the title of this post. But why?? The master page wasn’t being referenced anywhere anymore! As I would discover, the problem is on this line:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;n&quot;&gt;SPFile&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spFile&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;siteColl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RootWeb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fileUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Do you see it? I didn’t at first either. The RootWeb SPWeb reference isn’t pointing to the same object that the same SPWeb in the SPSite.AllWebs collection is pointing to. So, technically, the RootWeb object still thinks its master page URLs are pointing to my custom master that I’m trying to delete because it hasn’t had Update() called on it.&lt;/p&gt;

&lt;p&gt;To fix it, I had to get my SPFile from one of the SPWebs in SPSite.AllWebs, like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;n&quot;&gt;SPFile&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spFile&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;siteColl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AllWebs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;First&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fileUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;That enables me to delete the file with no errors.&lt;/p&gt;

&lt;h2 id=&quot;jeffs-comment&quot;&gt;Jeff’s comment&lt;/h2&gt;
&lt;p&gt;Hi Ben,
Great post but I did run into the same issue you were experiencing today. You can fix this issue also by using recommended best practice (&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/aa973248(v=office.12).aspx&quot;&gt;http://msdn.microsoft.com/en-us/library/aa973248(v=office.12).aspx&lt;/a&gt;) –&lt;/p&gt;

&lt;p&gt;Good Coding Practice #2&lt;/p&gt;

&lt;p&gt;When iterating through SPWebs dispose of items with the using statement. This will cleanup any issues left in memory&lt;/p&gt;

&lt;p&gt;So it might look like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SPSite&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;siteColl&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;properties&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Feature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Parent&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SPSite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SPWeb&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;siteColl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AllWebs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MasterUrl&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;masterUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CustomMasterUrl&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;masterUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</content>
 </entry>
 
 <entry>
   <title>SharePoint Page Layout Error: Only Content controls are allowed directly in a content page that contains Content controls</title>
   <link href="https://www.benramey.com/2012/09/26/sharepoint-page-layout-error-only-content-controls-are-allowed-directly-in-a-content-page-that-contains-content-controls/"/>
   <updated>2012-09-26T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2012/09/26/sharepoint-page-layout-error-only-content-controls-are-allowed-directly-in-a-content-page-that-contains-content-controls</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://www.benramey.com/2012/09/26/sharepoint-page-layout-error-only-content-controls-are-allowed-directly-in-a-content-page-that-contains-content-controls/#&quot;&gt;SharePoint Page Layout Error: Only Content controls are allowed directly in a content page that contains Content controls&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Deploying SharePoint 2010 Page Layouts with Visual Studio 2010</title>
   <link href="https://www.benramey.com/2012/09/26/deploying-sharepoint-2010-page-layouts-with-visual-studio-2010/"/>
   <updated>2012-09-26T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2012/09/26/deploying-sharepoint-2010-page-layouts-with-visual-studio-2010</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://www.benramey.com/2012/09/26/deploying-sharepoint-2010-page-layouts-with-visual-studio-2010/#&quot;&gt;Deploying SharePoint 2010 Page Layouts with Visual Studio 2010&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>'Specified method is not supported' error when deleting SharePoint site</title>
   <link href="https://www.benramey.com/2012/09/25/specified-method-is-not-supported-error-when-deleting-sharepoint-site/"/>
   <updated>2012-09-25T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2012/09/25/specified-method-is-not-supported-error-when-deleting-sharepoint-site</id>
   <content type="html">&lt;p&gt;I was getting a “Specified method is not supported” error when I tried to delete some test sites in SharePoint 2010 today. I found a great link that gave several solutions to deletion errors. Issue #1 under this link is what I needed:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.benramey.com/2012/09/25/specified-method-is-not-supported-error-when-deleting-sharepoint-site/#&quot;&gt;SharePoint 2010: Unable to delete site/web after SP1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Even though I got an error executing the Upgrade-SPContentDatabase PowerShell command, it still fixed the problem with deleting the sites.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Rendering must have placeholder chrome as its parent. Got ‘rendering’ instead</title>
   <link href="https://www.benramey.com/2012/08/09/rendering-must-have-placeholder-chrome-as-its-parent-got-rendering-instead/"/>
   <updated>2012-08-09T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2012/08/09/rendering-must-have-placeholder-chrome-as-its-parent-got-rendering-instead</id>
   <content type="html">&lt;p&gt;##Problem
I got the error message (in my Firebug console) in the Sitecore Page Editor on a page where I had a nested sublayout.  I had a basic two-column layout for the main sublayout of the page.  Then, in the right column, I had another sublayout that further divided up the right column as I needed.  Here is what the nested sublayout looked like:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;sc:Placeholder&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;runat=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;server&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Key=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;blogRightColumnTop&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sidebar-blog&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;sc:Placeholder&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;runat=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;server&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Key=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;blogRightColumnBottomLeft&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sidebar-ads&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;sc:Placeholder&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;runat=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;server&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Key=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;blogRightColumnBottomRight&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This was a Javascript error that was preventing the Page Editor from fully loading the editor buttons for the edit frames I had on the page.&lt;/p&gt;

&lt;p&gt;##Solution
The error message (surprise, surprise) was a little mystifying, but it gave me enough of a clue to think that there was some type of nesting issue.  I noticed that I had a sc:Placeholder element at the top of my nested sub-layout with nothing wrapping it.  Perhaps this was the issue?  I tried this edit to my nested sub-layout:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;sc:Placeholder&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;runat=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;server&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Key=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;blogRightColumnTop&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sidebar-blog&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;sc:Placeholder&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;runat=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;server&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Key=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;blogRightColumnBottomLeft&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sidebar-ads&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;sc:Placeholder&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;runat=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;server&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Key=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;blogRightColumnBottomRight&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Notice the single, wrapping div. This worked! So, I’m not sure why, but apparently it solves this nesting problem. Perhaps Sitecore just does not expect a sc:Placeholder to be directly inside of another sc:Placeholder and so wrapping it solves that direct nesting issue.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Group List Into Sub-lists by Index</title>
   <link href="https://www.benramey.com/2012/07/27/group-list-into-sub-lists-by-index/"/>
   <updated>2012-07-27T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2012/07/27/group-list-into-sub-lists-by-index</id>
   <content type="html">&lt;p&gt;##Problem
Everyone once-in-a-while I need to take a flat list (or array, or whatever) of items and divide it up into chunks.  It doesn’t have to be in any real order, necessarily, it just has to be in groups of two, three or four or however many items.  Most recently, I needed this to divide up a list of blog items into chunks of four to display in sets of “pages” that a user would page through with Javascript.&lt;/p&gt;

&lt;p&gt;##Solution
I found a great, compact solution on Stack Overflow here: &lt;a href=&quot;http://stackoverflow.com/questions/419019/split-list-into-sublists-with-linq&quot;&gt;http://stackoverflow.com/questions/419019/split-list-into-sublists-with-linq&lt;/a&gt;.  Take a look at answer number one and make sure to pay attention to the warnings others gave about performance for large sets of items.  I’m working on a small set, so it’s not too important in my case.&lt;/p&gt;

&lt;p&gt;Here’s the code I used to set a Repeater DataSource:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;n&quot;&gt;PodsRepeater&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataSource&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Items&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Index&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GroupBy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Index&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</content>
 </entry>
 
 <entry>
   <title>Nested User Controls Not Rendering</title>
   <link href="https://www.benramey.com/2012/07/25/nested-user-controls-not-rendering/"/>
   <updated>2012-07-25T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2012/07/25/nested-user-controls-not-rendering</id>
   <content type="html">&lt;p&gt;##Problem
I got caught today in a stupid problem.  But, it wasn’t obvious (at least to me) at first what was causing it.  I was doing something simple: nesting one UserControl inside of another.  But, the nested UserControl wasn’t showing up.  I couldn’t, for the life of me, figure out what I had done wrong.  If I didn’t nest the control, it worked fine.&lt;/p&gt;

&lt;p&gt;##Solution
The solution was just correctly a stupid oversight on my part.  I use ReSharper, so what I would do is just type the control prefix, colon then the name of the control and ReSharper would give me the suggestion to add the right Register tag.  Well, ReSharper looks at it like a WebControl, not a UserControl.  So, the Register tag is adds looks like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;%&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;@&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Register&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TagPrefix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ogden&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Namespace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Ogden.Web.controls&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Assembly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Ogden.Web&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It should look like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;%&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;@&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Register&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TagPrefix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ogden&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TagName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;BlogComments&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;BlogComments.ascx&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;So, if you’re dumb like me, make sure you have the right Register tag if you’re nesting a UserControl (or using a UserControl anywhere really).&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Grace &amp; Me</title>
   <link href="https://www.benramey.com/2012/07/19/grace-and-me/"/>
   <updated>2012-07-19T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2012/07/19/grace-and-me</id>
   <content type="html">&lt;p&gt;Our story really begins somewhere around the beginning of 2007.  That’s when Grace’s brother Nathan came down to Kansas City for a couple of Bible conferences that I (Ben) also happened to go to.  I barely remember meeting Nate, but he must have made an impression because we started to become good friends soon afterward.  On a whim one time as Nate and I were chatting on Facebook, he invited me up to a regular men’s Bible study in Colfax, WI led by Warren Henderson.  That’s eight hours away from Kansas City and so Nate never thought I’d actually say yes.  But, what Nate did not know was this was a tremendous answer to prayer for me.  I’d been praying that the Lord would bring some good, solid young men who were my age into my life.  This seemed like the perfect place to see that prayer answered.  Little did I know that it would some day lead to me marrying Nate’s sister!&lt;/p&gt;

&lt;p&gt;Grace and I don’t really know for sure when we first met.  We have our first, real evidence of being in the same place at the same time at the 2008 Vessels of Honor conference in Parkville, MO.  But, it was probably a little before that, on a Sunday morning in Chippewa Falls, WI after one of those men’s Bible studies at the River Valley Christian Fellowship where Nathan, Grace and their family went to church.&lt;/p&gt;

&lt;p&gt;It’s pretty safe to say that neither Grace nor I really took too much notice of each other back then!  I was just some friend of Nathan’s, driving up ridiculous distances for a one-day Bible study, and she was just Nathan’s younger sister.&lt;/p&gt;

&lt;p&gt;As time went on, Nathan got me involved in Story Book Lodge Bible Camp in Gilbert, MN.  That’s even further north–almost as far north as you can get in Minnesota.  Counseling at camp in the summer and attending Winter Retreat up at camp became a yearly event.  Grace and I slowly got to know each other better as we attended the same camps and conferences over the next four years.&lt;/p&gt;

&lt;p&gt;Still, while we gradually became friends, as late as June of 2011 we would never have thought anything beyond friendship was in our future.&lt;/p&gt;

&lt;p&gt;As the summer of 2011 rolled along, Grace and I were both having some gracious and immensely valuable lessons from the Lord sink into our minds and hearts.  Through completely separate, but similar situations we were both learning what trusting in the true goodness of our Lord meant.  It was clear to both of us that we sure wanted to get married.  But, who would it be to?  When would it be?  Would it ever happen?  We had to trust the Lord that if He is good (and He is), then being single our whole lives would be the very best life we could imagine.  If, on the other hand, being married some day was what the Lord had in store for us, the timing He had planned would be the only right timing there was.&lt;/p&gt;

&lt;p&gt;Then one day in the middle of that summer, Grace came to my mind.  At the same time, I was nowhere near Grace’s mind!  I was planning on counseling at Story Book Lodge’s 2nd Teen camp week and hoping Grace would be there.  I was hoping I could just get to know her better.  I prayed a lot about it.  I asked the Lord that He would make things clear if I should take the next step after this week at camp.  Amazingly, others were secretly praying at this same time specifically for me and Grace too–I just didn’t know about it!&lt;/p&gt;

&lt;p&gt;Meanwhile, Grace wasn’t even sure if she would make it to camp that year.  It wasn’t clear if she could get off of work in time.  But, at the last minute, she found out it was going to work and she was able to counsel that same week.&lt;/p&gt;

&lt;p&gt;I spent the week concentrating on the spiritual needs of my campers, but also taking what opportunities presented themselves (or that I could generate!) to be around Grace and talk with her.  She, by her own admission, was completely oblivious to this while I was taking each smile or glance as a sure sign that she felt the same way about me that I was beginning to feel about her.&lt;/p&gt;

&lt;p&gt;The week was full of great happenings: exciting conversations with Grace, forceful proddings from her brother-in-law Cory, knowing looks from her sister Beth and finally suspicion on Grace’s part too.  Then, the week came to a close.  Camp is often a perception altering vortex of emotion.  So, I wanted to be sure what I was thinking and feeling wasn’t a product of the strange air at Story Book (they don’t call it that for nothing, you know).&lt;/p&gt;

&lt;p&gt;So, I waited a week after camp to just think and pray.  Meanwhile, Grace was wondering if her own suspicions were part of the Story Book vortex.  She was praying for clear thinking about it too.&lt;/p&gt;

&lt;p&gt;The following Sunday though, I got up the courage to call her Dad and ask his permission to start pursuing Grace.  I was nervous, but he gladly said yes and I called Grace a few minutes later.  Thankfully, she said yes too!&lt;/p&gt;

&lt;p&gt;What followed were some of the happiest months of our lives so far.  We traveled to Eau Claire or Kansas City as much as we could, trying to spend as much time together as possible.  It seemed like things just went from good to better.  We agreed on just about everything we could think to talk about and slowly but surely we fell rather deeply in love with each other.&lt;/p&gt;

&lt;p&gt;As February of 2012 rolled around, I knew I wanted to marry this girl.  I bought a ring and made my plan to visit the Hanson’s over a week from the 17th to the 26th while the newly engaged David and Rachel (now) Hanson were visiting from California.  A fishing trip was planned for that first Saturday which in Wisconsin means you’re getting up at 4am.  But, I couldn’t wait any longer.  I asked Joel (Grace’s Dad) if I could talk to him that morning before we left for fishing and he seemed to know what might be coming.  So, we both got up around 3:30 and I asked him if I could marry his daughter.  Yes, was the answer!  Now I had a little more planning to do.&lt;/p&gt;

&lt;p&gt;I found a fire tower not too far away where Grace and I could climb up and watch the sunrise together.  I imagined a beautiful morning, no clouds and a little nice, wooden room on top of the fire tower where I could propose and we could eat a little breakfast together.  What happened was slightly less perfect than I had hoped!  It was a freezing cold morning with a frigid wind whipping through the broken windows of the years-unused fire tower.  We even had a tired onlooker–a racoon making it’s bed in the ceiling!  But, the morning really was crystal clear and the sunrise was beautiful.  We read some Psalms together and I told Grace for the first time that I loved her.  I asked her to marry me and she quietly said yes.&lt;/p&gt;

&lt;p&gt;And so, the wedding planning began and here we now are, less than two months from the day!  What we thought were wonderful days while we were dating paled in comparison to the joy of being engaged, looking forward every moment to the day of our wedding and beyond, all the while getting to know each other in a deeper and closer way.&lt;/p&gt;

&lt;p&gt;Grace and I are so thankful for the goodness of the Lord.  That very goodness that He so graciously and patiently taught both of us has now been poured out to us in ways we hardly know how to express.  He has given us salvation through His Son, Jesus Christ.  He has given us wonderful, strong families who love us and care for us.  He has given us so many good, encouraging friendships.  He has given us to each other.  What a wonderful God we serve!&lt;/p&gt;

&lt;p&gt;Grace and I can think of no better way to return our thanks to the Lord than to serve Him with whole hearts for the rest of our lives.  Whatever the Lord has for us, may His glory be shown and His honor upheld through our lives together!  That is our desire for our marriage.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Limit Selected Items on Sitecore Multilist Field</title>
   <link href="https://www.benramey.com/2012/06/12/limit-selected-items-on-sitecore-multilist-field/"/>
   <updated>2012-06-12T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2012/06/12/limit-selected-items-on-sitecore-multilist-field</id>
   <content type="html">&lt;p&gt;##Problem
You want to limit the number of items a user can choose for a multilist field in a data template in sitecore.&lt;/p&gt;

&lt;p&gt;##Solution
The solution is easy enough.  Just add some validation to the field that will “count” the number of GUIDs in the raw value of the MultiList field.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Open up the template in the tree navigation and click on the MultiList field you want to limit
&lt;img src=&quot;/public/images/2012-06-12-limit-selected-items-on-sitecore-multilist-field/sitecore_template_property_nav.png&quot; alt=&quot;sitecore_template_property_nav&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Scroll down to the Validation field and enter this: ^({[^}]+}|?){0,5}$.  This regular expression simply makes sure you have between 0 and 5 GUIDs in the value of the MultiList, effectively limiting the number of items you select in the list.  The {0,5} is the range.  So, change the 0 to limit the lower bound and change the 5 to limit the upper bound.
&lt;img src=&quot;/public/images/2012-06-12-limit-selected-items-on-sitecore-multilist-field/sitecore_template_validation_field.png&quot; alt=&quot;sitecore_template_validation_field&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Enter an appropriate message that explains why the validation failed in the ValidationText field.
&lt;img src=&quot;/public/images/2012-06-12-limit-selected-items-on-sitecore-multilist-field/sitecore_template_validationtext_field.png&quot; alt=&quot;sitecore_template_validationtext_field&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</content>
 </entry>
 
 <entry>
   <title>Replacing newline characters in VB.NET strings</title>
   <link href="https://www.benramey.com/2012/06/12/replacing-newline-characters-in-vb-net-strings/"/>
   <updated>2012-06-12T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2012/06/12/replacing-newline-characters-in-vb-net-strings</id>
   <content type="html">&lt;p&gt;I’m not very familiar (which I am actually very happy for!) with VB.NET and so I had a hard time figuring out how to trim newline characters from a string in a Reporting Services report I was working on.&lt;/p&gt;

&lt;p&gt;Turns out none of the “regular” methods really work.  The Trim function only removes spaces and anything like Replace(“string”, “\n”, “”) didn’t work.&lt;/p&gt;

&lt;p&gt;You have to use the Chr(13) or Chr(10) functions to actually get the character values for the newline characters.  So, my solution looked like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;nf&quot;&gt;Replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stringVariable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Chr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;“”&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Chr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;“”&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Thanks to this forum post for providing the clues:
&lt;a href=&quot;http://www.daniweb.com/forums/thread54797.html&quot;&gt;http://www.daniweb.com/forums/thread54797.html&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Change the color of an icon with Gimp</title>
   <link href="https://www.benramey.com/2012/03/15/change-the-color-of-an-icon-with-gimp/"/>
   <updated>2012-03-15T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2012/03/15/change-the-color-of-an-icon-with-gimp</id>
   <content type="html">&lt;p&gt;Fairly often, I run across the perfect icon that I need for a website, but it’s just the wrong color.  I want to keep the nice blending to the background of the icon around the edges, the shape and everything that makes the icon look spiffy.  I just want the main color to be something else.&lt;/p&gt;

&lt;p&gt;It took me a long time to figure out a good method (I’m no graphic designer!), but I eventually came a cross a really easy method that works well using trusty Gimp.  I’ll walk you through it.&lt;/p&gt;

&lt;h2 id=&quot;1-find-an-icon&quot;&gt;1. Find an Icon&lt;/h2&gt;

&lt;p&gt;The first step, of course, is to find an icon.  There are billions of free ones out there on the web.  This is mine.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/2012-03-15-change-the-color-of-an-icon-with-gimp/icon-phone-blue.png&quot; alt=&quot;Blue phone icon&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I love it.  It’s just what I need–but what a terrible color!  I need something else.  It’s a PNG and when I open it in Gimp, here’s what it looks like.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/2012-03-15-change-the-color-of-an-icon-with-gimp/original_in_gimp-300x236.png&quot; alt=&quot;Original in Gimp&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can see the edges have been blended into a white background which would work great if I only ever put it on a white background.  Well, I just might be doing that, but I’m too much of a perfectionist to use it like that.  So, let’s get to work.&lt;/p&gt;

&lt;h2 id=&quot;2-create-a-color-layer&quot;&gt;2. Create a color layer&lt;/h2&gt;

&lt;p&gt;Add a new layer to the image by selecting Layer &amp;gt; New Layer.  Call it “color”.  Make sure it’s on top of the “Background” layer.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/2012-03-15-change-the-color-of-an-icon-with-gimp/color_layer-149x300.png&quot; alt=&quot;Adding a color layer&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Fill this new layer with the color you want to change the icon to.  I’m using this lovely puke color (not my choice!): #afbd0a.&lt;/p&gt;

&lt;p&gt;Now, hide this new layer so we can work on the “Background” layer by clicking on the eye button just to the left of the layer thumbnail.&lt;/p&gt;

&lt;h2 id=&quot;3-manipulate-the-icon-colors&quot;&gt;3. Manipulate the icon colors&lt;/h2&gt;

&lt;p&gt;Select the “Background” layer.  Desaturate the image by selecting Colors &amp;gt; Desaturate.  I choose “Lightness” from the dialog box that pops up.&lt;/p&gt;

&lt;p&gt;Now, invert the image by selecting  Colors &amp;gt; Invert.  Next, create another layer called “mask” and fill it with black.  Move this layer below the “Background” layer.  Your layers should look like the image below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/2012-03-15-change-the-color-of-an-icon-with-gimp/mask_layer-209x300.png&quot; alt=&quot;Creating the mask layer&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Right-click on the “Background” layer and select “Merge down”.  Now you should have something similar to the image below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/2012-03-15-change-the-color-of-an-icon-with-gimp/after_merge_down-300x156.png&quot; alt=&quot;After merging down&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;4-adjust-the-curves&quot;&gt;4. Adjust the curves&lt;/h2&gt;

&lt;p&gt;Now, with the “mask” layer selected, select Colors &amp;gt; Curves.  In the dialog, drag the very middle of the line straight up to the top-center of the graph.  Gimp should look like the screenshot below.  Click “OK”.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/2012-03-15-change-the-color-of-an-icon-with-gimp/curves-300x189.png&quot; alt=&quot;Adjusting the curves&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;5-create-a-layer-mask-on-the-color-layer&quot;&gt;5. Create a layer mask on the “color” layer&lt;/h2&gt;

&lt;p&gt;Now, with the “mask” layer selected, copy the entire layer by selecting Select &amp;gt; All.  Then select Edit &amp;gt; Copy.&lt;/p&gt;

&lt;p&gt;Next, right-click on the “color” layer and select “Add layer mask”.  Choose “Black (full transparency)” and make sure “Invert mask” is checked.&lt;/p&gt;

&lt;p&gt;Paste what you’ve copied to the layer mask by selecting Edit &amp;gt; Paste.  You’ll notice a new layer called “Floating selection (Pasted layer)”.  Right-click on this new layer and select “Anchor layer”. The pasted layer will now be merged with your anchor layer.&lt;/p&gt;

&lt;h2 id=&quot;6-youre-done&quot;&gt;6. You’re done!&lt;/h2&gt;

&lt;p&gt;Now hide your “mask” layer and show your “color” layer.  Perfect!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/2012-03-15-change-the-color-of-an-icon-with-gimp/done-300x163.png&quot; alt=&quot;Completed image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You now have a new icon with a completely different color, but with the nice blending at the edges and perfect shape of the original icon.  Don’t believe me?  Well, test it!  Select your “mask” layer and delete everything on it.  Fill it with any background color you want and see how it looks.  Make sure to show your “mask” layer again by click on the eye button.&lt;/p&gt;

&lt;p&gt;Hope this was helpful!  You can apply your layer mask on the “color” layer if you want.  But, I like to keep it as it is and save the file as an xcf for later use.  This way, if you ever need the icon in another color, all you have to do is change the fill color of the “color” layer and you’re done.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Easy Way to Make Huge Maps with Google Maps</title>
   <link href="https://www.benramey.com/2012/03/07/easy-way-to-make-huge-maps-with-google-maps/"/>
   <updated>2012-03-07T00:00:00-06:00</updated>
   <id>https://www.benramey.com/2012/03/07/easy-way-to-make-huge-maps-with-google-maps</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://www.metacafe.com/watch/1073912/google_maps_hack_how_to_save_large_maps/&quot;&gt;Easy way to make huge maps with Google Maps&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Grouping into Rows with XSLT</title>
   <link href="https://www.benramey.com/2012/03/05/grouping-into-rows-with-xslt/"/>
   <updated>2012-03-05T00:00:00-06:00</updated>
   <id>https://www.benramey.com/2012/03/05/grouping-into-rows-with-xslt</id>
   <content type="html">&lt;p&gt;Let’s say you have a simple XML document that looks something like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;root&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;Pod&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/Pod&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;Pod&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;2&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/Pod&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;Pod&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;3&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/Pod&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;Pod&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;4&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/Pod&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/root&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The content or meaning of the pods is irrelevant. The idea is that you have a “list” of elements (pods in this case) in your XML. How, then, do you use XSLT to group these pods into rows of two, three or whatever number of pods across? Something like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;row&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;pod&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; pod 1 &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;pod&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; pod 2 &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;pod&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; pod 3 &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;row&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;pod&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; pod 4 &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This example would required three pods per row. The example XSLT below will work for any number of pods per row with a simple edit (explained below).&lt;/p&gt;

&lt;p&gt;My first thought was from a very normal programmer’s perspective. I’d use some kind of looping (with xsl:for-each) and just start a new row for each x number of pods. So, I did it that way and it worked. It was pretty ugly XSLT, but I didn’t really think there was a better way to do it. But then a colleague looked over my shoulder and chuckled. “I did it that way at first too”, he said, “but that’s not the XSLT way to do it.” He gave me a little bit of a clue of how it really should be done then he left, leaving me determined to find the “XSLT way” of doing it!&lt;/p&gt;

&lt;p&gt;Turns out, it really isn’t difficult. You just have to think a little differently and start using xsl:template, xsl:call-template and xsl:apply-templates effectively along with their select and match attributes. So, take a look at this XSLT file:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:stylesheet&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;version=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1.0&quot;&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;xmlns:xsl=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/1999/XSL/Transform&quot;&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;xmlns:msxsl=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;urn:schemas-microsoft-com:xslt&quot;&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;exclude-result-prefixes=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;msxsl&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:output&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;method=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;html&quot;&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;version=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1.0&quot;&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;omit-xml-declaration=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;yes&quot;&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;indent=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;yes&quot;&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;encoding=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;utf-8&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

	&lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:template&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;match=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/root&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:apply-templates&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;select=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Pod[position() mod 3 = 1]&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/xsl:template&amp;gt;&lt;/span&gt;

	&lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:template&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;PodRow&quot;&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;match=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Pod[position() mod 3 = 1]&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;row&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:choose&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:call-template&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;PodWrapper&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:apply-templates&lt;/span&gt;
					&lt;span class=&quot;na&quot;&gt;select=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;following-sibling::Pod[position() &amp;amp;lt; 3]&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;/xsl:choose&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/xsl:template&amp;gt;&lt;/span&gt;

	&lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:template&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;PodWrapper&quot;&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;match=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Pod[position() mod 3 &amp;amp;gt; 1]&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;pod&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:call-template&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;PodContent&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/xsl:template&amp;gt;&lt;/span&gt;

	&lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:template&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;PodContent&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;cp&quot;&gt;&amp;lt;!– whatever content your &quot;pods&quot; contain can be marked up here –&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/xsl:template&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/xsl:stylesheet&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Here’s what’s going on: first, we call xsl:apply-templates on the first and then every third Pod using “Pod[position() mod 3 = 1]”. This will select the Pod at the start of every row: Pods 1 and 4. Notice that XSLT indexing starts at 1 and NOT 0. The PodRow template will match these selected Pods.&lt;/p&gt;

&lt;p&gt;Inside the PodRow template we have the HTML for the row. Inside the row HTML, we explicitly call the PodWrapper template for the current Pod. We then call xsl:apply-templates on the following siblings of the current Pod, but only on the next two of them. This grabs the remaining Pods in the row. This xsl:apply-templates select will match the PodWrapper template which creates the HTML for a single Pod.&lt;/p&gt;

&lt;p&gt;Easy as pie! To change the number of pods in a row, update all of the “position() mod 3″s by replacing 3 with however many pods you want in a row. Then also make sure to update the xsl:apply-templates select attribute inside PodRow to be “position() &amp;lt; n-1″ where n is the number of Pods in a row.&lt;/p&gt;

&lt;p&gt;##Identifying the last cell of every row
I needed another feature from my XSLT though. I needed every last pod in each row to have a special CSS class. This meant determining which pod was the last one in each row whether the row was full or not. This made the XSLT significantly more complicated, but not overwhelmingly so.&lt;/p&gt;

&lt;p&gt;I needed my HTML to look like this (notice the additional “last” class):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;row&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;pod&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; pod 1 &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;pod&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; pod 2 &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;pod last&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; pod 3 &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;row&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;pod last&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; pod 4 &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;So, this is what I had to do:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:stylesheet&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;version=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1.0&quot;&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;xmlns:xsl=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/1999/XSL/Transform&quot;&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;xmlns:msxsl=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;urn:schemas-microsoft-com:xslt&quot;&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;exclude-result-prefixes=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;msxsl&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:output&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;method=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;html&quot;&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;version=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1.0&quot;&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;omit-xml-declaration=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;yes&quot;&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;indent=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;yes&quot;&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;encoding=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;utf-8&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

	&lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:template&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;match=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/root&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:apply-templates&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;select=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Pod[position() mod 3 = 1]&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/xsl:template&amp;gt;&lt;/span&gt;

	&lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:template&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;PodRow&quot;&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;match=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Pod[position() mod 3 = 1]&quot;&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;priority=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;2&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;row&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:choose&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:when&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;test=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;count(following-sibling::Pod) = 0&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:call-template&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;PodWrapperLast&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;/xsl:when&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:otherwise&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:call-template&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;PodWrapper&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:apply-templates&lt;/span&gt;
						&lt;span class=&quot;na&quot;&gt;select=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;following-sibling::Pod[position() &amp;amp;lt; 3]&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;/xsl:otherwise&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;/xsl:choose&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/xsl:template&amp;gt;&lt;/span&gt;

	&lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:template&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;PodWrapper&quot;&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;match=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Pod[position() mod 3 &amp;amp;gt; 1]&quot;&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;priority=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;pod&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:call-template&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;PodContent&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/xsl:template&amp;gt;&lt;/span&gt;

	&lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:template&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;PodWrapperLast&quot;&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;priority=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;match=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Pod[position() mod 3 = 0 or position() = last()]&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;pod last&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:call-template&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;PodContent&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/xsl:template&amp;gt;&lt;/span&gt;

	&lt;span class=&quot;nt&quot;&gt;&amp;lt;xsl:template&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;PodContent&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;cp&quot;&gt;&amp;lt;!– whatever content your &quot;pods&quot; contain can be marked up here –&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/xsl:template&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/xsl:stylesheet&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This version of the XSLT functions exactly the same as the previous one. The only additions are for identifying the last pod in each row for all cases. So, here is what has changed.&lt;/p&gt;

&lt;p&gt;The xsl:apply-templates call inside of PodRow now matches one of two templates: PodWrapper or PodWrapperLast. You guessed it, PodWrapperLast just has an extra “last” class on the Pod div and a fancy match attribute. “Pod[position() mod 3 = 0 or position() = last()]” will match Pod numbers 3, 6, etc (in other words, the last Pod of every row) or the last Pod in the XML (no matter what number it is).&lt;/p&gt;

&lt;p&gt;Notice the new xsl:choose inside of our PodRow template. This handles the case where the last Pod in the XML is also the first Pod in a row.&lt;/p&gt;

&lt;p&gt;Notice also the “priority” attributes on the templates now. This prevents the PodWrapperLast template from matching the first Pod in a row if that first Pod is also the last Pod in the XML.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Ektron License Key Update</title>
   <link href="https://www.benramey.com/2012/02/27/ektron-license-key-update/"/>
   <updated>2012-02-27T00:00:00-06:00</updated>
   <id>https://www.benramey.com/2012/02/27/ektron-license-key-update</id>
   <content type="html">&lt;p&gt;##Problem
We use a temporary license key with our Ektron development website here at work. Because it’s temporary, we have to update it every-so-often. That happened today.&lt;/p&gt;

&lt;p&gt;I got the new key and copy-pasted it into the right License Key field under Configuration / Settings. I clicked on “Save” and thought I was done. When I tried to log back in with my regular account (the way you are notified of the license expiration is a license violation error when you try log in) and it still gave me the license violation error. So, I logged back in with the built-in account (which lets you log in with limited features so that you can update the license key) and found out that I had copy-pasted the license key wrong. It was missing part of the domain name.&lt;/p&gt;

&lt;p&gt;Naturally, I tried simply updating the license key domain name, but Ektron threw a Javascript error which prevented me from saving the page saying that I had updated the license key in a way that would make it invalid. What?! I tried re-pasting the key in, thinking I had it wrong still. I didn’t work.&lt;/p&gt;

&lt;p&gt;##Solution
Turns out this has to be an Ektron bug. I ended up trying something random: I changed the last number of the license key to something arbitrary (along with making my domain name change) and it updated fine. Strange, I know…but this IS Ektron.&lt;/p&gt;

&lt;p&gt;Of course, that is an invalid key, so once the page saved, I changed that last digit back to the original digit from the valid license key and it let me save it and I could log in again.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Install SharePoint on Windows 7</title>
   <link href="https://www.benramey.com/2012/02/03/install-sharepoint-on-windows-7/"/>
   <updated>2012-02-03T00:00:00-06:00</updated>
   <id>https://www.benramey.com/2012/02/03/install-sharepoint-on-windows-7</id>
   <content type="html">&lt;p&gt;If you try to do a SharePoint 2010 installation on your client machine (that is, not a Windows Server OS) then you’ll get an error explaining that SharePoint 2010 can’t be installed on your operating system.&lt;/p&gt;

&lt;p&gt;Never fear, CodeProject is here. Check out this helpful post to get it installed (it couldn’t be easier):&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.codeproject.com/Articles/44210/Installing-SharePoint-Server-2010-on-Windows-7-x64&quot;&gt;CodeProject article&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Even though the post is from 2009, it still works great.&lt;/p&gt;

&lt;p&gt;For more detailed steps (including the ones outlined in the link above) following these instructions:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/ie/ee554869.aspx&quot;&gt;Microsoft’s detailed steps&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;They will help you get the prerequisites installed as well.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>How to Create a Brightcove Player Logo Overlay</title>
   <link href="https://www.benramey.com/2012/02/03/how-to-create-a-brightcove-player-logo-overlay/"/>
   <updated>2012-02-03T00:00:00-06:00</updated>
   <id>https://www.benramey.com/2012/02/03/how-to-create-a-brightcove-player-logo-overlay</id>
   <content type="html">&lt;p&gt;As simple as it ended up being, it took me quite a while to figure out how to correctly add a simple overlaying graphic to a Brightcove video player yesterday.  It involves a couple of steps which I did not find clearly laid out anywhere I looked.  So, I thought a nice little step-by-step blog post would be helpful to anyone else looking for the same thing.&lt;/p&gt;

&lt;p&gt;First, Brightcove has a nice and easy method (I say that because it looks easy…I didn’t try this method) of adding logo overlays to an individual video.  You just:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Log into your video cloud Brightcove Studio&lt;/li&gt;
  &lt;li&gt;Click on the Media icon in the top navigation bar&lt;/li&gt;
  &lt;li&gt;Find and select your video (by clicking on it)&lt;/li&gt;
  &lt;li&gt;Click on the Edit button at the bottom of the list of videos&lt;/li&gt;
  &lt;li&gt;Follow the process outlined on the Logo Overlay tab of the Edit popup&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This isn’t what I wanted though.  I needed these videos to appear logo-free in certain instances.  So, the best solution was to use one player in the instance where I didn’t need a logo and then use a different player that included the logo overlay for my other scenario.  That required add an overlay to a player, not a video.&lt;/p&gt;

&lt;p&gt;So, on to the solution!&lt;/p&gt;

&lt;p&gt;##Step One: Create a new player template
This part is easy.  Actually, all the parts are easy.  You just need to know what to do.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Under the Publishing tab in your Brightcove Studio, click on All Templates in the left sidebar.&lt;/li&gt;
  &lt;li&gt;Select one of the templates that Brightcove gives you and duplicate it (use the Duplicate button at the bottom of the list of templates)&lt;/li&gt;
  &lt;li&gt;Select your new template and click on the Edit button&lt;/li&gt;
  &lt;li&gt;In the Layout field (the XML that describes the player), add an Image element inside the Layout element.  See the BEML reference documentationfor details.  Here is what my Image element looks like:&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;Image&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;logoOverlay&quot;&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;50&quot;&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;50&quot;&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;scaleMode=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;exactFit&quot;&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;visible=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{!videoPlayer.menu.open}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;All of the attributes are optional except the id attribute.  It doesn’t have to be named “logoOverlay”, but you have to have something there.  Notice the value for my “visible” attribute.  This ensures that my logo disappears when the video is done and doesn’t awkwardly overlay any of the video menu UI elements.  Remove it if you want your logo to display the whole time.  Also note the “x” and “y” values.  Change these to your liking.  You might have to wait to finish Step Two below when you’ve added a logo and then you can test a video with your player to see where the logo fits best.  From there, you can keep adjusting your logo until you’re satisfied.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Now click on All Players in the left sidebar and then click on the New Player button at the bottom&lt;/li&gt;
  &lt;li&gt;Create a new player with whatever name is appropriate from the template you just created&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That’s it for the template!  You’re done with Step One.&lt;/p&gt;

&lt;p&gt;##Step Two: Add Your Logo
I figured out step one all on my own pretty quickly.  I figured out step two all on my own too, but it look a lot longer!&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Under the Publishing tab (you’re probably already there), click on All Players in the left sidebar&lt;/li&gt;
  &lt;li&gt;Select the player you just created in Step One and click on the Styles button at the bottom of the page.&lt;/li&gt;
  &lt;li&gt;If you gave your Image element an id (you should have!), then you should see an item underneath Editable Areas in the right sidebar with the same name as your Image id.  Click on it.&lt;/li&gt;
  &lt;li&gt;Just below (also in the right sidebar), you should now see an Image Selection tab in the Edit pane&lt;/li&gt;
  &lt;li&gt;Click on Upload and upload your logo (or whatever image).&lt;/li&gt;
  &lt;li&gt;Add a URL that the image links to and a tooltip to show when you hover over the image, if you want&lt;/li&gt;
  &lt;li&gt;Click on Save &amp;amp; Close&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You’re done!  Now, any video you display with that player will have a logo overlay.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Formatting multiple XML files at a time</title>
   <link href="https://www.benramey.com/2011/12/14/formatting-multiple-xml-files-at-a-time/"/>
   <updated>2011-12-14T00:00:00-06:00</updated>
   <id>https://www.benramey.com/2011/12/14/formatting-multiple-xml-files-at-a-time</id>
   <content type="html">&lt;p&gt;I recently had a situation where I needed to compare many XML files generated by a program of one version to the same set of XML files produced by a previous version of the same program. Unfortunately, the sets of XML files were formatted differently and so doing a file comparison with Beyond Compare (a GREAT file comparison tool, by the way) was going to be useless.&lt;/p&gt;

&lt;p&gt;So, I started looking for a way to quickly format all the files in each set the same way with one program. I looked into using Notepad++ which has a great XML Tools plugin (look for it under Plugins &amp;gt; Plugin Manager). I tried combining the plugin’s formatting commands with a macro that would format the XML file, save it and close it. So, I could easily open the few hundred files I had to format in Notepad++ (one set at a time), then run the macro multiple times (Macro &amp;gt; Run a Macro Multiple Times…). This would run through each file until all were formatted and closed. However, after working with it for a while, I couldn’t get the Notepad++ macro system to actual perform the XML Tools plugin format command. The macro would successfully run, saving and closing the file. But, when I checked the files they had not been formatted. I worked with it for a while, but could not figure out what the matter was.&lt;/p&gt;

&lt;p&gt;I knew the real solution had to be some type of command-line utility and a batch file. So, I started looking into that. The solution I ended up with was just that.&lt;/p&gt;

&lt;p&gt;First of all, I found HTML Tidy which I could run from the Windows command line to format a file. Using a configuration file for the tidy.exe (placed in the same directory as tidy.exe and named tidcfg.ini–although neither matters, see below) that looked like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;indent:yes
indent-attributes:yes&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I got the formatting I wanted.&lt;/p&gt;

&lt;p&gt;Now, all I had to do was brush up on my Windows batch command skills to run tidy.exe on multiple files. Easy enough! This is what my batch file looked like:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;for /d %%X in (C:\&amp;lt;path_to_parent_directory&amp;gt;\*) do (c:\&amp;lt;path_to_tidy.exe&amp;gt;\tidy.exe -m -xml -config c:\&amp;lt;path_to_tidy.ini_file&amp;gt;\tidycfg.ini %%X\&amp;lt;xml_file_name&amp;gt;.xml)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I had a folder structure where there were hundreds of directories inside this one parent directory. Each of the child directories had a single XML file in it. Therefore, I needed the C:&amp;lt;path_to_parent_directory&amp;gt;* wildcard.&lt;/p&gt;

&lt;p&gt;So, what this batch file does is simply look at each child directory (with the /d switch) in my parent directory. In each directory it runs (do) the tidy.exe program, tells it to modify the input file itself (-m) instead of saving the formatted XML to another file, tells it that the input file is valid XML (-xml) and then tells it where the tidycfg.ini file is (-config). Finally, it tells tidy.exe to take the current directory (%%X) and use the &lt;xml_file_name&gt;.xml file as the input file to format.&lt;/xml_file_name&gt;&lt;/p&gt;

&lt;p&gt;This little set up worked very well and quickly formatted all of my files in the same way so that I could successfully compare them with Beyond Compare.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Blank SharePoint Site Problem</title>
   <link href="https://www.benramey.com/2011/12/01/blank-sharepoint-site-problem/"/>
   <updated>2011-12-01T00:00:00-06:00</updated>
   <id>https://www.benramey.com/2011/12/01/blank-sharepoint-site-problem</id>
   <content type="html">&lt;p&gt;##Problem
A SharePoint site renders completely blank in the browser. It shows up immediately without any “processing” time and when looking at the HTML source for the page, it is completely blank–no HTML tags whatsoever.&lt;/p&gt;

&lt;p&gt;##Solution
In my case, the web.config file for the SharePoint application had duplicate entries in the system.webServer/handlers and system.webServer/modules elements. Once I removed those, the site rendered as expected.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>jQuery Tools Overlay v1.2.5 Bug</title>
   <link href="https://www.benramey.com/2011/11/21/jquery-tools-overlay-v1-2-5-bug/"/>
   <updated>2011-11-21T00:00:00-06:00</updated>
   <id>https://www.benramey.com/2011/11/21/jquery-tools-overlay-v1-2-5-bug</id>
   <content type="html">&lt;p&gt;##Problem
I noticed a bug in the jQuery Tools library today, specifically in version 1.2.5 and the Overlay plugin. I should say, I’m assuming it’s a bug. This is an existing website I am working on where I am not in a position to upgrade the jQuery Tools library to the latest version (1.2.6 is out, it looks like) and I don’t know how much of the problem may be due to how existing code is possibly interfering with the library.&lt;/p&gt;

&lt;p&gt;In any case, the bug showed up when I had an existing overlay showing and wanted to show another overlay. By default, the library allows one overlay at a time. This was fine with me as I needed to close the existing overlay before showing the new one. The library handles this automatically. However, when the second overlay was displayed, the mask would not display and the z-index was not set, so it showed up behind other content.&lt;/p&gt;

&lt;p&gt;##Solution
While it’s somewhat of a hack, the best solution I found was to simply remove the div that Overlay creates with id “exposeMask” before I display the second overlay.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$(“#exposeMask”).remove();&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I believe this is what is happening: when the first overlay is closed by the library, it doesn’t properly handle the existing exposeMask div and so when the second overlay shows it misunderstands the mask to be displaying properly and doesn’t calculate its own display values properly. Therefore, its z-index is wrong (or non-existing) and the mask remains hidden (because the library hid it when it closed the first overlay).&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>ANSI/UTF-8 Encoding Problem</title>
   <link href="https://www.benramey.com/2011/11/14/ansiutf-8-encoding-problem/"/>
   <updated>2011-11-14T00:00:00-06:00</updated>
   <id>https://www.benramey.com/2011/11/14/ansiutf-8-encoding-problem</id>
   <content type="html">&lt;p&gt;##Problem
I ran into a problem in a project I was working on recently.  The basics of the project were to take data out of a MySQL database and transform that data into an XML file schema for a
&lt;a href=&quot;http://day.com/day/en/products.html&quot;&gt;Day CQ5 CMS&lt;/a&gt;
&lt;a href=&quot;http://www.ibm.com/developerworks/java/library/j-jcr/&quot;&gt;Java Content Repository (JCR)&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I kept running into an issue with certain text fields of user-entered data where I would get all these funky, special characters in the text.  I knew it had to be some kind of encoding issue where I wasn’t outputting or getting the data with the right character encoding.&lt;/p&gt;

&lt;p&gt;I don’t know much about character encoding, except that there is a difference between them!&lt;/p&gt;

&lt;p&gt;##Solution
After some digging around and playing with Notepad++ (where I could switch the encoding of the text), I found at least a glimmer of hope.  When I had the character encoding set to ANSI in Notepad++, pasted in the troublesome text, and then switched the encoding to UTF-8, all of my problems disappeared.&lt;/p&gt;

&lt;p&gt;So, eventually, I came up with these few lines of code which convert the encoding of my text and fixed all of my problems.  Woohoo!&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;n&quot;&gt;Encoding&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;targetEncoding&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Encoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetEncoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1252&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;utf8Bytes&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;targetEncoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetBytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ansiBytes&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Encoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Convert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Encoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UTF8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;targetEncoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;utf8Bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;targetEncoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ansiBytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;What this simple code does is first get the Encoding for the ANSI character encoding (1252 is ANSI, apparently). It then gets the bytes of the string with the ANSI encoding, converts them from the ANSI encoding to UTF-8 encoding and then gets the string with the ANSI encoding.&lt;/p&gt;

&lt;p&gt;So, quite honestly, I’m not 100% sure why this works. The Notepad++ experiment would seem to indicate the opposite: that I had to convert from ANSI to UTF-8. But, that only compounded the problem when I wrote it that way in code. When I reversed the conversion, it worked as I was hoping.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>File Name Sanitizer One-Liner</title>
   <link href="https://www.benramey.com/2011/08/24/file-name-sanitizer-one-liner/"/>
   <updated>2011-08-24T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2011/08/24/file-name-sanitizer-one-liner</id>
   <content type="html">&lt;p&gt;I find myself often having to sanitize file names and paths because I’m creating files from some kind of user input that I’m unsure about.  I found this handy way of doing this in one line today:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;fileName = Path.GetInvalidFileNameChars().Aggregate(fileName, (name, c) =&amp;gt; name.Replace(c, ‘_’));&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Note that the same goes for paths. The only thing that changes is the static method you use from Path:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;filePath = Path.GetInvalidPathChars().Aggregate(filePath , (name, c) =&amp;gt; name.Replace(c, ‘_’));&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</content>
 </entry>
 
 <entry>
   <title>Opening all SharePoint 2010 Documents in a new window</title>
   <link href="https://www.benramey.com/2011/04/25/opening-all-sharepoint-2010-documents-in-a-new-window/"/>
   <updated>2011-04-25T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2011/04/25/opening-all-sharepoint-2010-documents-in-a-new-window</id>
   <content type="html">&lt;p&gt;We wanted an easy solution to open every document in a SharePoint from a document library in a new window.  This way, the user stays on the page he is originally on and the document (PDF, Word doc, Excel files–whatever) will open in a blank window.&lt;/p&gt;

&lt;p&gt;I don’t know of any way to do this via a setting in SharePoint, but a little JavaScript employing jQuery does the job just perfectly.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;// has to be on an interval for grouped doc libraries&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;// where the actual links are loaded only once a group&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;// is expanded&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;setInterval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
			&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;a[onclick*=’return DispEx’][target!=’_blank’]&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
					&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;_blank&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
					&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;removeAttr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;onclick&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

				&lt;span class=&quot;c1&quot;&gt;// document type icons&lt;/span&gt;
				&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;td.ms-vb-icon&amp;gt;img[onclick]:not([documentUrl])&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
					&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
						&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;documentUrl&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;_blank&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
						&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stopPropagation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
						&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;preventDefault&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
						&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
					&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
					&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
						&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
							&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;documentUrl&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
							&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;onclick&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
								&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
								&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;&quot;'{}&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
								&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
							&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
						&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onclick&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
					&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
				&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
				&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This JavaScript takes into account that some Document Libraries are grouped and so not all the document links (or icon links) will appear on the page load. This is the reason for the half-second interval.  At the most half a second after the group is expanded the newly loaded links will be altered to also open in a new window.&lt;/p&gt;

&lt;p&gt;You’ll notice that there are two things happening on each interval.  The first line does any Title links for the document.  The second line (and following) handles the document type icons that are also links to the document.  Note that if you want only one or the other link to open in a new window (for example, on the document type icon opens in a new window and the Title link opens in the same window) then all you need to do is remove the appropriate line.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Duplicating SPWebConfigModifications</title>
   <link href="https://www.benramey.com/2010/12/10/duplicating-spwebconfigmodifications/"/>
   <updated>2010-12-10T00:00:00-06:00</updated>
   <id>https://www.benramey.com/2010/12/10/duplicating-spwebconfigmodifications</id>
   <content type="html">&lt;p&gt;##Problem
Despite everything looking OK (no duplicate SPWebConfigModifications for your web application), your SPWebConfigModifications are adding duplicate elements to your web.config file.&lt;/p&gt;

&lt;p&gt;##Solution (at least one possible one)
I ran into this problem today and discovered that in the Name property of the SPWebConfigModification I was not wrapping an attribute value in single quotes.  Since the actual Value property of the SPWebConfigModification had quotes around the attribute value, whenever the SPWebConfigModification was applied, it could not find the existing element and therefore would add a second, duplicate element.&lt;/p&gt;

&lt;p&gt;In other words, this is wrong for the SPWebConfigModification Name: “add[@name=valueOfAttribute]“.&lt;/p&gt;

&lt;p&gt;This is correct: “add[@name=’valueOfAttribute’]“&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Add SharePoint 2010 Central Admin Web Applications Page Ribbon Button</title>
   <link href="https://www.benramey.com/2010/11/02/add-sharepoint-2010-central-admin-web-applications-page-ribbon-button/"/>
   <updated>2010-11-02T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2010/11/02/add-sharepoint-2010-central-admin-web-applications-page-ribbon-button</id>
   <content type="html">&lt;p&gt;I finally figured out today how to add a button to the Central Admin site’s ribbon for the WebApplicationsList page and have it behave like the other ribbon buttons on this page. The problem wasn’t so much adding the button–that part was easy. The problem was getting the button to behave like the other buttons. That is, getting it to enable and disable when a web application was selected from the list.&lt;/p&gt;

&lt;p&gt;It was pretty easy to find the methods for the new SharePoint 2010 javascript API to see if a list item is selected in a list and then make decisions based on that. The SP.UI.ListOperation.Selection methods are great for that. However, the WebApplicationList (http:///_admin/WebApplicationList.aspx) page list in the Central Administration site is not a list and so these methods don’t work.&lt;/p&gt;

&lt;p&gt;I had to do some digging in the SharePoint 2010 javacript files to find what I was looking for. I found what I was looking for in the C:\Program Files\Common Files\Microsoft Shared\Web Server Extensions\14\TEMPLATE\LAYOUTS\SP.UI.Admin.debug.js file. This is the debug version of the SP.UI.Admin.js file (so it’s possible to read it) that gets included on these pages. It includes a set of methods beginning with “SP.UI.Admin.WebApplicationPageComponent” that are used for the WebApplicationsList page.&lt;/p&gt;

&lt;p&gt;What you want is the SP.UI.Admin.WebApplicationPageComponent.get_selectedItem method. This method returns an object containing information about the selected web application on the page.&lt;/p&gt;

&lt;p&gt;Here is my final CustomAction XML for the button that enables the button when a web application is selected from the list and then opens up a dialog window when the button is clicked, passing the web application ID to the page that opens in the dialog box.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Cookie.Expires from ASP.NET Request Object Always DateTime.MinValue</title>
   <link href="https://www.benramey.com/2010/10/12/cookie-expires-from-asp-net-request-object-always-datetime-minvalue/"/>
   <updated>2010-10-12T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2010/10/12/cookie-expires-from-asp-net-request-object-always-datetime-minvalue</id>
   <content type="html">&lt;p&gt;I’ve been working on a problem today involving cookies with one of our web applications.  The cookie is keeping track of a user’s authenticated session and it’s timing people out too soon.  So, I was checking the expiration time of the cookie coming in from the browser and it was returning 1/1/0001 12:00AM every time.  I thought this might be the source of my problem, but resetting the cookie and the expiration time did not help the next round-trip to the server.  The cookie still read the DateTime.MinValue time.&lt;/p&gt;

&lt;p&gt;I found this article: &lt;a href=&quot;http://www.eggheadcafe.com/tutorials/aspnet/198ce250-59da-4388-89e5-fce33d725aa7/aspnet-cookies-faq.aspx&quot;&gt;http://www.eggheadcafe.com/tutorials/aspnet/198ce250-59da-4388-89e5-fce33d725aa7/aspnet-cookies-faq.aspx&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The articles explains why this happens.  The summary:  the browser maintains the cookie and handles its expiration.  Therefore, it does not send this information back to the server when making a request.  So, you can never read the expiration time of a cookie on the server from the Request object.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Error occurred in deployment step ‘Recycle IIS Application Pool’: The local SharePoint server is not available. Check that the server is running and connected to the SharePoint farm.</title>
   <link href="https://www.benramey.com/2010/10/08/error-occurred-in-deployment-step-recycle-iis-application-pool-the-local-sharepoint-server-is-not-available-check-that-the-server-is-running-and-connected-to-the-sharepoint-farm/"/>
   <updated>2010-10-08T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2010/10/08/error-occurred-in-deployment-step-recycle-iis-application-pool-the-local-sharepoint-server-is-not-available-check-that-the-server-is-running-and-connected-to-the-sharepoint-farm</id>
   <content type="html">&lt;p&gt;I got the above error today while trying to deploy a SharePoint 2010 project in Visual Studio 2010.  Very frustrating!!&lt;/p&gt;

&lt;p&gt;The answer turned out to be simple enough, though no clues are really provided in the error message (typical).  I had to add my user account to the db_owner role for the SharePoint_Admin database that the site I was deploying to was using.&lt;/p&gt;

&lt;p&gt;Once I did that, the deployment in Visual Studio did just great.&lt;/p&gt;

&lt;p&gt;The following post led me to the solution: &lt;a href=&quot;http://social.technet.microsoft.com/Forums/en-US/sharepoint2010programming/thread/a97a8413-a0ae-47f2-aab7-fae1cf40595a&quot;&gt;http://social.technet.microsoft.com/Forums/en-US/sharepoint2010programming/thread/a97a8413-a0ae-47f2-aab7-fae1cf40595a&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>SharePoint 2007 to 2010 in-place upgrade serviceHostingEnvironment error</title>
   <link href="https://www.benramey.com/2010/10/06/sharepoint-2007-to-2010-in-place-upgrade-servicehostingenvironment-error/"/>
   <updated>2010-10-06T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2010/10/06/sharepoint-2007-to-2010-in-place-upgrade-servicehostingenvironment-error</id>
   <content type="html">&lt;p&gt;I’m testing an in-place SharePoint 2007 to SharePoint 2010 upgrade today and I came across this odd error during the update process.&lt;/p&gt;

&lt;p&gt;I successfully installed SharePoint 2010 and proceeded to run the configuration wizard which updates 2007 to 2010.  The configuration process would always fail with an error in the Central Administration web.config file.  Viewing the configuration log file (the configuration wizard provided the location of it) turned up the error.&lt;/p&gt;

&lt;p&gt;Apparently, at some point in the process the configuration wizard looks for the serviceHostingEnvironment element under the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;system.serviceModel&amp;gt;&lt;/code&gt; section in the Central Administration web.config.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;serviceHostingEnvironment&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;aspNetCompatibilityEnabled=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;”true”&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If it doesn’t find it adds it itself, but curiously, it wraps it in an incomplete system.serviceModel tag so it looks like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;system.serviceModel&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;serviceHostingEnvironment&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;aspNetCompatibilityEnabled=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;”true”&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/system.serviceModel&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This then caused the configuration wizard to bomb out.&lt;/p&gt;

&lt;p&gt;The simple solution was to just add the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;serviceHostingEnvironment aspNetCompatibilityEnabled=”true” /&amp;gt;&lt;/code&gt; element under my existing &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;system.serviceModel&amp;gt;&lt;/code&gt; section.  The wizard completed just fine after this.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Determine SharePoint MOSS 2007 Service Pack Version</title>
   <link href="https://www.benramey.com/2010/10/06/determine-sharepoint-moss-2007-service-pack-version/"/>
   <updated>2010-10-06T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2010/10/06/determine-sharepoint-moss-2007-service-pack-version</id>
   <content type="html">&lt;p&gt;Determining the service pack that you have installed for a particular
SharePoint 2007 installation turned out to be a surprisingly opaque process.
I found this very clear and helpful blog post dealing with just this
determination:
&lt;a href=&quot;http://techpunch.wordpress.com/2008/10/15/sharepoint-2007-moss-how-to-determine-service-pack-version/&quot;&gt;http://techpunch.wordpress.com/2008/10/15/sharepoint-2007-moss-how-to-determine-service-pack-version/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To give a quick overview, the right way to determine the installed service pack is to look up the version of SharePoint that you have installed and match it against a table (available at the link above) of version numbers to service packs.&lt;/p&gt;

&lt;p&gt;Determine your SharePoint version by logging into your Central Administration site and going to Operations &amp;gt; Servers In Farm &amp;gt; Database Schema Version. Your SharePoint version will be listed in the table of servers in the farm.&lt;/p&gt;

&lt;p&gt;Note that the link above only has version numbers listed through SP1 (the post is from October 2008). Use this link to get a more up-to-date listing of version numbers:
&lt;a href=&quot;http://www.sharepointdesignerstepbystep.com/Blog/Articles/How%20To%20find%20the%20SharePoint%20version.aspx&quot;&gt;http://www.sharepointdesignerstepbystep.com/Blog/Articles/How%20To%20find%20the%20SharePoint%20version.aspx&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Visual Studio Post Build Event to Copy DLLs</title>
   <link href="https://www.benramey.com/2010/06/29/visual-studio-post-build-event-to-copy-dlls/"/>
   <updated>2010-06-29T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2010/06/29/visual-studio-post-build-event-to-copy-dlls</id>
   <content type="html">&lt;p&gt;While doing SharePoint development, we use a lot of pre- and post-build events in Visual Studio projects to do various things like build and deploy SharePoint solutions to our development environments, activate features automatically and other similar things to make the process of building solutions for SharePoint as automated as possible.&lt;/p&gt;

&lt;p&gt;One helpful way I’ve been able to use post-build events is to copy the compiled DLLs for a given project to the inetpub directory for the SharePoint site I am currently working on. As I’m building a new feature or debugging an existing one, I like to build a lot of see my changes as I go. Well, building and deploying the entire SharePoint solution is a rather lengthy process it’s only really necessary if you’re changing ASPX pages or updating a feature XML file or something like that. If all I did was come C# code changes, that’s too much to wait through to see my changes. So, what I do is put a small post-build event in my projects that I’m working with that copies the DLLs for that project to my SharePoint site’s inetpub directory and I skip the whole SharePoint solution build and deployment step.&lt;/p&gt;

&lt;p&gt;Adding a post-build event couldn’t be much simpler either. In Visual Studio just right-click on the project you want to add the post-build event for in Solution Explorer and select “Properties”. You can either do that or, with the project selected in Solution Explorer, hit Alt-Enter. The project properties window will display. On the left-hand side, click the “Build Events” tab. You’ll see two boxes there. One is for pre-build events and one is for post-build events.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;In the post-build events textbox add the following:
IF NOT ($(ConfigurationName)) == (Debug) GOTO END
cd $(ProjectDir)
copy /y bin\debug\*.dll C:\inetpub\wwwroot\wss\VirtualDirectories\{YOUR SHAREPOINT SITE DIRECTORY}\bin
copy /y bin\debug\*.pdb C:\inetpub\wwwroot\wss\VirtualDirectories\{YOUR SHAREPOINT SITE DIRECTORY}\bin
:END&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;These are just basic Windows batch commands like you’d find in any Windows batch file. This is a very basic setup, but it should be a good starting point for you to work from. All it does is check whether you are building with your Debug build configuration, if you are, then it moves to your project directory and copies the DLLs in your bin\debug folder to the bin folder of your SharePoint site.&lt;/p&gt;

&lt;p&gt;Easy enough!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Vertical text with CSS</title>
   <link href="https://www.benramey.com/2010/06/29/vertical-text-with-css/"/>
   <updated>2010-06-29T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2010/06/29/vertical-text-with-css</id>
   <content type="html">&lt;p&gt;I found a nice blog post today describing how to do vertical text with CSS. Instead of reposting his information, I’ll just give the link.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://scottgale.com/blog/css-vertical-text/2010/03/01/&quot;&gt;http://scottgale.com/blog/css-vertical-text/2010/03/01/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It’s a nice technique using various proprietary methods since there is no standard way to get vertical text across the major browsers right now.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Converting a Hexadecimal Color to a System.Drawing.Color Object</title>
   <link href="https://www.benramey.com/2009/09/24/converting-a-hexadecimal-color-to-a-system-drawing-color-object/"/>
   <updated>2009-09-24T00:00:00-05:00</updated>
   <id>https://www.benramey.com/2009/09/24/converting-a-hexadecimal-color-to-a-system-drawing-color-object</id>
   <content type="html">&lt;p&gt;I try to avoid setting styles in my code as much as possible. However, I ran across a case using a DevExpress PageControl control where there was no possible way to set a certain border by using CSS. This is because DevExpress wisely (read sarcasm) uses “border-color: #whatever !important” in the element’s style attribute. So, there is no way to override that style except by setting it on the control in code (or your aspx page).&lt;/p&gt;

&lt;p&gt;The particular border I needed is the ContentStyle.Border border of the ASPxPageControl and I needed to set the BorderColor property which is a System.Drawing.Color object. There isn’t any straightforward way to get a Color object from a hexadecimal color using the Color object itself. You have to use the ColorTranslator (also in the System.Drawing namespace) which gives you a FromHtml method and returns the correct Color object.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;n&quot;&gt;Color&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hexColor&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ColorTranslator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;FromHtml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;“#&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;666666&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;″&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Thanks to this guy for the quick answer:
&lt;a href=&quot;http://www.akxl.net/labs/articles/converting-a-hexadecimal-color-to-a-system.drawing.color-object/&quot;&gt;http://www.akxl.net/labs/articles/converting-a-hexadecimal-color-to-a-system.drawing.color-object/&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 

</feed>