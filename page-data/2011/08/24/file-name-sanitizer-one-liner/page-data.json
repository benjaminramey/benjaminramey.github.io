{"componentChunkName":"component---src-templates-post-js","path":"/2011/08/24/file-name-sanitizer-one-liner/","result":{"data":{"markdownRemark":{"html":"<p>I find myself often having to sanitize file names and paths because I’m creating files from some kind of user input that I’m unsure about.  I found this handy way of doing this in one line today:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"highlight-text\"><code class=\"highlight-text\">fileName = Path.GetInvalidFileNameChars().Aggregate(fileName, (name, c) =&gt; name.Replace(c, ‘_’));</code></pre></div>\n<p>Note that the same goes for paths. The only thing that changes is the static method you use from Path:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"highlight-text\"><code class=\"highlight-text\">filePath = Path.GetInvalidPathChars().Aggregate(filePath , (name, c) =&gt; name.Replace(c, ‘_’));</code></pre></div>","fields":{"slug":"/2011/08/24/file-name-sanitizer-one-liner/"},"frontmatter":{"title":"File Name Sanitizer One-Liner","formattedDate":"Wed Aug 24th 2011","isoDate":"2011-08-24T00:00:00.000Z","fromNowDate":"10 years ago","categories":["programming"],"tags":["command-line"]}},"site":{"siteMetadata":{"title":"Ben Ramey's Blog","tagline":"Scripture, programming problems, solutions and stories."}},"sitePage":{"path":"/dev-404-page/"}},"pageContext":{"slug":"/2011/08/24/file-name-sanitizer-one-liner/"}},"staticQueryHashes":[]}