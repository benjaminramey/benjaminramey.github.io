{"componentChunkName":"component---src-templates-post-js","path":"/2013/06/13/error-on-_vti_binowssvr-dllcs65001-when-creating-or-editing-a-sharepoint-list-view/","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<p>UPDATE (6/14/2013):\nAfter some further issues I encountered (unrelated to the OWSSVR.dll error, but on this module) I found out that the problem is with accessing query string parameters (at least). However, accessing the HttpRequest object’s Url property, for example, doesn’t cause this error.</p>\n</blockquote>\n<blockquote>\n<p>So, I moved my code back to the BeginRequest event (to solve my other problem) and then I just did a simple HttpContext.Current.Request.Url.AbsoluteUri.Contains(“owssvr”) check to go on and check the query string parameters or not.</p>\n</blockquote>\n<h2>Problem</h2>\n<p>I was recently very frustrated by the dreaded “Cannot complete this action” error on a SharePoint 2010 project when trying to edit or create a new view for any list.  I looked around and found several causes that others had pinpointed, but nothing really related to the specific situation I was seeing.  I wasn’t seeing this on a particular list or set of lists.  I could create an out-of-the-box SharePoint Document Library and get this error when trying to edit or create a view.</p>\n<p>What finally got me on the right track was this link here that a co-worker of mine found:</p>\n<p><a href=\"http://social.msdn.microsoft.com/Forums/en-US/sharepointdevelopmentprevious/thread/ea0b1380-480f-4b2e-afde-77ed06995bb0\">MSDN forum thread</a></p>\n<p>In a response to the question in that thread, it is mentioned that accessing the SPContext static object in an HttpModule causes this error when the /<em>vti</em>bin/owssvr.dll is accessed.  Great!  There was only one problem for me: my HttpModule was not accessing the SPContext object anywhere. Nevertheless, when I removed my HttpModules from the web.config, the list editing and creation worked.  So, it was definitely something with my modules.</p>\n<p>Still, the post mentioned above got me on the right track.  By commenting out code a bit at a time, I narrowed the problem down to a check for the HttpContext.Current.Request object that I was performing.  This is probably the same error that is caused by the SPContext object, since, as I understand it, the SPContext object just wraps the HttpContext object.</p>\n<p>I had the following code in my HttpModule.  Here is what Init method looked like:</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"highlight-csharp\"><code class=\"highlight-csharp\"><span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Init</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpApplication</span> context<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  context<span class=\"token punctuation\">.</span>BeginRequest <span class=\"token operator\">+=</span> SetupOutputFilter<span class=\"token punctuation\">;</span>\n  context<span class=\"token punctuation\">.</span>PreSendRequestHeaders <span class=\"token operator\">+=</span> WritePdfHeaders<span class=\"token punctuation\">;</span>\n  context<span class=\"token punctuation\">.</span>PreSendRequestContent <span class=\"token operator\">+=</span> WritePdfToOutput<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Commenting out the tie into the BeginRequest event fixed the issue, so it had to be something there. SetupOutputFilter looked like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"highlight-csharp\"><code class=\"highlight-csharp\"><span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">SetupOutputFilter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>IsPdfRequest<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token class-name\">HttpResponse</span> response <span class=\"token operator\">=</span> HttpContext<span class=\"token punctuation\">.</span>Current<span class=\"token punctuation\">.</span>Response<span class=\"token punctuation\">;</span>\n  _pdfStream <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">PdfMemoryStream</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>Filter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  response<span class=\"token punctuation\">.</span>Filter <span class=\"token operator\">=</span> _pdfStream<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Commenting out the if expression also fixed the issue. My IsPdfRequest property looked like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"highlight-csharp\"><code class=\"highlight-csharp\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> IsPdfRequest\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">get</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">!</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">.</span><span class=\"token function\">IsNullOrEmpty</span><span class=\"token punctuation\">(</span>HttpContext<span class=\"token punctuation\">.</span>Current<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">[</span><span class=\"token string\">\"as\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n          <span class=\"token operator\">&amp;&amp;</span> HttpContext<span class=\"token punctuation\">.</span>Current<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">[</span><span class=\"token string\">\"as\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"pdf\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>And there you have my access to the HttpContext object. I kind of needed this though, so I thought it might be a timing issue. Maybe accessing this on BeginRequest was the problem. I took a look at the ordering of the HttpModule events to find a good replacement. This StackOverflow thread helped me there:</p>\n<p><a href=\"http://stackoverflow.com/questions/441421/httpmodule-event-execution-order\">StackOverflow thread</a></p>\n<h2>Solution</h2>\n<p>By switching my SetOutputFilter method from the BeginRequest event to the PostReleaseRequestState event, I was able to fix the issue.</p>\n<p>So, the lesson here is this: if you need HttpModules for your SharePoint 2010 project, make sure they do not access the HttpContext object anywhere in the BeginRequest event.</p>","fields":{"slug":"/2013/06/13/error-on-_vti_binowssvr-dllcs65001-when-creating-or-editing-a-sharepoint-list-view/"},"frontmatter":{"title":"Error on /_vti_bin/owssvr.dll?cs=65001 When Creating or Editing a SharePoint List View","formattedDate":"Thu Jun 13th 2013","isoDate":"2013-06-13T00:00:00.000Z","fromNowDate":"9 years ago","categories":["programming"],"tags":["sharepoint"]}},"site":{"siteMetadata":{"title":"Ben Ramey's Blog","tagline":"Scripture, programming problems, solutions and stories."}},"sitePage":{"path":"/dev-404-page/"}},"pageContext":{"slug":"/2013/06/13/error-on-_vti_binowssvr-dllcs65001-when-creating-or-editing-a-sharepoint-list-view/"}},"staticQueryHashes":[]}